{"version":3,"file":"configurator-DlJs7YFV.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../src/lib/api/client.js","../../src/lib/utils/sanitizer.js","../../src/lib/stores/configuration.svelte.js","../../src/lib/api/session-client.js","../../src/lib/stores/configuration-session.svelte.js","../../src/lib/components/LoadingSpinner.svelte","../../src/lib/components/ErrorBoundary.svelte","../../src/lib/components/Tooltip.svelte","../../src/lib/components/OptionCard.svelte","../../src/lib/components/OptionGroup.svelte","../../src/lib/components/ConfigurationSummary.svelte","../../src/lib/ConfiguratorApp.svelte","../../src/lib/components/PricingDisplay.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.34.3';\nexport const PUBLIC_VERSION = '5';\n","// web/src/lib/api/client.js\nclass ConfiguratorApiClient {\n  constructor(baseUrl, options = {}) {\n    // Use relative URL when running in dev mode to leverage Vite proxy\n    const defaultUrl = window.location.hostname === 'localhost' && window.location.port === '5173' \n      ? '/api/v1' \n      : 'http://localhost:8080/api/v1';\n    this.baseUrl = baseUrl || window.__API_BASE_URL__ || defaultUrl;\n    this.modelId = options.modelId;\n    this.authToken = options.authToken || localStorage.getItem('auth_token');\n    this.timeout = options.timeout || 30000;\n\n    console.log('API Client initialized:', {\n      baseUrl: this.baseUrl,\n      modelId: this.modelId,\n      hasAuth: !!this.authToken\n    });\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseUrl}${endpoint}`;\n    console.log(`API Request: ${options.method || 'GET'} ${url}`);\n\n    const config = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(this.authToken && { 'Authorization': `Bearer ${this.authToken}` }),\n        ...options.headers\n      },\n      ...options\n    };\n\n    if (config.body && typeof config.body === 'object') {\n      config.body = JSON.stringify(config.body);\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n      const response = await fetch(url, {\n        ...config,\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (e) {\n          errorData = { message: response.statusText };\n        }\n        \n        const errorMessage = errorData.message || errorData.error || `HTTP ${response.status}`;\n        console.error(`API Error Response from ${endpoint}:`, {\n          status: response.status,\n          statusText: response.statusText,\n          errorData,\n          url\n        });\n        \n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.data = errorData;\n        throw error;\n      }\n\n      const result = await response.json();\n\n      // Debug logging for development\n      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n        console.log(`API Response from ${endpoint}:`, result);\n      }\n\n      // Handle wrapped responses from backend\n      if (result && typeof result === 'object' && result.success !== undefined && result.data !== undefined) {\n        return result.data;\n      }\n\n      // Return result or empty array/object for safety\n      return result ?? (endpoint.includes('/groups') || endpoint.includes('/options') || endpoint.includes('/rules') ? [] : {});\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout');\n      }\n      console.error(`API Error for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  // Model Management\n  async getModel() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const model = await this.request(`/models/${this.modelId}`);\n\n    // Ensure we have proper structure\n    if (!model.option_groups && model.groups) {\n      model.option_groups = model.groups;\n    }\n\n    // Log the model structure for debugging\n    console.log('Model structure:', {\n      hasGroups: !!model.groups,\n      hasOptionGroups: !!model.option_groups,\n      hasOptions: !!model.options,\n      groupsCount: model.groups?.length || model.option_groups?.length || 0,\n      optionsCount: model.options?.length || 0\n    });\n\n    return model;\n  }\n\n  async getModelGroups() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/groups`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelOptions() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/options`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelRules() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/rules`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelPricingRules() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/pricing-rules`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelStatistics() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/statistics`);\n  }\n\n  // Configuration Management\n  async createConfiguration(selections = []) {\n    return this.request('/configurations', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        name: `Configuration ${new Date().toISOString()}`,\n      }\n    });\n  }\n\n  async getConfiguration(configId) {\n    return this.request(`/configurations/${configId}?model_id=${this.modelId}`);\n  }\n\n  async updateConfiguration(configId, updates) {\n    return this.request(`/configurations/${configId}`, {\n      method: 'PUT',\n      body: {\n        model_id: this.modelId,\n        ...updates,\n        selections: updates.selections ? this.formatSelections(updates.selections) : undefined\n      }\n    });\n  }\n\n  async deleteConfiguration(configId) {\n    return this.request(`/configurations/${configId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  async addSelections(configId, selections) {\n    return this.request(`/configurations/${configId}/selections`, {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async removeSelection(configId, optionId) {\n    return this.request(`/configurations/${configId}/selections/${optionId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  async validateConfiguration(configId) {\n    return this.request(`/configurations/${configId}/validate?model_id=${this.modelId}`, {\n      method: 'POST',\n      body: {\n        model_id: this.modelId\n      }\n    });\n  }\n\n  async validateSelections(selections) {\n    return this.request('/configurations/validate-selection', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async getAvailableOptions(configId) {\n    return this.request(`/configurations/${configId}/available-options`);\n  }\n\n  async getConstraints(configId) {\n    return this.request(`/configurations/${configId}/constraints`);\n  }\n\n  async getConfigurationSummary(configId) {\n    return this.request(`/configurations/${configId}/summary`);\n  }\n\n  async cloneConfiguration(configId) {\n    return this.request(`/configurations/${configId}/clone`, {\n      method: 'POST'\n    });\n  }\n\n  // Pricing Operations\n  // async calculatePrice(selections, context = {}) {\n  //   return this.request('/pricing/calculate', {\n  //     method: 'POST',\n  //     body: {\n  //       model_id: this.modelId,\n  //       selections: this.formatSelections(selections),\n  //       context\n  //     }\n  //   });\n  // }\n\n  async calculatePrice(configurationId, context = {}) {\n    try {\n      const response = await this.request(`/pricing/calculate`, {\n        method: 'POST',\n        body: {\n          model_id: this.modelId,\n          selections: context.selections || [],\n          customer_id: context.customer_id || null,\n          context: context.context || {}\n        }\n      });\n      return response;\n    } catch (error) {\n      console.error('Failed to calculate price:', error);\n      throw error;\n    }\n  }\n\n  async simulatePricing(scenarios) {\n    return this.request('/pricing/simulate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        scenarios\n      }\n    });\n  }\n\n  async validatePricing(selections, expectedPrice) {\n    return this.request('/pricing/validate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections),\n        expected_price: expectedPrice\n      }\n    });\n  }\n\n  async getPricingRules() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/pricing/rules/${this.modelId}`);\n  }\n\n  async getVolumeTiers() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/pricing/volume-tiers/${this.modelId}`);\n  }\n\n  // Model Builder Operations\n  async validateModel() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/validate`, {\n      method: 'POST'\n    });\n  }\n\n  async detectConflicts(ruleIds = []) {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/conflicts`, {\n      method: 'POST',\n      body: { rule_ids: ruleIds }\n    });\n  }\n\n  async analyzeImpact(changes) {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/impact`, {\n      method: 'POST',\n      body: changes\n    });\n  }\n\n  async getModelQuality() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/quality`, {\n      method: 'POST'\n    });\n  }\n\n  async getOptimizationRecommendations() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/optimize`, {\n      method: 'POST'\n    });\n  }\n\n  // Utility Methods\n  formatSelections(selections) {\n    if (Array.isArray(selections)) {\n      return selections;\n    }\n\n    // Convert object format to array format\n    return Object.entries(selections)\n        .filter(([_, quantity]) => quantity > 0)\n        .map(([option_id, quantity]) => ({\n          option_id,\n          quantity: parseInt(quantity) || 1\n        }));\n  }\n\n  // Batch Operations\n  async batchValidate(configurations) {\n    return this.request('/configurations/validate', {\n      method: 'POST',\n      body: { configurations }\n    });\n  }\n\n  async bulkCalculatePricing(configurations) {\n    return this.request('/pricing/bulk-calculate', {\n      method: 'POST',\n      body: { configurations }\n    });\n  }\n\n  // Health Check\n  async checkHealth() {\n    return this.request('/health');\n  }\n\n  async getStatus() {\n    return this.request('/status');\n  }\n}\n\nexport default ConfiguratorApiClient;","// web/src/lib/utils/sanitizer.js\n\n/**\n * Check if a string contains code patterns\n */\nexport function containsCode(text) {\n    if (typeof text !== 'string') return false;\n\n    const codePatterns = [\n        '=>',              // Arrow functions\n        'function',        // Function keyword\n        '$props',         // Svelte internals\n        '$',              // Any Svelte internal\n        '$.strict_equals', // Svelte runtime\n        'return ',         // Return statements\n        '${',              // Template literals\n        '() =>',           // Arrow function pattern\n        '} else',          // Control flow\n        'if (',            // Conditionals\n        '.selection_type',  // Property access that looks like code\n        'strict_equals',   // Function names\n        'min_selections',  // When preceded by dots\n        'max_selections',  // When preceded by dots\n    ];\n\n    return codePatterns.some(pattern => text.includes(pattern));\n}\n\n/**\n * Sanitize text by removing code patterns\n */\nexport function sanitizeText(text, fallback = '') {\n    // Handle non-string inputs\n    if (text === null || text === undefined) return fallback;\n\n    // Convert to string if needed\n    const textStr = String(text);\n\n    // Check if it's already a normal string\n    if (typeof text === 'string' && !containsCode(textStr)) {\n        return textStr;\n    }\n\n    // Log when we detect code\n    if (containsCode(textStr)) {\n        console.warn('[Sanitizer] Code pattern detected and removed:', {\n            original: textStr.substring(0, 100) + (textStr.length > 100 ? '...' : ''),\n            fallback: fallback\n        });\n        return fallback;\n    }\n\n    return textStr;\n}\n\n/**\n * Sanitize an entire object recursively\n */\nexport function sanitizeObject(obj, fields = ['name', 'description', 'label', 'title', 'text', 'value']) {\n    if (!obj || typeof obj !== 'object') return obj;\n\n    if (Array.isArray(obj)) {\n        return obj.map(item => sanitizeObject(item, fields));\n    }\n\n    const sanitized = { ...obj };\n\n    // Check all string properties, not just specific fields\n    Object.keys(sanitized).forEach(key => {\n        if (typeof sanitized[key] === 'string') {\n            const original = sanitized[key];\n            const cleaned = sanitizeText(original, '');\n            if (original !== cleaned) {\n                console.warn(`[Sanitizer] Cleaned field '${key}' in object`);\n                sanitized[key] = cleaned;\n            }\n        } else if (sanitized[key] && typeof sanitized[key] === 'object') {\n            // Recursively sanitize nested objects\n            sanitized[key] = sanitizeObject(sanitized[key], fields);\n        }\n    });\n\n    return sanitized;\n}\n\n/**\n * Create a safe text getter\n */\nexport function safeText(getValue, fallback = '') {\n    try {\n        const value = typeof getValue === 'function' ? getValue() : getValue;\n        return sanitizeText(String(value), fallback);\n    } catch (error) {\n        console.error('[Sanitizer] Error in safeText:', error);\n        return fallback;\n    }\n}\n\n/**\n * Debug helper to check if an object contains code\n */\nexport function debugCheckForCode(obj, path = '') {\n    if (!obj || typeof obj !== 'object') return;\n\n    Object.keys(obj).forEach(key => {\n        const value = obj[key];\n        const currentPath = path ? `${path}.${key}` : key;\n\n        if (typeof value === 'string' && containsCode(value)) {\n            console.error(`[Sanitizer] Code found at ${currentPath}:`, value);\n        } else if (value && typeof value === 'object') {\n            debugCheckForCode(value, currentPath);\n        }\n    });\n}","// web/src/lib/stores/configuration.svelte.js\nimport ConfiguratorApiClient from '../api/client.js';\nimport { sanitizeObject, debugCheckForCode } from '../utils/sanitizer.js';\n\nclass ConfigurationStore {\n  constructor() {\n    // Core state\n    this.modelId = $state('');\n    this.model = $state(null);\n    this.configuration = $state(null);\n    this.selections = $state({});\n    this.validationResults = $state(null);\n    this.pricingData = $state(null);\n    this.availableOptions = $state([]);\n    this.constraints = $state([]);\n\n    // Model data\n    this.groups = $state([]);\n    this.options = $state([]);\n    this.rules = $state([]);\n    this.pricingRules = $state([]);\n    this.volumeTiers = $state([]);\n\n    // Loading states\n    this.isLoading = $state(false);\n    this.isValidating = $state(false);\n    this.isPricing = $state(false);\n    this.isSaving = $state(false);\n\n    // Error handling\n    this.error = $state(null);\n    this.validationErrors = $state([]);\n\n    // Configuration management\n    this.configurationId = $state(null);\n    this.lastSaved = $state(null);\n    this.isDirty = $state(false);\n\n    // UI state\n    this.currentStep = $state(0);\n    this.expandedGroups = $state(new Set());\n    this.hiddenOptions = $state(new Set());\n\n    // API client\n    this.api = null;\n\n    // Internal\n    this._initialized = false;\n    this._debounceTimers = new Map();\n    this._modelLoaded = false;\n  }\n\n  // Initialize store\n  async initialize() {\n    if (this._initialized) return;\n    this._initialized = true;\n\n    console.log('🚀 ConfigurationStore initialized');\n\n    // Setup effects for reactive updates\n    $effect(() => {\n      if (this.modelId && !this.api) {\n        this.api = new ConfiguratorApiClient(window.__API_BASE_URL__, {\n          modelId: this.modelId\n        });\n        this.loadModel();\n      }\n    });\n\n    // Auto-validate and price on selection changes\n    $effect(() => {\n      if (this.configurationId && this.selections && Object.keys(this.selections).length >= 0) {\n        this._debounce('update', () => {\n          this.updateSelectionsOnBackend();\n        }, 300);\n      }\n    });\n  }\n\n  // Computed values\n  get isValid() {\n    return !this.validationResults ||\n        !this.validationResults.violations ||\n        this.validationResults.violations.length === 0;\n  }\n\n  get selectedCount() {\n    return Object.values(this.selections).filter(v => v > 0).length;\n  }\n\n  get progress() {\n    if (!this.model || !this.options) return 0;\n    const totalRequired = this.groups.filter(g => g.required).length;\n    if (totalRequired === 0) return this.selectedCount > 0 ? 100 : 0;\n\n    const completedRequired = this.groups\n        .filter(g => g.required)\n        .filter(g => this.hasGroupSelection(g.id))\n        .length;\n\n    return Math.round((completedRequired / totalRequired) * 100);\n  }\n\n  get totalPrice() {\n    return this.pricingData?.total || this.pricingData?.breakdown?.total_price || 0;\n  }\n\n  get adjustments() {\n    return this.pricingData?.breakdown?.adjustments || [];\n  }\n\n  get safeGroups() {\n    return Array.isArray(this.groups) ? this.groups : [];\n  }\n\n  get safeOptions() {\n    return Array.isArray(this.options) ? this.options : [];\n  }\n\n  // Model loading\n  async loadModel() {\n    if (!this.api || !this.modelId || this._modelLoaded) return;\n\n    this.isLoading = true;\n    this.error = null;\n\n    try {\n      const model = await this.api.getModel(this.modelId);\n\n      // Sanitize and set model data\n      this.model = sanitizeObject(model);\n      // Filter out inactive groups and options for customer UI\n      this.groups = (model.groups || []).filter(group => group.is_active !== false);\n      this.options = (model.options || []).filter(option => option.is_active !== false);\n      this.rules = model.rules || [];\n      this.pricingRules = model.pricing_rules || [];\n      this.volumeTiers = model.volume_tiers || [];\n\n      // Initialize available options as simple array (will be updated with constraint info later)\n      this.availableOptions = this.options.map(opt => ({\n        option: opt,\n        is_selectable: true,\n        reason: null\n      }));\n\n      this._modelLoaded = true;\n\n      // Expand first few groups by default\n      this.groups.slice(0, 3).forEach(g => this.expandedGroups.add(g.id));\n\n    } catch (error) {\n      console.error('Failed to load model:', error);\n      this.error = {\n        message: error.message || 'Failed to load model',\n        code: error.code || 'MODEL_LOAD_ERROR',\n        details: error\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  // Configuration management\n  async createConfiguration() {\n    if (!this.api || this.configurationId) return;\n\n    try {\n      const result = await this.api.createConfiguration({\n        model_id: this.modelId,\n        name: `Configuration ${new Date().toISOString()}`\n      });\n\n      this.configuration = result;\n      this.configurationId = result.id;\n\n      // Now update with current selections\n      if (this.selectedCount > 0) {\n        await this.updateSelectionsOnBackend();\n      }\n\n    } catch (error) {\n      console.error('Failed to create configuration:', error);\n      this.error = {\n        message: error.message || 'Failed to create configuration',\n        code: error.code || 'CONFIG_CREATE_ERROR',\n        details: error\n      };\n    }\n  }\n\n  async loadConfiguration(configId) {\n    if (!this.api) return;\n\n    this.isLoading = true;\n\n    try {\n      const config = await this.api.getConfiguration(configId);\n\n      this.configuration = config;\n      this.configurationId = config.id;\n      this.selections = config.selections || {};\n\n      // Load the model if needed\n      if (config.model_id && config.model_id !== this.modelId) {\n        this.modelId = config.model_id;\n        await this.loadModel();\n      }\n\n      // Validate and price\n      await this.validateConfiguration();\n      await this.calculatePricing();\n\n    } catch (error) {\n      console.error('Failed to load configuration:', error);\n      this.error = error;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async saveConfiguration() {\n    if (!this.api || !this.configurationId) return false;\n\n    this.isSaving = true;\n\n    try {\n      await this.api.updateConfiguration(this.configurationId, {\n        selections: this.selections,\n        status: 'in_progress'\n      });\n\n      this.lastSaved = new Date();\n      this.isDirty = false;\n\n      return true;\n    } catch (error) {\n      console.error('Failed to save configuration:', error);\n      this.error = error;\n      return false;\n    } finally {\n      this.isSaving = false;\n    }\n  }\n\n  // Selection management\n  updateSelection(optionId, quantity) {\n    if (!optionId) return;\n\n    const newQuantity = quantity > 0 ? 1 : 0;\n    \n    // Find the option and its group to check selection type\n    const option = this.options.find(o => o.id === optionId);\n    if (!option) return;\n    \n    const group = this.groups.find(g => g.id === option.group_id);\n    if (!group) return;\n\n    // Check if this is a switch operation based on available options\n    if (newQuantity > 0 && this.availableOptions) {\n      const availableOption = this.availableOptions.find(ao => \n        (ao.option && ao.option.id === optionId) || ao.id === optionId\n      );\n      \n      if (availableOption) {\n        // Check if this option is blocked\n        if (availableOption.status === 'blocked') {\n          console.warn(`Cannot select blocked option: ${option.name}`);\n          return;\n        }\n        \n        // Handle switch operation - deselect required options\n        if (availableOption.status === 'switch' && availableOption.requires_deselect && availableOption.requires_deselect.length > 0) {\n          console.log(`Switch operation for ${optionId}:`, availableOption.requires_deselect);\n          for (const deselectId of availableOption.requires_deselect) {\n            if (this.selections[deselectId]) {\n              delete this.selections[deselectId];\n              console.log(`  - Deselected ${deselectId}`);\n            }\n          }\n        }\n        \n        // Check max-reached status\n        if (availableOption.status === 'max-reached') {\n          const groupInfo = availableOption.group_info || {};\n          console.warn(`Cannot select - max selections (${groupInfo.max_selections || 'unknown'}) reached for group ${group.name}`);\n          return;\n        }\n      }\n    }\n\n    // DISABLED: Auto-deselect and max selection constraints for testing\n    // For single selection groups, clear other selections in the group\n    // const isSingleSelect = group.selection_type === 'single' || \n    //                       group.selection_type === 'single-select' || \n    //                       group.type === 'single-select' ||\n    //                       group.type === 'single';\n    // \n    // if (isSingleSelect && newQuantity > 0) {\n    //   const groupOptions = this.options.filter(o => o.group_id === group.id);\n    //   groupOptions.forEach(opt => {\n    //     if (opt.id !== optionId && this.selections[opt.id]) {\n    //       delete this.selections[opt.id];\n    //     }\n    //   });\n    // } else if (!isSingleSelect && newQuantity > 0) {\n    //   // For multi-select groups, check max selections constraint\n    //   if (group.max_selections) {\n    //     const currentGroupSelections = this.options\n    //       .filter(o => o.group_id === group.id && this.selections[o.id] && o.id !== optionId)\n    //       .length;\n    //     \n    //     if (currentGroupSelections >= group.max_selections) {\n    //       console.warn(`Cannot select more than ${group.max_selections} options in group ${group.name}`);\n    //       return; // Don't allow the selection\n    //     }\n    //   }\n    // }\n\n    if (newQuantity === 0) {\n      delete this.selections[optionId];\n    } else {\n      this.selections[optionId] = newQuantity;\n    }\n\n    this.isDirty = true;\n\n    // Create configuration if needed\n    if (!this.configurationId && this.selectedCount > 0) {\n      this.createConfiguration();\n    }\n  }\n\n  async updateSelectionsOnBackend() {\n    if (!this.api || !this.configurationId) return;\n\n    try {\n      const result = await this.api.addSelections(this.configurationId, {\n        selections: Object.entries(this.selections).map(([optionId, quantity]) => ({\n          option_id: optionId,\n          quantity: quantity\n        }))\n      });\n\n      // Update state from response\n      if (result.configuration) {\n        this.configuration = result.configuration;\n      }\n\n      // The backend returns validation_result directly in the ConfigurationUpdate response\n      if (result.validation_result) {\n        this.validationResults = result.validation_result;\n        this.validationErrors = result.validation_result.violations || [];\n      }\n\n      if (result.available_options) {\n        // Backend returns AvailableOption objects with is_selectable flag\n        this.availableOptions = result.available_options;\n        \n        // Check and deselect any options that are no longer valid\n        this.checkAndDeselectInvalidOptions(result.available_options);\n        \n        // Check for required options and auto-select them\n        this.checkAndApplyRequiredOptions(result.available_options);\n        \n        // Also hide unavailable options by filtering the UI list\n        this.updateVisibleOptions();\n      }\n\n      // Call pricing endpoint after successful update\n      if (this.isValid && this.selectedCount > 0 && this.configurationId) {\n        await this.calculatePricing();\n      } else {\n        // Clear pricing if invalid or no selections\n        this.pricingData = null;\n      }\n\n    } catch (error) {\n      console.error('Failed to update selections:', error);\n      // Don't overwrite error state for selection updates - just log\n      // This allows the UI to remain functional even if backend updates fail\n    }\n  }\n\n  // Validation\n  async validateConfiguration() {\n    if (!this.api || !this.configurationId) return;\n\n    this.isValidating = true;\n\n    try {\n      const result = await this.api.validateConfiguration(this.configurationId);\n      // Handle nested validation structure from API\n      const validationData = result.result || result;\n      this.validationResults = validationData;\n      this.validationErrors = validationData.violations || [];\n\n      if (result.available_options) {\n        this.availableOptions = result.available_options;\n      }\n\n    } catch (error) {\n      console.error('Configuration validation failed:', error);\n    } finally {\n      this.isValidating = false;\n    }\n  }\n\n  // Pricing\n  async calculatePricing(context = {}) {\n    if (!this.api || !this.configurationId || this.isPricing) return;\n\n    this.isPricing = true;\n\n    try {\n      // Transform selections to array format with option_id and quantity\n      const selectionsArray = Object.entries(this.selections)\n          .filter(([_, value]) => value > 0)\n          .map(([optionId, _]) => ({\n            option_id: optionId,\n            quantity: 1  // Always 1 as per your requirement\n          }));\n\n      const result = await this.api.calculatePrice(this.configurationId, {\n        selections: selectionsArray,\n        ...context\n      });\n\n      // The API client already unwraps the data\n      this.pricingData = result;\n\n      console.log('Pricing data updated:', this.pricingData);\n    } catch (error) {\n      console.error('Pricing calculation failed:', error);\n      // Set pricing to null but don't show error to user\n      this.pricingData = null;\n    } finally {\n      this.isPricing = false;\n    }\n  }\n\n  // UI helpers\n  isGroupExpanded(groupId) {\n    return this.expandedGroups.has(groupId);\n  }\n\n  toggleGroup(groupId) {\n    if (this.expandedGroups.has(groupId)) {\n      this.expandedGroups.delete(groupId);\n    } else {\n      this.expandedGroups.add(groupId);\n    }\n    // Force reactivity\n    this.expandedGroups = new Set(this.expandedGroups);\n  }\n\n  hasGroupSelection(groupId) {\n    const options = this.safeOptions;\n    return options\n        .filter(o => o.group_id === groupId)\n        .some(o => this.selections[o.id] > 0);\n  }\n\n  getGroupSelectionCount(groupId) {\n    const options = this.safeOptions;\n    return options\n        .filter(o => o.group_id === groupId)\n        .filter(o => this.selections[o.id] > 0)\n        .length;\n  }\n\n  // Check if an option is available based on constraints\n  isOptionAvailable(optionId) {\n    if (!this.availableOptions || this.availableOptions.length === 0) {\n      return true; // If no constraint info, assume available\n    }\n    \n    const availableOption = this.availableOptions.find(ao => \n      (ao.option && ao.option.id === optionId) || ao.id === optionId\n    );\n    \n    if (!availableOption) return true;\n    \n    // Check new status field first, then legacy is_selectable\n    if (availableOption.status !== undefined) {\n      // Option is available if it's selectable, switch, or already selected\n      // Only blocked and max-reached statuses prevent selection\n      return availableOption.status === 'selectable' || \n             availableOption.status === 'switch' || \n             availableOption.status === 'selected';\n    }\n    \n    // Fall back to legacy field\n    return availableOption.is_selectable !== false;\n  }\n\n  // Get the reason why an option is not available\n  getOptionUnavailableReason(optionId) {\n    if (!this.availableOptions || this.availableOptions.length === 0) {\n      return null;\n    }\n    \n    const availableOption = this.availableOptions.find(ao => \n      (ao.option && ao.option.id === optionId) || ao.id === optionId\n    );\n    \n    if (!availableOption) return null;\n    \n    // Check new status field first\n    if (availableOption.status === 'blocked' && availableOption.blocked_by && availableOption.blocked_by.length > 0) {\n      return availableOption.blocked_by[0].message || availableOption.blocked_by[0].description;\n    }\n    \n    // Fall back to legacy fields\n    return availableOption && !availableOption.is_selectable ? availableOption.reason : null;\n  }\n  \n  // Get detailed constraint information for an option\n  getOptionConstraintInfo(optionId) {\n    if (!this.availableOptions || this.availableOptions.length === 0) {\n      return null;\n    }\n    \n    const availableOption = this.availableOptions.find(ao => \n      (ao.option && ao.option.id === optionId) || ao.id === optionId\n    );\n    \n    if (!availableOption) return null;\n    \n    return {\n      status: availableOption.status || (availableOption.is_selectable === false ? 'blocked' : 'selectable'),\n      canSelect: availableOption.can_select || availableOption.is_selectable !== false,\n      selectionMethod: availableOption.selection_method || 'add',\n      requiresDeselect: availableOption.requires_deselect || [],\n      blockedBy: availableOption.blocked_by || [],\n      impact: availableOption.impact || null,\n      helpsResolve: availableOption.helps_resolve || [],\n      isRequired: availableOption.is_required || false,\n      groupInfo: availableOption.group_info || null\n    };\n  }\n  \n  // Get constraint summary for current configuration\n  getConstraintSummary() {\n    const summary = {\n      hasViolations: false,\n      blockedOptions: [],\n      switchableOptions: [],\n      helpfulOptions: [],\n      violations: [],\n      totalOptions: this.options.length,\n      availableCount: 0,\n      blockedCount: 0\n    };\n    \n    // Check validation results for violations\n    if (this.validationResults && this.validationResults.violations) {\n      summary.hasViolations = this.validationResults.violations.length > 0;\n      summary.violations = this.validationResults.violations.map(v => ({\n        ruleId: v.rule_id,\n        ruleName: v.rule_name,\n        message: v.message,\n        affectedOptions: v.affected_options || []\n      }));\n    }\n    \n    // Analyze available options\n    if (this.availableOptions && this.availableOptions.length > 0) {\n      for (const availableOption of this.availableOptions) {\n        const option = availableOption.option || availableOption;\n        const optionInfo = {\n          id: option.id,\n          name: option.name,\n          groupId: option.group_id\n        };\n        \n        // Count by status\n        if (availableOption.status === 'blocked') {\n          summary.blockedCount++;\n          summary.blockedOptions.push({\n            ...optionInfo,\n            reasons: availableOption.blocked_by || []\n          });\n        } else if (availableOption.status === 'switch') {\n          summary.switchableOptions.push({\n            ...optionInfo,\n            requiresDeselect: availableOption.requires_deselect || []\n          });\n          summary.availableCount++;\n        } else if (availableOption.status === 'selectable' || availableOption.status === 'selected') {\n          summary.availableCount++;\n        }\n        \n        // Check if option helps resolve violations\n        if (availableOption.impact === 'helps' && availableOption.helps_resolve && availableOption.helps_resolve.length > 0) {\n          summary.helpfulOptions.push({\n            ...optionInfo,\n            helpsResolve: availableOption.helps_resolve,\n            impact: availableOption.impact\n          });\n        }\n      }\n    }\n    \n    return summary;\n  }\n\n  // Check and deselect options that are no longer valid based on constraints\n  checkAndDeselectInvalidOptions(availableOptions) {\n    let anyDeselected = false;\n    \n    if (Array.isArray(availableOptions)) {\n      for (const availableOption of availableOptions) {\n        const option = availableOption.option || availableOption;\n        const optionId = option.id;\n        \n        // Check status field first (new API), then fall back to legacy is_selectable\n        const isBlocked = availableOption.status === 'blocked' || \n                         (availableOption.status === undefined && availableOption.is_selectable === false);\n        \n        // If option is currently selected but is now blocked, deselect it\n        if (this.selections[optionId] && isBlocked) {\n          delete this.selections[optionId];\n          anyDeselected = true;\n          \n          // Get detailed reason from blocked_by if available\n          let reasons = [];\n          if (availableOption.blocked_by && availableOption.blocked_by.length > 0) {\n            reasons = availableOption.blocked_by.map(constraint => \n              constraint.message || constraint.description || constraint.type\n            );\n          } else if (availableOption.reason) {\n            reasons = [availableOption.reason];\n          }\n          \n          const reasonText = reasons.length > 0 ? reasons.join(', ') : 'Constraint violation';\n          console.log(`Auto-deselected blocked option: ${option.name} (${optionId}) - Reason: ${reasonText}`);\n        }\n      }\n    }\n    \n    // If we deselected anything, mark as dirty to trigger updates\n    if (anyDeselected) {\n      this.isDirty = true;\n    }\n    \n    return anyDeselected;\n  }\n\n  // Check for and automatically apply required options based on constraints\n  checkAndApplyRequiredOptions(availableOptions) {\n    let autoSelected = false;\n    \n    // Look for options that must be selected based on current selections and backend constraint info\n    if (Array.isArray(availableOptions)) {\n      for (const availableOption of availableOptions) {\n        const option = availableOption.option || availableOption;\n        const optionId = option.id;\n        \n        // Check if this option is marked as required by the backend\n        if (availableOption.is_required && !this.selections[optionId]) {\n          // For single selection groups, clear other selections first\n          const group = this.groups.find(g => g.id === option.group_id);\n          if (group && group.selection_type === 'single') {\n            const groupOptions = this.options.filter(o => o.group_id === group.id);\n            groupOptions.forEach(opt => {\n              if (opt.id !== optionId && this.selections[opt.id]) {\n                delete this.selections[opt.id];\n              }\n            });\n          }\n          \n          // Auto-select the required option\n          this.selections[optionId] = 1;\n          autoSelected = true;\n          console.log(`Auto-selected required option: ${option.name} (${optionId})`);\n        }\n      }\n    }\n    \n    // If we auto-selected anything, trigger a re-validation to get updated constraint info\n    if (autoSelected) {\n      this.isDirty = true;\n      // Don't trigger immediate update to avoid infinite loops\n      // The reactive effect will handle the next update cycle\n    }\n  }\n\n  // Simple rule condition evaluator\n  evaluateRuleCondition(rule) {\n    // This is a simplified version - the real evaluation happens on the backend\n    // We're just checking if any options mentioned in the rule are selected\n    if (!rule.expression) return false;\n    \n    // Extract option IDs from the rule expression (simple pattern matching)\n    const optionPattern = /\\b(opt_\\w+|cpu_\\w+|ram_\\w+|storage_\\w+)\\b/g;\n    const matches = rule.expression.match(optionPattern) || [];\n    \n    // Check if any of the condition options are selected\n    return matches.some(optionId => this.selections[optionId] > 0);\n  }\n\n  // Extract required option IDs from a rule\n  extractRequiredOptions(rule) {\n    if (!rule.expression) return [];\n    \n    // Look for options after THEN in the expression\n    const thenIndex = rule.expression.indexOf('THEN');\n    if (thenIndex === -1) return [];\n    \n    const afterThen = rule.expression.substring(thenIndex + 4);\n    const optionPattern = /\\b(opt_\\w+|cpu_\\w+|ram_\\w+|storage_\\w+)\\b/g;\n    const matches = afterThen.match(optionPattern) || [];\n    \n    return matches;\n  }\n\n  // Export configuration\n  exportConfiguration() {\n    return {\n      id: this.configurationId,\n      model_id: this.modelId,\n      selections: this.selections,\n      validation: {\n        is_valid: this.isValid,\n        violations: this.validationErrors\n      },\n      pricing: {\n        total_price: this.totalPrice,\n        adjustments: this.adjustments,\n        breakdown: this.pricingData?.breakdown || null,\n        currency: this.pricingData?.currency || 'USD'\n      },\n      metadata: {\n        created: this.configuration?.created_at,\n        updated: this.configuration?.updated_at,\n        saved: this.lastSaved\n      }\n    };\n  }\n\n  // Filter options based on availability from constraints\n  updateVisibleOptions() {\n    if (!this.availableOptions || this.availableOptions.length === 0) {\n      // If no constraint info, show all options\n      this.hiddenOptions = new Set();\n      return;\n    }\n    \n    // Track which options should be hidden vs disabled\n    this.hiddenOptions = new Set();\n    \n    for (const option of this.options) {\n      const availableOption = this.availableOptions.find(ao => \n        (ao.option && ao.option.id === option.id) || ao.id === option.id\n      );\n      \n      if (availableOption) {\n        // Check status field first, then legacy is_selectable\n        const shouldHide = (availableOption.status === 'blocked' || \n                           (availableOption.status === undefined && availableOption.is_selectable === false)) &&\n                          !this.selections[option.id]; // Don't hide if currently selected\n        \n        if (shouldHide) {\n          this.hiddenOptions.add(option.id);\n        }\n      }\n    }\n  }\n  \n  // Check if an option should be visible in the UI\n  isOptionVisible(optionId) {\n    if (!this.hiddenOptions) return true;\n    return !this.hiddenOptions.has(optionId);\n  }\n\n  // Clear all selections\n  clearSelections() {\n    this.selections = {};\n    this.isDirty = true;\n    this.validationResults = null;\n    this.pricingData = null;\n    \n    // Trigger validation and pricing updates\n    if (this.configurationId) {\n      this.validateConfiguration();\n      this.calculatePricing();\n    }\n  }\n\n\n  // Reset store\n  reset() {\n    this.selections = {};\n    this.validationResults = null;\n    this.pricingData = null;\n    this.configuration = null;\n    this.configurationId = null;\n    this.currentStep = 0;\n    this.isDirty = false;\n    this.error = null;\n    this.validationErrors = [];\n    this.hiddenOptions = new Set();\n  }\n\n  // Utility method for debouncing\n  _debounce(key, fn, delay) {\n    clearTimeout(this._debounceTimers.get(key));\n    this._debounceTimers.set(key, setTimeout(fn, delay));\n  }\n\n  // Model setter\n  setModelId(modelId) {\n    if (this.modelId !== modelId) {\n      this.reset();\n      this.modelId = modelId;\n      this._modelLoaded = false;\n    }\n  }\n}\n\n// Create singleton instance\nexport const configStore = new ConfigurationStore();\n\n// Export for component usage\nexport default configStore;","// web/src/lib/api/session-client.js\n// Session-based API client for the new v2 endpoints\n\nclass SessionApiClient {\n  constructor(baseUrl, options = {}) {\n    // For development, use relative URL to leverage Vite proxy\n    // For production, use full URL\n    let defaultUrl;\n    if (typeof window !== 'undefined') {\n      const isDev = window.location.hostname === 'localhost' && window.location.port === '5173';\n      defaultUrl = isDev ? '/api/v2' : 'http://localhost:8080/api/v2';\n    } else {\n      defaultUrl = 'http://localhost:8080/api/v2';\n    }\n    \n    this.baseUrl = baseUrl || window.__API_BASE_URL__?.replace('/v1', '/v2') || defaultUrl;\n    this.modelId = options.modelId;\n    this.authToken = options.authToken || localStorage.getItem('auth_token');\n    this.sessionToken = options.sessionToken || localStorage.getItem('session_token');\n    this.sessionId = options.sessionId || localStorage.getItem('session_id');\n    this.timeout = options.timeout || 30000;\n\n    console.log('Session API Client initialized:', {\n      baseUrl: this.baseUrl,\n      modelId: this.modelId,\n      hasAuth: !!this.authToken,\n      hasSession: !!this.sessionId\n    });\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseUrl}${endpoint}`;\n    console.log(`Session API Request: ${options.method || 'GET'} ${url}`);\n\n    const config = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(this.authToken && { 'Authorization': `Bearer ${this.authToken}` }),\n        ...(this.sessionToken && { 'X-Session-Token': this.sessionToken }),\n        ...options.headers\n      },\n      ...options\n    };\n\n    if (config.body && typeof config.body === 'object') {\n      config.body = JSON.stringify(config.body);\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n      const response = await fetch(url, {\n        ...config,\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        let errorData;\n        try {\n          errorData = await response.json();\n        } catch (e) {\n          errorData = { message: response.statusText };\n        }\n        \n        const errorMessage = errorData.message || errorData.error || `HTTP ${response.status}`;\n        console.error(`Session API Error Response from ${endpoint}:`, {\n          status: response.status,\n          statusText: response.statusText,\n          errorData,\n          url\n        });\n        \n        const error = new Error(errorMessage);\n        error.status = response.status;\n        error.data = errorData;\n        throw error;\n      }\n\n      const result = await response.json();\n\n      // Debug logging for development\n      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n        console.log(`Session API Response from ${endpoint}:`, result);\n      }\n\n      // Handle wrapped responses from backend\n      if (result && typeof result === 'object' && result.success !== undefined && result.data !== undefined) {\n        return result.data;\n      }\n\n      return result ?? {};\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout');\n      }\n      console.error(`Session API Error for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  // Session Management\n  async createSession(modelId = null) {\n    const response = await this.request('/configurations', {\n      method: 'POST',\n      body: {\n        model_id: modelId || this.modelId,\n        name: `Configuration ${new Date().toISOString()}`,\n        description: 'New configuration session'\n      }\n    });\n\n    // Store session info\n    if (response.session_id) {\n      this.sessionId = response.session_id;\n      localStorage.setItem('session_id', response.session_id);\n    }\n    if (response.session_token) {\n      this.sessionToken = response.session_token;\n      localStorage.setItem('session_token', response.session_token);\n    }\n\n    return response;\n  }\n\n  async getSession(sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n    \n    return this.request(`/configurations/${id}`);\n  }\n\n  async updateSession(updates, sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}`, {\n      method: 'PUT',\n      body: updates\n    });\n  }\n\n  async updateSelections(selections, sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}`, {\n      method: 'PUT',\n      body: {\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async addSelections(selections, sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}/selections`, {\n      method: 'POST',\n      body: {\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async validateSession(sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}/validate`, {\n      method: 'POST'\n    });\n  }\n\n  async calculatePrice(sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}/price`, {\n      method: 'POST'\n    });\n  }\n\n  async completeSession(sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}/complete`, {\n      method: 'POST'\n    });\n  }\n\n  async extendSession(days = 30, sessionId = null) {\n    const id = sessionId || this.sessionId;\n    if (!id) throw new Error('Session ID required');\n\n    return this.request(`/configurations/${id}/extend`, {\n      method: 'POST',\n      body: { days }\n    });\n  }\n\n  async getUserSessions() {\n    return this.request('/configurations/user-sessions');\n  }\n\n  // Model Management (same as v1)\n  async getModel(modelId = null) {\n    const id = modelId || this.modelId;\n    if (!id) throw new Error('Model ID required');\n    \n    const model = await this.request(`/models/${id}`);\n\n    // Ensure we have proper structure\n    if (!model.option_groups && model.groups) {\n      model.option_groups = model.groups;\n    }\n\n    return model;\n  }\n\n  async getModelGroups(modelId = null) {\n    const id = modelId || this.modelId;\n    if (!id) throw new Error('Model ID required');\n    \n    const response = await this.request(`/models/${id}/groups`);\n    \n    // Handle wrapped response format\n    if (response && typeof response === 'object') {\n      if (response.groups && Array.isArray(response.groups)) {\n        return response.groups;\n      }\n      if (response.data && response.data.groups && Array.isArray(response.data.groups)) {\n        return response.data.groups;\n      }\n    }\n    \n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelOptions(modelId = null) {\n    const id = modelId || this.modelId;\n    if (!id) throw new Error('Model ID required');\n    \n    const response = await this.request(`/models/${id}/options`);\n    \n    // Handle wrapped response format\n    if (response && typeof response === 'object') {\n      if (response.options && Array.isArray(response.options)) {\n        return response.options;\n      }\n      if (response.data && response.data.options && Array.isArray(response.data.options)) {\n        return response.data.options;\n      }\n    }\n    \n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelRules(modelId = null) {\n    const id = modelId || this.modelId;\n    if (!id) throw new Error('Model ID required');\n    \n    const response = await this.request(`/models/${id}/rules`);\n    \n    // Handle wrapped response format\n    if (response && typeof response === 'object') {\n      if (response.rules && Array.isArray(response.rules)) {\n        return response.rules;\n      }\n      if (response.data && response.data.rules && Array.isArray(response.data.rules)) {\n        return response.data.rules;\n      }\n    }\n    \n    return Array.isArray(response) ? response : [];\n  }\n\n  // Utility Methods\n  formatSelections(selections) {\n    if (Array.isArray(selections)) {\n      return selections;\n    }\n\n    // Convert object format to array format\n    return Object.entries(selections)\n        .filter(([_, quantity]) => quantity > 0)\n        .map(([option_id, quantity]) => ({\n          option_id,\n          quantity: parseInt(quantity) || 1\n        }));\n  }\n\n  // Session recovery\n  async recoverSession() {\n    const sessionId = localStorage.getItem('session_id');\n    const sessionToken = localStorage.getItem('session_token');\n    \n    if (!sessionId) return null;\n\n    try {\n      // Try to recover the session\n      const session = await this.getSession(sessionId);\n      \n      // Check if session is still valid\n      if (session && session.status !== 'abandoned' && new Date(session.expires_at) > new Date()) {\n        this.sessionId = sessionId;\n        this.sessionToken = sessionToken;\n        return session;\n      }\n    } catch (error) {\n      // If it's a 404, the session doesn't exist anymore\n      if (error.status === 404) {\n        console.log('Session not found, will create new one');\n      } else {\n        console.error('Failed to recover session:', error);\n      }\n    }\n\n    // Clear invalid session data\n    this.clearSession();\n    return null;\n  }\n\n  clearSession() {\n    this.sessionId = null;\n    this.sessionToken = null;\n    localStorage.removeItem('session_id');\n    localStorage.removeItem('session_token');\n  }\n\n  // Health Check\n  async checkHealth() {\n    return this.request('/health');\n  }\n\n  async getStatus() {\n    return this.request('/status');\n  }\n}\n\nexport default SessionApiClient;","// web/src/lib/stores/configuration-session.svelte.js\n// Session-based configuration store using the new v2 API\n\nimport SessionApiClient from '../api/session-client.js';\n\nclass ConfigurationSessionStore {\n  constructor() {\n    // Core session state\n    this.modelId = $state(null);\n    this.sessionId = $state(null);\n    this.sessionToken = $state(null);\n    this.sessionStatus = $state('draft');\n    this.expiresAt = $state(null);\n    \n    // Model data - initialize with null instead of empty arrays\n    this.model = $state(null);\n    this.groups = $state(null);\n    this.options = $state(null);\n    this.rules = $state(null);\n    this.selections = $state({});\n    \n    // Session state\n    this.configuration = $state(null);\n    this.validationResult = $state(null);\n    this.pricingResult = $state(null);\n    this.availableOptions = $state(null);\n    \n    // UI state\n    this.isLoading = $state(false);\n    this.isSaving = $state(false);\n    this.error = $state(null);\n    this.lastSaved = $state(null);\n    this.isDirty = $state(false);\n    \n    this.api = null;\n  }\n\n  // Initialization\n  async initialize(modelId, options = {}) {\n    this.modelId = modelId;\n    \n    // Create API client with explicit v2 URL if not provided\n    const apiUrl = options.apiUrl || (\n      window.location.hostname === 'localhost' && window.location.port === '5173'\n        ? '/api/v2'  // Use proxy in dev\n        : 'http://localhost:8080/api/v2'\n    );\n    \n    this.api = new SessionApiClient(apiUrl, {\n      modelId,\n      authToken: options.authToken,\n      timeout: options.timeout || 30000\n    });\n\n    // Try to recover existing session\n    const recovered = await this.recoverSession();\n    \n    if (!recovered) {\n      // Create new session\n      await this.createSession();\n    }\n\n    // Small delay to ensure selections are properly set\n    await new Promise(resolve => setTimeout(resolve, 50));\n\n    // Load model data after session is established\n    // Important: This should not override the selections from createSession\n    await this.loadModel();\n    \n    // Force a small delay to ensure UI updates\n    await new Promise(resolve => setTimeout(resolve, 50));\n  }\n\n  async createSession() {\n    if (!this.api || !this.modelId) return;\n\n    try {\n      this.isLoading = true;\n      \n      const result = await this.api.createSession(this.modelId);\n      \n      console.log('Create session response:', result);\n      \n      this.sessionId = result.session_id;\n      this.sessionToken = result.session_token;\n      this.sessionStatus = result.status;\n      this.expiresAt = result.expires_at;\n      this.configuration = result;\n      \n      // Update selections from the response (includes default selections)\n      if (result.selections && Array.isArray(result.selections)) {\n        console.log('Applying selections from response:', result.selections);\n        const newSelections = {};\n        for (const sel of result.selections) {\n          // Handle both option_id and OptionID formats (backend might use either)\n          const optionId = sel.option_id || sel.OptionID;\n          const quantity = sel.quantity || sel.Quantity || 1;\n          if (optionId) {\n            newSelections[optionId] = quantity;\n          }\n        }\n        // Ensure we create a new object for reactivity\n        this.selections = { ...newSelections };\n        console.log('Updated this.selections to:', this.selections);\n        console.log('Store selections state after update:', JSON.stringify(this.selections));\n      } else {\n        console.log('No selections in create session response');\n        console.log('Result keys:', Object.keys(result));\n        console.log('Full result:', JSON.stringify(result, null, 2));\n      }\n      \n      // Update validation and pricing state\n      this.validationResult = result.validation_state || null;\n      this.pricingResult = result.pricing_state || null;\n      \n      console.log('Session created:', {\n        sessionId: this.sessionId,\n        status: this.sessionStatus,\n        expiresAt: this.expiresAt,\n        selections: this.selections,\n        isValid: result.is_valid,\n        totalPrice: result.total_price\n      });\n      \n    } catch (error) {\n      console.error('Failed to create session:', error);\n      this.error = {\n        message: error.message || 'Failed to create session',\n        code: error.code || 'SESSION_CREATE_ERROR',\n        details: error\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async recoverSession() {\n    if (!this.api) return false;\n\n    try {\n      const session = await this.api.recoverSession();\n      \n      if (session) {\n        console.log('Recovering session:', session);\n        \n        this.sessionId = session.session_id || session.id;\n        this.sessionToken = session.session_token;\n        this.sessionStatus = session.status;\n        this.expiresAt = session.expires_at;\n        this.configuration = session;\n        \n        // Handle selections which might be in array format\n        if (Array.isArray(session.selections)) {\n          const newSelections = {};\n          for (const sel of session.selections) {\n            const optionId = sel.option_id || sel.OptionID;\n            const quantity = sel.quantity || sel.Quantity || 1;\n            if (optionId) {\n              newSelections[optionId] = quantity;\n            }\n          }\n          this.selections = newSelections;\n        } else {\n          // Ensure selections is a new object for reactivity\n          this.selections = { ...(session.selections || {}) };\n        }\n        \n        this.validationResult = session.validation_state;\n        this.pricingResult = session.pricing_state;\n        \n        console.log('Session recovered:', {\n          sessionId: this.sessionId,\n          status: this.sessionStatus,\n          selectionsCount: Object.keys(this.selections).length,\n          selections: this.selections\n        });\n        \n        return true;\n      }\n    } catch (error) {\n      console.error('Failed to recover session:', error);\n    }\n    \n    return false;\n  }\n\n  async loadModel() {\n    if (!this.api || !this.modelId) return;\n\n    this.isLoading = true;\n\n    try {\n      const [model, groups, options, rules] = await Promise.all([\n        this.api.getModel(),\n        this.api.getModelGroups(),\n        this.api.getModelOptions(),\n        this.api.getModelRules()\n      ]);\n\n      // Ensure arrays are properly assigned\n      this.model = model;\n      this.groups = Array.isArray(groups) ? groups : [];\n      this.options = Array.isArray(options) ? options : [];\n      this.rules = Array.isArray(rules) ? rules : [];\n\n      console.log('Model loaded:', {\n        modelId: this.modelId,\n        groupsCount: this.groups.length,\n        optionsCount: this.options.length,\n        rulesCount: this.rules.length,\n        groups: this.groups,\n        currentSelections: this.selections,\n        selectionsKeys: Object.keys(this.selections)\n      });\n      \n      // Debug: Check if groups have default_option_id and if they're selected\n      console.log('Groups with defaults:');\n      this.groups.forEach(group => {\n        if (group.default_option_id) {\n          const isSelected = this.selections[group.default_option_id] > 0;\n          console.log(`  - ${group.name}: default = ${group.default_option_id}, selected = ${isSelected}`);\n        }\n      });\n\n    } catch (error) {\n      console.error('Failed to load model:', error);\n      this.error = {\n        message: error.message || 'Failed to load model',\n        code: error.code || 'MODEL_LOAD_ERROR',\n        details: error\n      };\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  // Selection management\n  updateSelection(optionId, quantity) {\n    if (!optionId) return;\n\n    const newQuantity = quantity > 0 ? 1 : 0;\n    \n    // Find the option and its group to check selection type\n    const option = this.options.find(o => o.id === optionId);\n    if (!option) return;\n    \n    const group = this.groups.find(g => g.id === option.group_id);\n    if (!group) return;\n    \n    console.log(`updateSelection called: ${option.name} (${optionId}) = ${newQuantity}, Group: ${group.name}`);\n\n    // IMPORTANT: We need to handle single-select groups to avoid sending multiple selections\n    // This is required because the backend expects only one selection per single-select group\n    const isSingleSelect = group.selection_type === 'single' || \n                          group.selection_type === 'single_required' || \n                          group.selection_type === 'radio' ||\n                          group.selection_type === 'dropdown' ||\n                          group.type === 'single-select' ||\n                          group.type === 'single';\n    \n    // Update the selection - create new object for reactivity\n    const newSelections = { ...this.selections };\n    \n    if (isSingleSelect && newQuantity > 0) {\n      // Clear other selections in the same group\n      const groupOptions = this.options.filter(o => o.group_id === group.id);\n      groupOptions.forEach(opt => {\n        if (opt.id !== optionId && newSelections[opt.id]) {\n          console.log(`Clearing previous selection: ${opt.name} from group ${group.name}`);\n          delete newSelections[opt.id];\n        }\n      });\n    }\n\n    if (newQuantity > 0) {\n      newSelections[optionId] = newQuantity;\n    } else {\n      delete newSelections[optionId];\n    }\n    this.selections = newSelections;\n\n    this.isDirty = true;\n\n    // Debounce backend update\n    if (this.updateTimeout) {\n      clearTimeout(this.updateTimeout);\n    }\n\n    this.updateTimeout = setTimeout(() => {\n      this.updateSelectionsOnBackend();\n    }, 300);\n  }\n\n  async updateSelectionsOnBackend() {\n    if (!this.api || !this.sessionId) return;\n\n    try {\n      // Format selections for API\n      const formattedSelections = Object.entries(this.selections)\n        .filter(([_, quantity]) => quantity > 0)\n        .map(([option_id, quantity]) => ({\n          option_id,\n          quantity: parseInt(quantity) || 1\n        }));\n\n      console.log('Sending selections to backend:', formattedSelections);\n\n      // Update session with selections\n      const result = await this.api.updateSelections(formattedSelections);\n\n      // Update state with results\n      this.configuration = result.configuration || result.updated_config;\n      this.validationResult = result.validation_result;\n      this.pricingResult = result.price_breakdown;\n      this.availableOptions = Array.isArray(result.available_options) ? result.available_options : [];\n      \n      // IMPORTANT: Sync selections with backend response\n      // The backend handles single-select group logic, so we need to update our local state\n      if (this.configuration && this.configuration.selections) {\n        const backendSelections = {};\n        for (const sel of this.configuration.selections) {\n          backendSelections[sel.option_id] = sel.quantity;\n        }\n        console.log('Syncing selections - Before:', this.selections);\n        console.log('Syncing selections - After:', backendSelections);\n        // Create new object for reactivity\n        this.selections = { ...backendSelections };\n        console.log('Validation result:', this.validationResult);\n        console.log('Available options with impact:', this.availableOptions?.slice(0, 5).map(opt => ({\n          name: opt.option?.name || opt.name,\n          impact: opt.impact,\n          helps: opt.helps_resolve,\n          is_selectable: opt.is_selectable\n        })));\n        this.selections = backendSelections;\n      }\n      \n      // DISABLED: Auto-deselect for testing\n      // this.checkAndDeselectInvalidOptions(this.availableOptions);\n\n      this.lastSaved = new Date();\n      this.isDirty = false;\n\n      console.log('Session updated:', {\n        sessionId: this.sessionId,\n        selectionsCount: formattedSelections.length,\n        isValid: this.validationResult?.is_valid,\n        totalPrice: this.pricingResult?.total_price,\n        fullResult: result,\n        configIsValid: this.configuration?.is_valid\n      });\n\n    } catch (error) {\n      console.error('Failed to update session:', error);\n      this.error = {\n        message: error.message || 'Failed to update selections',\n        code: error.code || 'UPDATE_ERROR',\n        details: error\n      };\n    }\n  }\n\n  checkAndDeselectInvalidOptions(availableOptions) {\n    let anyDeselected = false;\n    \n    if (Array.isArray(availableOptions)) {\n      for (const availableOption of availableOptions) {\n        const option = availableOption.option || availableOption;\n        const optionId = option.id;\n        \n        // If option is currently selected but no longer selectable, deselect it\n        if (this.selections[optionId] && availableOption.is_selectable === false) {\n          delete this.selections[optionId];\n          anyDeselected = true;\n          console.log(`Auto-deselected invalid option: ${option.name} (${optionId})`);\n        }\n      }\n    }\n    \n    if (anyDeselected) {\n      this.isDirty = true;\n    }\n    \n    return anyDeselected;\n  }\n\n  async validateConfiguration() {\n    if (!this.api || !this.sessionId) return;\n\n    try {\n      const result = await this.api.validateSession();\n      this.validationResult = result;\n      return result;\n    } catch (error) {\n      console.error('Failed to validate session:', error);\n      this.error = error;\n    }\n  }\n\n  async calculatePricing() {\n    if (!this.api || !this.sessionId) return;\n\n    try {\n      const result = await this.api.calculatePrice();\n      this.pricingResult = result.breakdown || result;\n      return result;\n    } catch (error) {\n      console.error('Failed to calculate price:', error);\n      this.error = error;\n    }\n  }\n\n  async completeSession() {\n    if (!this.api || !this.sessionId) return;\n\n    try {\n      const result = await this.api.completeSession();\n      this.sessionStatus = 'completed';\n      return result;\n    } catch (error) {\n      console.error('Failed to complete session:', error);\n      this.error = error;\n    }\n  }\n\n  async extendSession(days = 30) {\n    if (!this.api || !this.sessionId) return;\n\n    try {\n      const result = await this.api.extendSession(days);\n      if (result.expires_at) {\n        this.expiresAt = result.expires_at;\n      }\n      return result;\n    } catch (error) {\n      console.error('Failed to extend session:', error);\n      this.error = error;\n    }\n  }\n\n  // Getters\n  get selectedOptions() {\n    return Object.entries(this.selections)\n      .filter(([_, quantity]) => quantity > 0)\n      .map(([optionId]) => this.options.find(o => o.id === optionId))\n      .filter(Boolean);\n  }\n\n  get selectedCount() {\n    return Object.keys(this.selections).filter(id => this.selections[id] > 0).length;\n  }\n\n  get totalPrice() {\n    return this.pricingResult?.total_price || 0;\n  }\n\n  get isValid() {\n    // Explicitly check the validation result\n    if (this.validationResult && typeof this.validationResult.is_valid === 'boolean') {\n      return this.validationResult.is_valid;\n    }\n    // If no validation result yet, check if we have selections\n    return this.selectedCount === 0;\n  }\n\n  get violations() {\n    return this.validationResult?.violations || [];\n  }\n\n  get hasActiveViolations() {\n    return this.violations.some(v => v.severity === 'error' || v.severity === 'Error');\n  }\n\n  get sessionTimeRemaining() {\n    if (!this.expiresAt) return null;\n    \n    const now = new Date();\n    const expires = new Date(this.expiresAt);\n    const diff = expires - now;\n    \n    if (diff <= 0) return 'Expired';\n    \n    const days = Math.floor(diff / (1000 * 60 * 60 * 24));\n    const hours = Math.floor((diff % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));\n    \n    if (days > 0) return `${days} days`;\n    return `${hours} hours`;\n  }\n\n  // Utility methods\n  reset() {\n    this.selections = {};\n    this.validationResult = null;\n    this.pricingResult = null;\n    this.availableOptions = [];\n    this.isDirty = false;\n    this.error = null;\n  }\n\n  clearError() {\n    this.error = null;\n  }\n\n  clearSession() {\n    if (this.api) {\n      this.api.clearSession();\n    }\n    this.sessionId = null;\n    this.sessionToken = null;\n    this.sessionStatus = 'draft';\n    this.expiresAt = null;\n    this.reset();\n  }\n}\n\n// Factory function to create store instance\nexport function createConfigurationSessionStore() {\n  return new ConfigurationSessionStore();\n}","<!-- web/src/lib/components/LoadingSpinner.svelte -->\n<script>\n  let {\n    size = 'medium',\n    message = ''\n  } = $props();\n</script>\n\n<div class=\"loading-spinner\" class:small={size === 'small'} class:large={size === 'large'}>\n  <div class=\"spinner\"></div>\n  {#if message}\n    <p class=\"loading-message\">{message}</p>\n  {/if}\n</div>\n\n<style>\n  .loading-spinner {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 12px;\n  }\n\n  .spinner {\n    width: 40px;\n    height: 40px;\n    border: 3px solid #e5e7eb;\n    border-top-color: #3b82f6;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n\n  .loading-spinner.small .spinner {\n    width: 20px;\n    height: 20px;\n    border-width: 2px;\n  }\n\n  .loading-spinner.large .spinner {\n    width: 60px;\n    height: 60px;\n    border-width: 4px;\n  }\n\n  .loading-message {\n    margin: 0;\n    font-size: 14px;\n    color: #6b7280;\n    text-align: center;\n  }\n\n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n</style>","<!-- web/src/lib/components/ErrorBoundary.svelte -->\n<script>\n  import { onMount, onDestroy } from 'svelte';\n\n  let {\n    children,\n    fallback = null,\n    onError = null\n  } = $props();\n\n  let error = $state(null);\n  let hasError = $state(false);\n\n  function handleError(event) {\n    console.error('ErrorBoundary caught:', event.error);\n    error = event.error;\n    hasError = true;\n\n    if (onError) {\n      onError(event.error);\n    }\n\n    // Prevent the error from propagating\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  function reset() {\n    error = null;\n    hasError = false;\n  }\n\n  onMount(() => {\n    // Listen for unhandled errors\n    window.addEventListener('error', handleError);\n    window.addEventListener('unhandledrejection', (event) => {\n      handleError({ error: event.reason });\n    });\n\n    return () => {\n      window.removeEventListener('error', handleError);\n      window.removeEventListener('unhandledrejection', handleError);\n    };\n  });\n</script>\n\n{#if hasError}\n  {#if fallback}\n    {@render fallback(error, reset)}\n  {:else}\n    <div class=\"error-boundary\">\n      <div class=\"error-content\">\n        <div class=\"error-icon\">⚠️</div>\n        <h2 class=\"error-title\">Something went wrong</h2>\n        <p class=\"error-message\">{error?.message || 'An unexpected error occurred'}</p>\n\n        {#if import.meta.env.DEV && error?.stack}\n          <details class=\"error-details\">\n            <summary>Error Details</summary>\n            <pre class=\"error-stack\">{error.stack}</pre>\n          </details>\n        {/if}\n\n        <div class=\"error-actions\">\n          <button class=\"btn btn-primary\" onclick={reset}>\n            Try Again\n          </button>\n          <button class=\"btn btn-secondary\" onclick={() => location.reload()}>\n            Reload Page\n          </button>\n        </div>\n      </div>\n    </div>\n  {/if}\n{:else}\n  {@render children()}\n{/if}\n\n<style>\n  .error-boundary {\n    min-height: 400px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n  }\n\n  .error-content {\n    max-width: 500px;\n    text-align: center;\n  }\n\n  .error-icon {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n  }\n\n  .error-title {\n    margin: 0 0 0.5rem;\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--text-primary, #111827);\n  }\n\n  .error-message {\n    margin: 0 0 1.5rem;\n    font-size: 1rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .error-details {\n    margin: 1rem 0;\n    text-align: left;\n    background: var(--bg-secondary, #f9fafb);\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 6px;\n    padding: 1rem;\n  }\n\n  .error-details summary {\n    cursor: pointer;\n    font-weight: 500;\n    color: var(--text-secondary, #6b7280);\n    font-size: 0.875rem;\n  }\n\n  .error-stack {\n    margin: 1rem 0 0;\n    padding: 1rem;\n    background: var(--bg-tertiary, #111827);\n    color: var(--text-code, #f3f4f6);\n    border-radius: 4px;\n    font-size: 0.75rem;\n    overflow-x: auto;\n    white-space: pre-wrap;\n    word-break: break-word;\n  }\n\n  .error-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n  }\n\n  .btn {\n    padding: 0.75rem 1.5rem;\n    border-radius: 6px;\n    border: none;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s;\n    font-size: 1rem;\n  }\n\n  .btn-primary {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .btn-primary:hover {\n    background: var(--primary-hover, #2563eb);\n  }\n\n  .btn-secondary {\n    background: var(--bg-secondary, #f3f4f6);\n    color: var(--text-primary, #111827);\n  }\n\n  .btn-secondary:hover {\n    background: var(--bg-tertiary, #e5e7eb);\n  }\n</style>","<!-- A nicer, faster tooltip component -->\n<script>\n  let {\n    content = '',\n    position = 'top',\n    delay = 100, // Much faster than default browser tooltips\n    maxWidth = '400px'\n  } = $props();\n\n  let showTooltip = $state(false);\n  let tooltipElement;\n  let targetElement;\n  let timeoutId;\n\n  function handleMouseEnter() {\n    timeoutId = setTimeout(() => {\n      showTooltip = true;\n    }, delay);\n  }\n\n  function handleMouseLeave() {\n    clearTimeout(timeoutId);\n    showTooltip = false;\n  }\n</script>\n\n<div \n  class=\"tooltip-wrapper\"\n  bind:this={targetElement}\n  onmouseenter={handleMouseEnter}\n  onmouseleave={handleMouseLeave}\n>\n  <slot />\n  \n  {#if showTooltip && content}\n    <div \n      class=\"tooltip {position}\"\n      bind:this={tooltipElement}\n      style=\"max-width: {maxWidth}; min-width: 200px;\"\n    >\n      <div class=\"tooltip-content\">\n        {content}\n      </div>\n      <div class=\"tooltip-arrow\"></div>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .tooltip-wrapper {\n    position: relative;\n    display: inline-block;\n  }\n\n  .tooltip {\n    position: absolute;\n    z-index: 1000;\n    pointer-events: none;\n    animation: fadeIn 0.2s ease-out;\n  }\n\n  .tooltip-content {\n    background: rgba(31, 41, 55, 0.95);\n    color: white;\n    padding: 12px 16px;\n    border-radius: 8px;\n    font-size: 14px;\n    line-height: 1.5;\n    box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);\n    backdrop-filter: blur(8px);\n    border: 1px solid rgba(255, 255, 255, 0.1);\n    font-weight: 400;\n    letter-spacing: 0.01em;\n    white-space: normal;\n    word-wrap: break-word;\n  }\n\n  .tooltip-arrow {\n    position: absolute;\n    width: 0;\n    height: 0;\n    border-style: solid;\n  }\n\n  /* Position variants */\n  .tooltip.top {\n    bottom: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    margin-bottom: 8px;\n  }\n\n  .tooltip.top .tooltip-arrow {\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border-width: 5px 5px 0 5px;\n    border-color: rgba(31, 41, 55, 0.95) transparent transparent transparent;\n  }\n\n  .tooltip.bottom {\n    top: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    margin-top: 8px;\n  }\n\n  .tooltip.bottom .tooltip-arrow {\n    bottom: 100%;\n    left: 50%;\n    transform: translateX(-50%);\n    border-width: 0 5px 5px 5px;\n    border-color: transparent transparent rgba(31, 41, 55, 0.95) transparent;\n  }\n\n  .tooltip.left {\n    right: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    margin-right: 8px;\n  }\n\n  .tooltip.left .tooltip-arrow {\n    left: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    border-width: 5px 0 5px 5px;\n    border-color: transparent transparent transparent rgba(31, 41, 55, 0.95);\n  }\n\n  .tooltip.right {\n    left: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    margin-left: 8px;\n  }\n\n  .tooltip.right .tooltip-arrow {\n    right: 100%;\n    top: 50%;\n    transform: translateY(-50%);\n    border-width: 5px 5px 5px 0;\n    border-color: transparent rgba(31, 41, 55, 0.95) transparent transparent;\n  }\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n      transform: translateX(-50%) translateY(-2px);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(-50%) translateY(0);\n    }\n  }\n\n  .tooltip.bottom {\n    animation: fadeInBottom 0.2s ease-out;\n  }\n\n  @keyframes fadeInBottom {\n    from {\n      opacity: 0;\n      transform: translateX(-50%) translateY(2px);\n    }\n    to {\n      opacity: 1;\n      transform: translateX(-50%) translateY(0);\n    }\n  }\n\n  .tooltip.left, .tooltip.right {\n    animation: fadeInSide 0.2s ease-out;\n  }\n\n  @keyframes fadeInSide {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n</style>","<!-- web/src/lib/components/OptionCard.svelte -->\n<!-- Simplified option card with basic HTML controls -->\n<script>\n  import Tooltip from './Tooltip.svelte';\n  \n  let {\n    option,\n    selected = false,\n    disabled = false,\n    available = true,\n    unavailableReason = null,\n    isRequired = false,\n    selectionType = 'single',\n    groupName = null,\n    impact = null,\n    helpsResolve = [],\n    status = 'selectable',\n    requiresDeselect = [],\n    blockedBy = [],\n    canSelect = true,\n    selectionMethod = 'add',\n    onChange,\n    requirementTooltip = null\n  } = $props();\n  \n  // Debug logging\n  $effect(() => {\n    if (option.id === 'opt_keyboard' || option.id === 'opt_ram_16gb' || option.id === 'opt_ssd_512gb') {\n      console.log(`OptionCard ${option.id}: status=${status}, impact=${impact}, helpsResolve=`, helpsResolve);\n    }\n  });\n\n  function handleChange(event) {\n    // Handle different selection methods based on status\n    if (status === 'switch' && selectionType === 'single') {\n      // For switch status in single-select groups, always allow selection\n      // The parent will handle deselecting the other option\n      onChange(1);\n    } else if (status === 'blocked') {\n      // Prevent selection if blocked\n      event.preventDefault();\n      return;\n    } else if (selectionType === 'single') {\n      // For radio buttons, always send 1 when selected\n      onChange(1);\n    } else {\n      // For checkboxes, toggle between 0 and 1\n      // Don't allow deselecting required options\n      if (selected && isRequired) {\n        event.preventDefault();\n        return;\n      }\n      onChange(selected ? 0 : 1);\n    }\n  }\n  \n  // Determine visual marker based on status and impact\n  function getVisualMarker() {\n    // For selected options that are now blocked (constraint violation)\n    if (status === 'selected' && blockedBy && blockedBy.length > 0) {\n      const reasons = blockedBy.map(b => b.message || b.description).join('; ');\n      return { symbol: '❌', title: `Constraint violation: ${reasons}`, class: 'blocked' };\n    }\n    \n    // No marker for selected items that are valid\n    if (status === 'selected') {\n      return null;\n    }\n    \n    // Switch icon only for same-group alternatives in single-select groups\n    if (status === 'switch' && selectionType === 'single') {\n      if (impact === 'helps' && helpsResolve && helpsResolve.length > 0) {\n        return { symbol: '🔄', title: `Switch to resolve: ${helpsResolve.join(', ')}`, class: 'switch-helps' };\n      }\n      return { symbol: '🔄', title: 'Switch selection', class: 'switch' };\n    }\n    \n    // Blocked options (cannot be selected due to constraints)\n    if (status === 'blocked') {\n      const reasons = blockedBy && blockedBy.length > 0 \n        ? blockedBy.map(b => b.message || b.description).join('; ')\n        : unavailableReason || 'Cannot select due to constraints';\n      return { symbol: '❌', title: reasons, class: 'blocked' };\n    }\n    \n    // Don't show a marker for options that help - we'll use underline instead\n    \n    // No marker for regular selectable options or those that don't impact constraints\n    return null;\n  }\n  \n  const marker = $derived(getVisualMarker());\n</script>\n\n<div class=\"option-item\" class:unavailable={!available && !selected}>\n  <label class=\"option-label\" class:disabled={false}>\n    <input\n      type={selectionType === 'single' ? 'radio' : 'checkbox'}\n      name={selectionType === 'single' && groupName ? groupName : undefined}\n      checked={selected}\n      disabled={false}\n      onchange={handleChange}\n      class=\"option-input\"\n    />\n    <span class=\"option-text\" \n          class:helps-resolve={impact === 'helps'} \n          class:has-requirements={requirementTooltip && !marker}\n          class:has-violations={status === 'selected' && blockedBy && blockedBy.length > 0}>\n      {#if impact === 'helps' && helpsResolve && helpsResolve.length > 0}\n        <Tooltip content={`Helps resolve: ${helpsResolve.join(', ')}`} position=\"top\">\n          {option.name}\n          {#if option.base_price && option.base_price > 0}\n            <span class=\"price\">(+${option.base_price.toFixed(2)})</span>\n          {/if}\n        </Tooltip>\n      {:else if requirementTooltip && !marker}\n        <Tooltip content={requirementTooltip} position=\"top\">\n          {option.name}\n          {#if option.base_price && option.base_price > 0}\n            <span class=\"price\">(+${option.base_price.toFixed(2)})</span>\n          {/if}\n          <span class=\"requirement-hint\">ℹ️</span>\n        </Tooltip>\n      {:else}\n        {option.name}\n        {#if option.base_price && option.base_price > 0}\n          <span class=\"price\">(+${option.base_price.toFixed(2)})</span>\n        {/if}\n      {/if}\n      {#if isRequired && !selected}\n        <span class=\"badge-required\">[Required]</span>\n      {/if}\n      {#if marker}\n        <Tooltip content={marker.title} position=\"top\">\n          <span class=\"impact-marker {marker.class}\">{marker.symbol}</span>\n        </Tooltip>\n      {/if}\n    </span>\n  </label>\n  \n  {#if ((!available || disabled) && unavailableReason && !selected)}\n    <div class=\"constraint-reason\">\n      {unavailableReason}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .option-item {\n    margin: 0;\n    overflow: visible;\n  }\n  \n  .option-label {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    padding: 0.125rem 0;\n    gap: 0.375rem;\n  }\n\n  .option-label.disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .option-input {\n    width: 1rem;\n    height: 1rem;\n    margin: 0;\n    cursor: pointer;\n  }\n\n  .option-input:disabled {\n    cursor: not-allowed;\n  }\n  \n  .option-text {\n    font-size: 0.875rem;\n    color: var(--text-primary, #111827);\n    overflow: visible;\n    position: relative;\n    display: inline-block;\n  }\n  \n  /* Green squiggle for options that help resolve */\n  .option-text.helps-resolve {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 6' preserveAspectRatio='none'%3E%3Cpath fill='none' stroke='%2310b981' stroke-width='1.5' d='M0,4.5 Q2.5,1.5 5,4.5 t5,0 t5,0 t5,0'/%3E%3C/svg%3E\");\n    background-position: 0 100%;\n    background-size: 12px 4px;\n    background-repeat: repeat-x;\n    padding-bottom: 4px;\n    font-weight: 500;\n  }\n  \n  /* Blue squiggle for options with requirements */\n  .option-text.has-requirements {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 6' preserveAspectRatio='none'%3E%3Cpath fill='none' stroke='%233b82f6' stroke-width='1.5' d='M0,4.5 Q2.5,1.5 5,4.5 t5,0 t5,0 t5,0'/%3E%3C/svg%3E\");\n    background-position: 0 100%;\n    background-size: 12px 4px;\n    background-repeat: repeat-x;\n    padding-bottom: 4px;\n  }\n  \n  /* Red squiggle for selected options with violations */\n  .option-text.has-violations {\n    background-image: url(\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 6' preserveAspectRatio='none'%3E%3Cpath fill='none' stroke='%23ef4444' stroke-width='1.5' d='M0,4.5 Q2.5,1.5 5,4.5 t5,0 t5,0 t5,0'/%3E%3C/svg%3E\");\n    background-position: 0 100%;\n    background-size: 12px 4px;\n    background-repeat: repeat-x;\n    padding-bottom: 4px;\n    font-weight: 500;\n  }\n  \n  .price {\n    color: var(--primary-color, #3b82f6);\n    font-weight: 500;\n    margin-left: 0.25rem;\n  }\n  \n  .badge-required {\n    color: var(--error-color, #ef4444);\n    font-size: 0.75rem;\n    font-weight: 500;\n    margin-left: 0.5rem;\n  }\n  \n  .impact-marker {\n    margin-left: 0.5rem;\n    font-size: 0.875rem;\n    cursor: help;\n    display: inline-block;\n  }\n  \n  .impact-marker.switch {\n    /* Blue switch icon for single-select alternatives */\n    filter: hue-rotate(200deg);\n  }\n  \n  .impact-marker.switch-helps {\n    /* Green switch icon for alternatives that help */\n    filter: hue-rotate(90deg) brightness(1.1);\n  }\n  \n  .impact-marker.blocked {\n    /* Red X for blocked options */\n    filter: saturate(1.5);\n  }\n  \n  .requirement-hint {\n    margin-left: 0.25rem;\n    font-size: 1rem;\n    color: var(--info-color, #3b82f6);\n    cursor: help;\n    display: inline-block;\n    line-height: 1;\n    vertical-align: middle;\n    opacity: 0.8;\n    transition: opacity 0.2s;\n  }\n  \n  .requirement-hint:hover {\n    opacity: 1;\n  }\n  \n  .constraint-reason {\n    margin-left: 1.375rem;\n    padding: 0.125rem 0 0.25rem 0;\n    font-size: 0.75rem;\n    color: var(--text-secondary, #6b7280);\n    font-style: italic;\n  }\n  \n  .option-item.unavailable .constraint-reason {\n    color: #dc2626;\n  }\n</style>","<!-- web/src/lib/components/OptionGroup.svelte -->\n<!-- Compact group component without animations -->\n<script>\n    import OptionCard from './OptionCard.svelte';\n    import { sanitizeText } from '../utils/sanitizer.js';\n\n    let {\n        group,\n        options = [],\n        selections = {},\n        availableOptions = [],\n        validationResults = null,\n        onSelectionChange\n    } = $props();\n    \n    // Determine if this is a radio group\n    const isRadioGroup = group?.selection_type === 'single' || \n                        group?.selection_type === 'single-select' || \n                        group?.type === 'single-select' ||\n                        group?.type === 'single';\n    \n    // Debug logging for default options\n    $effect(() => {\n        if (group?.default_option_id) {\n            console.log(`OptionGroup ${group.name}:`, {\n                defaultOptionId: group.default_option_id,\n                selections: selections,\n                selectionsType: typeof selections,\n                isArray: Array.isArray(selections),\n                defaultSelected: selections && selections[group.default_option_id] > 0,\n                selectionsKeys: selections ? Object.keys(selections) : [],\n                selectionsJSON: JSON.stringify(selections)\n            });\n        }\n    });\n    \n    // Get selected option count for this group\n    const selectedCount = $derived(options.filter(opt => selections && selections[opt.id] > 0).length);\n    \n    // Get option state\n    function getOptionState(option) {\n        const selected = selections && (selections[option.id] || 0) > 0;\n        \n        // Debug for default options\n        if (option.id === group?.default_option_id) {\n            console.log(`getOptionState for default ${option.id}:`, {\n                selections,\n                selectionValue: selections ? selections[option.id] : undefined,\n                selected\n            });\n        }\n        \n        // Check availability from backend response\n        let available = true;\n        let reason = null;\n        let isRequired = false;\n        let impact = null;\n        let helpsResolve = [];\n        let status = 'selectable';\n        let requiresDeselect = [];\n        let blockedBy = [];\n        let canSelect = true;\n        let selectionMethod = 'add';\n        let requirementTooltip = null;\n        \n        if (Array.isArray(availableOptions) && availableOptions.length > 0) {\n            const firstItem = availableOptions[0];\n            \n            if (firstItem && typeof firstItem === 'object' && 'is_selectable' in firstItem) {\n                const availableOption = availableOptions.find(ao => \n                    (ao.option && ao.option.id === option.id) || ao.id === option.id\n                );\n                \n                if (availableOption) {\n                    // Check for new status field first\n                    if (availableOption.status) {\n                        status = availableOption.status;\n                        canSelect = availableOption.can_select || false;\n                        selectionMethod = availableOption.selection_method || 'none';\n                        requiresDeselect = availableOption.requires_deselect || [];\n                        blockedBy = availableOption.blocked_by || [];\n                        \n                        // Map status to available/disabled for UI\n                        available = status !== 'blocked';\n                        \n                        // Set reason from blocked_by if available\n                        if (blockedBy.length > 0) {\n                            reason = blockedBy[0].message || blockedBy[0].description || availableOption.reason;\n                        } else {\n                            reason = availableOption.reason || null;\n                        }\n                    } else {\n                        // Legacy support\n                        available = availableOption.is_selectable !== false;\n                        reason = availableOption.reason || null;\n                    }\n                    \n                    isRequired = availableOption.is_required === true;\n                    impact = availableOption.impact || null;\n                    helpsResolve = availableOption.helps_resolve || [];\n                    requirementTooltip = availableOption.requirement_tooltip || null;\n                    \n                    // Debug log for first few options\n                    if (availableOptions.indexOf(availableOption) < 3) {\n                        console.log(`Option ${option.name}:`, {\n                            status: availableOption.status,\n                            impact: availableOption.impact,\n                            helps_resolve: availableOption.helps_resolve,\n                            requires_deselect: availableOption.requires_deselect,\n                            blocked_by: availableOption.blocked_by\n                        });\n                    }\n                }\n            }\n        }\n        \n        // Never disable options - we want them clickable for testing\n        const disabled = false;\n        return { \n            selected, \n            available, \n            disabled, \n            reason, \n            isRequired, \n            impact, \n            helpsResolve,\n            status,\n            requiresDeselect,\n            blockedBy,\n            canSelect,\n            selectionMethod,\n            requirementTooltip\n        };\n    }\n\n    // Handle option change\n    function handleOptionChange(optionId, value) {\n        const newValue = value > 0 ? 1 : 0;\n        \n        // Check if this is a switch operation for single-select groups\n        if (isRadioGroup && newValue > 0) {\n            // Find the option being selected\n            const selectedOption = availableOptions.find(ao => \n                ((ao.option && ao.option.id === optionId) || ao.id === optionId)\n            );\n            \n            // If it's a switch status, deselect options that need to be deselected\n            if (selectedOption && selectedOption.status === 'switch' && selectedOption.requires_deselect) {\n                for (const deselectId of selectedOption.requires_deselect) {\n                    if (onSelectionChange) {\n                        onSelectionChange(deselectId, 0);\n                    }\n                }\n            } else if (isRadioGroup) {\n                // For regular radio groups, deselect other options in the group\n                for (const opt of options) {\n                    if (opt.id !== optionId && selections && selections[opt.id] > 0) {\n                        if (onSelectionChange) {\n                            onSelectionChange(opt.id, 0);\n                        }\n                    }\n                }\n            }\n        }\n        \n        if (onSelectionChange) {\n            onSelectionChange(optionId, newValue);\n        }\n    }\n</script>\n\n<div class=\"option-group\" class:radio-group={isRadioGroup}>\n    <div class=\"group-header\">\n        <h3 class=\"group-title\">\n            {sanitizeText(group.name)}\n            {#if group.is_required}\n                <span class=\"required\">*</span>\n            {/if}\n        </h3>\n        \n        {#if group.min_selections || group.max_selections}\n            <p class=\"selection-info\">\n                {#if group.min_selections && group.max_selections}\n                    Select {group.min_selections} to {group.max_selections}\n                {:else if group.min_selections}\n                    Select at least {group.min_selections}\n                {:else if group.max_selections}\n                    Select up to {group.max_selections}\n                {/if}\n                {#if selectedCount > 0}\n                    ({selectedCount} selected)\n                {/if}\n            </p>\n        {/if}\n    </div>\n    \n    <div class=\"options-container\">\n        {#each options as option (option.id)}\n            {@const state = getOptionState(option)}\n            <OptionCard\n                {option}\n                selected={state.selected}\n                disabled={state.disabled}\n                available={state.available}\n                unavailableReason={state.reason}\n                isRequired={state.isRequired}\n                impact={state.impact}\n                helpsResolve={state.helpsResolve}\n                status={state.status}\n                requiresDeselect={state.requiresDeselect}\n                blockedBy={state.blockedBy}\n                canSelect={state.canSelect}\n                selectionMethod={state.selectionMethod}\n                selectionType={isRadioGroup ? 'single' : 'multiple'}\n                groupName={`group-${group.id}`}\n                requirementTooltip={state.requirementTooltip}\n                onChange={(value) => handleOptionChange(option.id, value)}\n            />\n        {/each}\n    </div>\n</div>\n\n<style>\n    .option-group {\n        margin-bottom: 1rem;\n    }\n    \n    .group-header {\n        margin-bottom: 0.75rem;\n    }\n\n    .group-title {\n        font-size: 1rem;\n        font-weight: 600;\n        color: var(--text-primary, #111827);\n        margin: 0 0 0.25rem;\n    }\n    \n    .required {\n        color: var(--error-color, #ef4444);\n        font-weight: 600;\n        margin-left: 0.25rem;\n    }\n    \n    .selection-info {\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n        margin: 0;\n    }\n\n    .options-container {\n        display: flex;\n        flex-direction: column;\n        gap: 0;\n    }\n</style>","<!-- web/src/lib/components/ConfigurationSummary.svelte -->\n<!-- Configuration summary display component -->\n<script>\n    import { sanitizeText } from '../utils/sanitizer.js';\n    \n    let {\n        selections = {},\n        options = [],\n        groups = [],\n        compact = false,\n        configuration = null,\n        model = null,\n        validationResults = null,\n        constraintSummary = null,\n        onEdit = null\n    } = $props();\n\n    // Get selected options with their details\n    const selectedOptions = $derived(options\n        .filter(option => selections[option.id] > 0)\n        .map(option => ({\n            ...option,\n            quantity: selections[option.id],\n            group: groups.find(g => g.id === option.group_id)\n        }))\n        .sort((a, b) => (a.group_id || '').localeCompare(b.group_id || '')));\n    \n    // Calculate total price\n    const totalPrice = $derived(selectedOptions.reduce((sum, option) => \n        sum + (option.base_price || 0) * option.quantity, 0\n    ));\n    \n    // Group selected options by group\n    const groupedSelections = $derived(selectedOptions.reduce((grouped, option) => {\n        const groupName = option.group?.name || 'Other Options';\n        if (!grouped[groupName]) {\n            grouped[groupName] = [];\n        }\n        grouped[groupName].push(option);\n        return grouped;\n    }, {}));\n</script>\n\n<div class=\"configuration-summary\" class:compact>\n    {#if selectedOptions.length === 0}\n        <p class=\"empty-state\">No options selected yet</p>\n    {:else if compact}\n        <!-- Compact view for sidebar -->\n        <div class=\"compact-list\">\n            {#each selectedOptions as option}\n                <div class=\"summary-item\">\n                    <span class=\"item-name\">{sanitizeText(option.name)}</span>\n                    {#if option.base_price > 0}\n                        <span class=\"item-price\">+${option.base_price.toFixed(2)}</span>\n                    {/if}\n                </div>\n            {/each}\n        </div>\n        \n        <div class=\"summary-total\">\n            <span>Total:</span>\n            <span class=\"total-price\">${totalPrice.toFixed(2)}</span>\n        </div>\n    {:else}\n        <!-- Full view for detailed summary -->\n        <div class=\"full-summary\">\n            {#if configuration}\n                <!-- Configuration header -->\n                <div class=\"summary-header\">\n                    <div class=\"header-info\">\n                        <h3>Configuration Summary</h3>\n                        <p class=\"config-id\">ID: {configuration.id || 'Not saved'}</p>\n                    </div>\n                    \n                    <div class=\"header-status\">\n                        {#if configuration.validation?.is_valid}\n                            <span class=\"status-badge valid\">✅ Valid</span>\n                        {:else}\n                            <span class=\"status-badge invalid\">⚠️ Issues</span>\n                        {/if}\n                    </div>\n                </div>\n            {/if}\n            \n            <!-- Selected options by group -->\n            <div class=\"selections-section\">\n                <h4 class=\"section-title\">Selected Options ({selectedOptions.length})</h4>\n                \n                {#each Object.entries(groupedSelections) as [groupName, groupOptions]}\n                    <div class=\"group-section\">\n                        <h5 class=\"group-name\">{groupName}</h5>\n                        {#each groupOptions as option}\n                            <div class=\"option-row\">\n                                <div class=\"option-details\">\n                                    <span class=\"option-name\">{sanitizeText(option.name)}</span>\n                                    {#if option.sku}\n                                        <span class=\"option-sku\">SKU: {option.sku}</span>\n                                    {/if}\n                                </div>\n                                <div class=\"option-pricing\">\n                                    {#if option.quantity > 1}\n                                        <span class=\"quantity\">{option.quantity}x</span>\n                                    {/if}\n                                    {#if option.base_price > 0}\n                                        <span class=\"price\">${(option.base_price * option.quantity).toFixed(2)}</span>\n                                    {:else}\n                                        <span class=\"included\">Included</span>\n                                    {/if}\n                                </div>\n                            </div>\n                        {/each}\n                    </div>\n                {/each}\n            </div>\n            \n            <!-- Constraint violations if any -->\n            {#if validationResults && validationResults.violations && validationResults.violations.length > 0}\n                <div class=\"violations-section\">\n                    <h4 class=\"section-title\">⚠️ Configuration Issues ({validationResults.violations.length})</h4>\n                    {#each validationResults.violations as violation}\n                        <div class=\"violation-item\">\n                            <span class=\"violation-message\">{violation.message}</span>\n                            {#if violation.affected_options && violation.affected_options.length > 0}\n                                <span class=\"affected-options\">\n                                    Affects: {violation.affected_options.join(', ')}\n                                </span>\n                            {/if}\n                        </div>\n                    {/each}\n                </div>\n            {/if}\n            \n            <!-- Helpful options if there are violations -->\n            {#if constraintSummary && constraintSummary.helpfulOptions && constraintSummary.helpfulOptions.length > 0}\n                <div class=\"suggestions-section\">\n                    <h4 class=\"section-title\">💡 Suggested Options</h4>\n                    <p class=\"suggestion-intro\">These options can help resolve configuration issues:</p>\n                    {#each constraintSummary.helpfulOptions as helpful}\n                        <div class=\"suggestion-item\">\n                            <span class=\"suggestion-name\">{helpful.name}</span>\n                            <span class=\"helps-resolve\">Resolves: {helpful.helpsResolve.join(', ')}</span>\n                        </div>\n                    {/each}\n                </div>\n            {/if}\n            \n            <!-- Total -->\n            <div class=\"summary-footer\">\n                <div class=\"total-row\">\n                    <span class=\"total-label\">Configuration Total</span>\n                    <span class=\"total-amount\">${totalPrice.toFixed(2)}</span>\n                </div>\n            </div>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .configuration-summary {\n        font-size: 0.875rem;\n    }\n    \n    .configuration-summary.compact {\n        background: transparent;\n    }\n    \n    .empty-state {\n        text-align: center;\n        color: var(--text-secondary, #6b7280);\n        padding: 1rem;\n        margin: 0;\n    }\n    \n    /* Compact view styles */\n    .compact-list {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n    \n    .summary-item {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0.375rem 0;\n        border-bottom: 1px solid var(--border-light, #f3f4f6);\n    }\n    \n    .summary-item:last-child {\n        border-bottom: none;\n    }\n    \n    .item-name {\n        color: var(--text-primary, #111827);\n        font-weight: 500;\n        flex: 1;\n        margin-right: 0.5rem;\n        font-size: 0.875rem;\n    }\n    \n    .item-price {\n        color: var(--primary-color, #3b82f6);\n        font-weight: 600;\n        white-space: nowrap;\n        font-size: 0.875rem;\n    }\n    \n    .summary-total {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding-top: 0.75rem;\n        margin-top: 0.75rem;\n        border-top: 2px solid var(--border-color, #e5e7eb);\n        font-weight: 600;\n    }\n    \n    .total-price {\n        color: var(--primary-color, #3b82f6);\n        font-size: 1rem;\n    }\n    \n    /* Full view styles */\n    .full-summary {\n        background: var(--bg-primary, #ffffff);\n        border-radius: 0.5rem;\n        overflow: hidden;\n    }\n    \n    .summary-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        padding: 1.5rem;\n        background: var(--bg-secondary, #f9fafb);\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n    }\n\n    .header-info h3 {\n        margin: 0 0 0.25rem;\n        font-size: 1.25rem;\n        font-weight: 600;\n    }\n\n    .config-id {\n        margin: 0;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n        font-family: monospace;\n    }\n\n    .status-badge {\n        padding: 0.375rem 0.75rem;\n        border-radius: 999px;\n        font-size: 0.875rem;\n        font-weight: 500;\n    }\n\n    .status-badge.valid {\n        background: var(--success-bg, #d1fae5);\n        color: var(--success-text, #065f46);\n    }\n\n    .status-badge.invalid {\n        background: var(--warning-bg, #fef3c7);\n        color: var(--warning-text, #92400e);\n    }\n    \n    .selections-section {\n        padding: 1.5rem;\n    }\n    \n    .section-title {\n        margin: 0 0 1rem;\n        font-size: 0.875rem;\n        font-weight: 600;\n        text-transform: uppercase;\n        letter-spacing: 0.05em;\n        color: var(--text-secondary, #6b7280);\n    }\n    \n    .group-section {\n        padding-bottom: 1rem;\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n        margin-bottom: 1rem;\n    }\n    \n    .group-section:last-child {\n        border-bottom: none;\n        margin-bottom: 0;\n        padding-bottom: 0;\n    }\n    \n    .group-name {\n        font-size: 0.875rem;\n        font-weight: 600;\n        color: var(--text-primary, #111827);\n        margin: 0 0 0.5rem;\n    }\n    \n    .option-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0.5rem 0;\n    }\n    \n    .option-details {\n        display: flex;\n        flex-direction: column;\n        gap: 0.125rem;\n        flex: 1;\n    }\n    \n    .option-name {\n        font-weight: 500;\n        color: var(--text-primary, #111827);\n    }\n    \n    .option-sku {\n        font-size: 0.75rem;\n        color: var(--text-tertiary, #9ca3af);\n    }\n    \n    .option-pricing {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n    }\n    \n    .quantity {\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n    \n    .price {\n        font-weight: 600;\n        color: var(--primary-color, #3b82f6);\n    }\n    \n    .included {\n        font-size: 0.875rem;\n        color: var(--success-color, #10b981);\n    }\n    \n    .summary-footer {\n        padding: 1.5rem;\n        background: var(--bg-secondary, #f9fafb);\n        border-top: 1px solid var(--border-color, #e5e7eb);\n    }\n    \n    .total-row {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n    \n    .total-label {\n        font-weight: 600;\n        color: var(--text-primary, #111827);\n    }\n    \n    .total-amount {\n        font-size: 1.25rem;\n        font-weight: 700;\n        color: var(--primary-color, #3b82f6);\n    }\n    \n    /* Violations section */\n    .violations-section {\n        padding: 1.5rem;\n        background: var(--error-bg, #fef2f2);\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n    }\n    \n    .violation-item {\n        padding: 0.5rem;\n        margin-bottom: 0.5rem;\n        background: var(--bg-primary, #ffffff);\n        border-radius: 0.375rem;\n        border: 1px solid var(--error-border, #fecaca);\n    }\n    \n    .violation-item:last-child {\n        margin-bottom: 0;\n    }\n    \n    .violation-message {\n        display: block;\n        color: var(--error-text, #991b1b);\n        font-weight: 500;\n        margin-bottom: 0.25rem;\n    }\n    \n    .affected-options {\n        display: block;\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n    }\n    \n    /* Suggestions section */\n    .suggestions-section {\n        padding: 1.5rem;\n        background: var(--info-bg, #eff6ff);\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n    }\n    \n    .suggestion-intro {\n        margin: 0 0 0.75rem;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n    \n    .suggestion-item {\n        padding: 0.5rem;\n        margin-bottom: 0.5rem;\n        background: var(--bg-primary, #ffffff);\n        border-radius: 0.375rem;\n        border: 1px solid var(--info-border, #bfdbfe);\n    }\n    \n    .suggestion-item:last-child {\n        margin-bottom: 0;\n    }\n    \n    .suggestion-name {\n        display: block;\n        color: var(--info-text, #1e40af);\n        font-weight: 500;\n        margin-bottom: 0.25rem;\n    }\n    \n    .helps-resolve {\n        display: block;\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n    }\n    \n    @media (max-width: 640px) {\n        .summary-header {\n            flex-direction: column;\n            gap: 1rem;\n        }\n    }\n</style>","<!-- web/src/lib/ConfiguratorApp.svelte -->\n<!-- Simplified CPQ UI with no animations and immediate feedback -->\n<script>\n  import { onMount } from 'svelte';\n  import { configStore } from './stores/configuration.svelte.js';\n  import { createConfigurationSessionStore } from './stores/configuration-session.svelte.js';\n  import LoadingSpinner from './components/LoadingSpinner.svelte';\n  import ErrorBoundary from './components/ErrorBoundary.svelte';\n  import OptionGroup from './components/OptionGroup.svelte';\n  import PricingDisplay from './components/PricingDisplay.svelte';\n  import ConfigurationSummary from './components/ConfigurationSummary.svelte';\n  \n  let {\n    modelId,\n    theme = 'light',\n    apiUrl = '/api/v1',\n    embedMode = false,\n    onComplete = null,\n    configurationId = null,\n    useSessionApi = false\n  } = $props();\n  \n  let mounted = $state(false);\n  \n  // Choose store based on API version\n  let store = useSessionApi ? createConfigurationSessionStore() : configStore;\n  \n  // Set API URL globally\n  if (typeof window !== 'undefined') {\n    window.__API_BASE_URL__ = apiUrl;\n  }\n  \n  // Computed values - works with both stores\n  const visibleGroups = $derived(\n    Array.isArray(store.groups) \n      ? store.groups.filter(g => g.is_active !== false) \n      : []\n  );\n  \n  // Check if we have properly loaded the model and selections\n  const isReady = $derived(\n    store.model && \n    store.groups && \n    store.options && \n    store.selections !== null &&\n    store.selections !== undefined &&\n    Object.keys(store.selections).length >= 0  // Force reactivity check\n  );\n  const isComplete = $derived(store.isValid && store.selectedCount > 0);\n  const sessionInfo = $derived(useSessionApi ? {\n    status: store.sessionStatus,\n    timeRemaining: store.sessionTimeRemaining,\n    sessionId: store.sessionId\n  } : null);\n  \n  // Debug logging\n  $effect(() => {\n    if (useSessionApi) {\n      console.log('Session Store State:', {\n        groups: store.groups,\n        options: store.options,\n        model: store.model,\n        visibleGroups,\n        sessionId: store.sessionId,\n        isValid: store.isValid,\n        validationResult: store.validationResult,\n        selections: store.selections,\n        selectionCount: Object.keys(store.selections || {}).length,\n        timestamp: new Date().toISOString()\n      });\n      \n      // Debug each group's default option\n      if (store.groups && store.selections) {\n        store.groups.forEach(group => {\n          if (group.default_option_id) {\n            const isSelected = store.selections[group.default_option_id] > 0;\n            console.log(`Group ${group.name}: default=${group.default_option_id}, selected=${isSelected}`);\n          }\n        });\n      }\n    }\n  });\n  \n  onMount(async () => {\n    if (useSessionApi) {\n      // Initialize session-based store\n      // Let the SessionApiClient determine the correct URL based on environment\n      await store.initialize(modelId, {\n        authToken: localStorage.getItem('auth_token')\n      });\n    } else {\n      // Initialize regular store\n      await store.initialize();\n      store.setModelId(modelId);\n      \n      if (configurationId) {\n        await store.loadConfiguration(configurationId);\n      }\n    }\n    \n    mounted = true;\n    document.documentElement.setAttribute('data-theme', theme);\n  });\n  \n  async function handleSave() {\n    if (store.isSaving) return;\n    \n    if (useSessionApi) {\n      // Complete session for session-based API\n      await store.completeSession();\n      if (onComplete) {\n        onComplete({\n          sessionId: store.sessionId,\n          selections: store.selections,\n          totalPrice: store.totalPrice,\n          isValid: store.isValid\n        });\n      }\n    } else {\n      // Save configuration for regular API\n      const saved = await store.saveConfiguration();\n      if (saved && onComplete) {\n        onComplete(store.exportConfiguration());\n      }\n    }\n  }\n  \n  async function handleExtendSession() {\n    if (useSessionApi && store.extendSession) {\n      await store.extendSession(30);\n    }\n  }\n  \n  function handleClearSession() {\n    // Clear session from local storage\n    if (typeof localStorage !== 'undefined') {\n      localStorage.removeItem('session_id');\n      localStorage.removeItem('session_token');\n      localStorage.removeItem('auth_token');\n    }\n    \n    // Reset the store\n    store.reset();\n    \n    // Reinitialize\n    if (useSessionApi) {\n      store.initialize(modelId, {\n        authToken: null\n      });\n    } else {\n      store.setModelId(modelId);\n    }\n  }\n  \n  function retry() {\n    store.error = null;\n    if (useSessionApi) {\n      store.initialize(modelId, {\n        authToken: localStorage.getItem('auth_token')\n      });\n    } else {\n      store.loadModel();\n    }\n  }\n</script>\n\n<div class=\"configurator-app\" class:embed-mode={embedMode} data-theme={theme}>\n  <ErrorBoundary>\n    {#if !mounted}\n      <div class=\"loading-state\">\n        <LoadingSpinner size=\"large\" />\n        <p>Initializing configurator...</p>\n      </div>\n    {:else if store.error}\n      <div class=\"error-state\">\n        <h2>Unable to Load Configuration</h2>\n        <p>{store.error.message || 'Something went wrong'}</p>\n        <button class=\"btn-retry\" onclick={retry}>Try Again</button>\n      </div>\n    {:else if store.isLoading || !isReady}\n      <div class=\"loading-state\">\n        <LoadingSpinner size=\"large\" />\n        <p>Loading configuration options...</p>\n      </div>\n    {:else if !store.model}\n      <div class=\"error-state\">\n        <h2>Model Not Found</h2>\n        <p>The requested configuration model could not be loaded.</p>\n      </div>\n    {:else}\n      <div class=\"configurator-layout\">\n        <!-- Debug Info (temporary) -->\n        {#if window.location.hostname === 'localhost'}\n          <div class=\"debug-info\">\n            <details>\n              <summary>Debug: Store State</summary>\n              <pre>{JSON.stringify({\n                selections: store.selections,\n                selectionCount: store.selectedCount,\n                groupsWithDefaults: store.groups?.filter(g => g.default_option_id).map(g => ({\n                  name: g.name,\n                  defaultOptionId: g.default_option_id,\n                  isSelected: store.selections && store.selections[g.default_option_id] > 0\n                }))\n              }, null, 2)}</pre>\n            </details>\n          </div>\n        {/if}\n        \n        <!-- Header -->\n        <header class=\"configurator-header\">\n          <div class=\"header-content\">\n            <h1>{store.model.name}</h1>\n            {#if store.model.description}\n              <p class=\"model-description\">{store.model.description}</p>\n            {/if}\n          </div>\n          \n          {#if sessionInfo}\n            <div class=\"session-info\">\n              <span class=\"session-status {sessionInfo.status}\">{sessionInfo.status}</span>\n              {#if sessionInfo.timeRemaining}\n                <span class=\"session-expiry\">Expires in: {sessionInfo.timeRemaining}</span>\n                {#if sessionInfo.timeRemaining === '1 days' || sessionInfo.timeRemaining.includes('hours')}\n                  <button class=\"extend-btn\" onclick={handleExtendSession}>Extend</button>\n                {/if}\n              {/if}\n              <button class=\"clear-session-btn\" onclick={handleClearSession} title=\"Clear session and start over\">\n                Clear Session\n              </button>\n            </div>\n          {/if}\n          \n          {#if !sessionInfo && store.configurationId}\n            <div class=\"session-info\">\n              <span class=\"config-id\">Config ID: {store.configurationId}</span>\n              <button class=\"clear-session-btn\" onclick={handleClearSession} title=\"Clear configuration and start over\">\n                Start New Configuration\n              </button>\n            </div>\n          {/if}\n          \n        </header>\n        \n        <div class=\"configurator-body\">\n          <!-- Left Column: Option Groups -->\n          <div class=\"options-column\">\n            <h2 class=\"column-title\">Configuration Options</h2>\n            \n            {#if visibleGroups.length === 0}\n              <p class=\"empty-state\">No configuration groups available.</p>\n            {:else}\n              {#each visibleGroups as group (group.id)}\n                <OptionGroup\n                  {group}\n                  options={store.options?.filter(o => \n                    o.group_id === group.id && o.is_active !== false\n                  ) || []}\n                  selections={store.selections}\n                  availableOptions={store.availableOptions || []}\n                  validationResults={useSessionApi ? store.validationResult : store.validationResults}\n                  onSelectionChange={(optionId, value) => \n                    store.updateSelection(optionId, value)\n                  }\n                />\n              {/each}\n            {/if}\n          </div>\n          \n          <!-- Right Column: Constraints, Summary & Pricing -->\n          <div class=\"info-column\">\n            <!-- Summary & Pricing -->\n            <div class=\"info-section\">\n              <h3>Configuration Summary</h3>\n              \n              <ConfigurationSummary\n                selections={store.selections || {}}\n                options={store.options || []}\n                groups={store.groups || []}\n                compact={false}\n                configuration={store.configuration}\n                validationResults={useSessionApi ? store.validationResult : store.validationResults}\n                constraintSummary={typeof store.getConstraintSummary === 'function' ? store.getConstraintSummary() : null}\n              />\n              \n              <PricingDisplay\n                pricing={useSessionApi ? store.pricingResult : store.pricingData}\n                isCalculating={store.isPricing || false}\n                selections={store.selections || {}}\n                options={store.options || []}\n              />\n              \n              <!-- Actions -->\n              <div class=\"actions-section\">\n                <button\n                  class=\"btn-primary\"\n                  onclick={handleSave}\n                  disabled={!isComplete || store.isSaving || (useSessionApi && sessionInfo?.status === 'completed')}\n                >\n                  {#if store.isSaving}\n                    <LoadingSpinner size=\"small\" />\n                    <span>Saving...</span>\n                  {:else}\n                    <span>{useSessionApi ? 'Complete Configuration' : 'Save Configuration'}</span>\n                  {/if}\n                </button>\n                \n                {#if store.selectedCount > 0}\n                  <button \n                    class=\"btn-secondary\"\n                    onclick={() => store.reset()}\n                  >\n                    Clear All\n                  </button>\n                {/if}\n                \n                {#if !isComplete && store.selectedCount > 0}\n                  <p class=\"help-text\">Resolve validation errors to continue</p>\n                {/if}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    {/if}\n  </ErrorBoundary>\n</div>\n\n<style>\n  .configurator-app {\n    --primary-color: #3b82f6;\n    --primary-hover: #2563eb;\n    --success-color: #10b981;\n    --error-color: #ef4444;\n    --text-primary: #111827;\n    --text-secondary: #6b7280;\n    --bg-primary: #ffffff;\n    --bg-secondary: #f9fafb;\n    --border-color: #e5e7eb;\n    \n    min-height: 100vh;\n    background-color: var(--bg-secondary);\n    color: var(--text-primary);\n    font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, sans-serif;\n  }\n  \n  .configurator-app.embed-mode {\n    min-height: auto;\n    background-color: var(--bg-primary);\n  }\n  \n  /* Loading & Error States */\n  .loading-state,\n  .error-state {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    min-height: 400px;\n    padding: 2rem;\n    text-align: center;\n    gap: 1rem;\n  }\n  \n  .error-state h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0;\n  }\n  \n  .error-state p {\n    color: var(--text-secondary);\n    margin: 0.5rem 0 1.5rem;\n  }\n  \n  .btn-retry {\n    padding: 0.5rem 1rem;\n    background-color: var(--primary-color);\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 0.875rem;\n    cursor: pointer;\n  }\n  \n  .btn-retry:hover {\n    background-color: var(--primary-hover);\n  }\n  \n  /* Layout */\n  .configurator-layout {\n    max-width: 1400px;\n    margin: 0 auto;\n    padding: 1rem;\n  }\n  \n  /* Header */\n  .configurator-header {\n    margin-bottom: 1.5rem;\n  }\n  \n  .header-content {\n    margin-bottom: 1rem;\n  }\n  \n  .configurator-header h1 {\n    font-size: 1.875rem;\n    font-weight: 700;\n    margin: 0 0 0.5rem;\n  }\n  \n  .model-description {\n    font-size: 1rem;\n    color: var(--text-secondary);\n    margin: 0;\n  }\n  \n  /* Session Info */\n  .session-info {\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n    margin-bottom: 1rem;\n    font-size: 0.875rem;\n  }\n  \n  .session-status {\n    padding: 0.25rem 0.75rem;\n    border-radius: 1rem;\n    font-weight: 500;\n    text-transform: capitalize;\n  }\n  \n  .session-status.draft {\n    background: #fef3c7;\n    color: #92400e;\n  }\n  \n  .session-status.validated {\n    background: #d1fae5;\n    color: #065f46;\n  }\n  \n  .session-status.completed {\n    background: #dbeafe;\n    color: #1e40af;\n  }\n  \n  .session-expiry {\n    color: var(--text-secondary);\n  }\n  \n  .config-id {\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n    font-family: monospace;\n  }\n  \n  .extend-btn {\n    padding: 0.25rem 0.75rem;\n    background: var(--primary-color);\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 0.75rem;\n    cursor: pointer;\n  }\n  \n  .extend-btn:hover {\n    background: var(--primary-hover);\n  }\n  \n  .clear-session-btn {\n    padding: 0.25rem 0.75rem;\n    background: var(--error-color);\n    color: white;\n    border: none;\n    border-radius: 4px;\n    font-size: 0.75rem;\n    cursor: pointer;\n    margin-left: auto;\n  }\n  \n  .clear-session-btn:hover {\n    background: #dc2626;\n  }\n  \n  /* Two Column Layout */\n  .configurator-body {\n    display: grid;\n    grid-template-columns: 1fr 500px;\n    gap: 1.5rem;\n    align-items: start;\n  }\n  \n  /* Options Column */\n  .options-column {\n    background: var(--bg-primary);\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    padding: 1.5rem;\n  }\n  \n  .column-title {\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin: 0 0 1rem;\n  }\n  \n  .empty-state {\n    text-align: center;\n    color: var(--text-secondary);\n    padding: 2rem;\n  }\n  \n  /* Info Column */\n  .info-column {\n    position: sticky;\n    top: 1rem;\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .info-section {\n    background: var(--bg-primary);\n    border: 1px solid var(--border-color);\n    border-radius: 8px;\n    padding: 1.5rem;\n  }\n  \n  .info-section h3 {\n    font-size: 1.125rem;\n    font-weight: 600;\n    margin: 0 0 1rem;\n  }\n  \n  /* Actions */\n  .actions-section {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n    margin-top: 1.5rem;\n    padding-top: 1.5rem;\n    border-top: 1px solid var(--border-color);\n  }\n  \n  .btn-primary,\n  .btn-secondary {\n    padding: 0.75rem 1rem;\n    border: none;\n    border-radius: 4px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n  }\n  \n  .btn-primary {\n    background-color: var(--primary-color);\n    color: white;\n  }\n  \n  .btn-primary:hover:not(:disabled) {\n    background-color: var(--primary-hover);\n  }\n  \n  .btn-primary:disabled {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n  \n  .btn-secondary {\n    background-color: white;\n    color: var(--text-primary);\n    border: 1px solid var(--border-color);\n  }\n  \n  .btn-secondary:hover {\n    background-color: var(--bg-secondary);\n  }\n  \n  .help-text {\n    margin: 0;\n    font-size: 0.875rem;\n    color: var(--error-color);\n    text-align: center;\n  }\n  \n  /* Debug Info */\n  .debug-info {\n    background: #fef3c7;\n    border: 1px solid #f59e0b;\n    border-radius: 4px;\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    font-size: 0.75rem;\n  }\n  \n  .debug-info summary {\n    cursor: pointer;\n    font-weight: 600;\n    color: #92400e;\n  }\n  \n  .debug-info pre {\n    margin: 0.5rem 0 0;\n    padding: 0.5rem;\n    background: white;\n    border-radius: 4px;\n    overflow-x: auto;\n  }\n\n  /* Responsive */\n  @media (max-width: 1024px) {\n    .configurator-body {\n      grid-template-columns: 1fr;\n    }\n    \n    .info-column {\n      position: static;\n    }\n  }\n  \n  @media (max-width: 640px) {\n    .configurator-layout {\n      padding: 0.5rem;\n    }\n    \n    .options-column,\n    .info-section {\n      padding: 1rem;\n    }\n  }\n</style>","<!-- web/src/lib/components/PricingDisplay.svelte -->\n<!-- Simplified pricing display matching ConstraintTester style -->\n<script>\n  import LoadingSpinner from './LoadingSpinner.svelte';\n\n  let {\n    pricing = null,\n    isCalculating = false,\n    selections = {},\n    options = []\n  } = $props();\n\n  // Get selected options with details\n  let selectedOptions = $derived((() => {\n    if (!Array.isArray(options)) return [];\n\n    return Object.entries(selections || {})\n            .filter(([_, selected]) => selected > 0)\n            .map(([optionId]) => options.find(o => o.id === optionId))\n            .filter(Boolean);\n  })());\n\n  // Calculate totals\n  let baseTotal = $derived(\n          selectedOptions?.reduce((sum, opt) => sum + (opt.price || opt.base_price || 0), 0) || 0\n  );\n\n  let finalTotal = $derived(pricing?.total || pricing?.breakdown?.total_price || baseTotal);\n</script>\n\n<div class=\"pricing-display\">\n  {#if isCalculating}\n    <div class=\"calculating\">\n      <LoadingSpinner size=\"small\" />\n      <span>Calculating price...</span>\n    </div>\n  {:else if selectedOptions.length === 0}\n    <div class=\"empty-pricing\">\n      <p>No options selected</p>\n    </div>\n  {:else}\n    <!-- Selected Items -->\n    <div class=\"selected-items\">\n      <h4 class=\"section-label\">Selected Options:</h4>\n      {#each selectedOptions as option (option.id)}\n        <div class=\"price-item\">\n          <span class=\"item-name\">{option.name}</span>\n          <span class=\"item-price\">\n            ${(option.price || option.base_price || 0).toFixed(2)}\n          </span>\n        </div>\n      {/each}\n    </div>\n\n    <!-- Discounts if any -->\n    {#if pricing?.breakdown?.adjustments && pricing.breakdown.adjustments.length > 0}\n      <div class=\"discounts-section\">\n        <h4 class=\"section-label\">Discounts Applied:</h4>\n        {#each pricing.breakdown.adjustments as adjustment}\n          {#if adjustment.amount < 0}\n            <div class=\"discount-item\">\n              <span class=\"discount-name\">{adjustment.description || adjustment.rule_name}</span>\n              <span class=\"discount-amount\">-${Math.abs(adjustment.amount).toFixed(2)}</span>\n            </div>\n          {/if}\n        {/each}\n      </div>\n    {/if}\n\n    <!-- Total -->\n    <div class=\"total-section\">\n      <span class=\"total-label\">Total Price:</span>\n      <span class=\"total-amount\">${finalTotal.toFixed(2)}</span>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .pricing-display {\n    padding: 16px 0;\n  }\n\n  .calculating {\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    justify-content: center;\n    padding: 24px;\n    color: #6b7280;\n    font-size: 14px;\n  }\n\n  .empty-pricing {\n    text-align: center;\n    padding: 24px;\n    color: #9ca3af;\n    font-size: 14px;\n  }\n\n  .section-label {\n    font-size: 14px;\n    font-weight: 600;\n    color: #374151;\n    margin: 16px 0 8px 0;\n  }\n\n  .selected-items {\n    margin-bottom: 16px;\n  }\n\n  .price-item {\n    display: flex;\n    justify-content: space-between;\n    padding: 6px 0;\n    font-size: 14px;\n    color: #4b5563;\n  }\n\n  .item-name {\n    flex: 1;\n  }\n\n  .item-price {\n    font-weight: 500;\n    color: #111827;\n  }\n\n  .discounts-section {\n    padding-top: 12px;\n    border-top: 1px solid #e5e7eb;\n    margin-bottom: 16px;\n  }\n\n  .discount-item {\n    display: flex;\n    justify-content: space-between;\n    padding: 6px 0;\n    font-size: 14px;\n  }\n\n  .discount-name {\n    color: #059669;\n  }\n\n  .discount-amount {\n    font-weight: 500;\n    color: #059669;\n  }\n\n  .total-section {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 16px 0;\n    border-top: 2px solid #e5e7eb;\n    margin-top: 16px;\n  }\n\n  .total-label {\n    font-size: 18px;\n    font-weight: 600;\n    color: #111827;\n  }\n\n  .total-amount {\n    font-size: 24px;\n    font-weight: 700;\n    color: #1f2937;\n  }\n</style>"],"names":["window","_a","__svelte","v","Set","add","ConfiguratorApiClient","constructor","baseUrl","options","defaultUrl","location","hostname","port","this","__API_BASE_URL__","modelId","authToken","localStorage","getItem","timeout","console","log","hasAuth","request","endpoint","url","method","config","headers","Authorization","body","JSON","stringify","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","errorData","json","e","message","statusText","errorMessage","error","status","Error","data","result","success","includes","name","getModel","model","option_groups","groups","hasGroups","hasOptionGroups","hasOptions","groupsCount","length","optionsCount","getModelGroups","Array","isArray","getModelOptions","getModelRules","getModelPricingRules","getModelStatistics","createConfiguration","selections","model_id","Date","toISOString","getConfiguration","configId","updateConfiguration","updates","formatSelections","deleteConfiguration","addSelections","removeSelection","optionId","validateConfiguration","validateSelections","getAvailableOptions","getConstraints","getConfigurationSummary","cloneConfiguration","calculatePrice","configurationId","context","customer_id","simulatePricing","scenarios","validatePricing","expectedPrice","expected_price","getPricingRules","getVolumeTiers","validateModel","detectConflicts","ruleIds","rule_ids","analyzeImpact","changes","getModelQuality","getOptimizationRecommendations","Object","entries","filter","_","quantity","map","option_id","parseInt","batchValidate","configurations","bulkCalculatePricing","checkHealth","getStatus","containsCode","text","some","pattern","sanitizeText","fallback","textStr","String","warn","original","substring","sanitizeObject","obj","fields","item","sanitized","keys","forEach","key","cleaned","configStore","api","_initialized","_debounceTimers","Map","_modelLoaded","initialize","$.user_effect","loadModel","_debounce","updateSelectionsOnBackend","isValid","validationResults","violations","selectedCount","values","progress","totalRequired","g","required","completedRequired","hasGroupSelection","id","Math","round","totalPrice","pricingData","total","breakdown","total_price","adjustments","safeGroups","safeOptions","isLoading","group","is_active","option","rules","pricingRules","pricing_rules","volumeTiers","volume_tiers","availableOptions","opt","is_selectable","reason","slice","expandedGroups","code","details","configuration","loadConfiguration","calculatePricing","saveConfiguration","isSaving","lastSaved","isDirty","updateSelection","newQuantity","find","o","group_id","availableOption","ao","requires_deselect","deselectId","groupInfo","group_info","max_selections","validation_result","validationErrors","available_options","checkAndDeselectInvalidOptions","checkAndApplyRequiredOptions","updateVisibleOptions","isValidating","validationData","isPricing","selectionsArray","value","isGroupExpanded","groupId","has","toggleGroup","delete","getGroupSelectionCount","isOptionAvailable","getOptionUnavailableReason","blocked_by","description","getOptionConstraintInfo","canSelect","can_select","selectionMethod","selection_method","requiresDeselect","blockedBy","impact","helpsResolve","helps_resolve","isRequired","is_required","getConstraintSummary","summary","hasViolations","blockedOptions","switchableOptions","helpfulOptions","totalOptions","availableCount","blockedCount","ruleId","rule_id","ruleName","rule_name","affectedOptions","affected_options","optionInfo","push","reasons","anyDeselected","isBlocked","constraint","type","reasonText","join","autoSelected","selection_type","evaluateRuleCondition","rule","expression","match","extractRequiredOptions","thenIndex","indexOf","exportConfiguration","validation","is_valid","pricing","currency","metadata","created","created_at","updated","updated_at","saved","hiddenOptions","isOptionVisible","clearSelections","reset","currentStep","fn","delay","get","set","setModelId","SessionApiClient","replace","sessionToken","sessionId","hasSession","createSession","session_id","setItem","session_token","getSession","updateSession","updateSelections","validateSession","completeSession","extendSession","days","getUserSessions","recoverSession","session","expires_at","clearSession","removeItem","ConfigurationSessionStore","apiUrl","Promise","resolve","sessionStatus","expiresAt","newSelections","sel","OptionID","Quantity","validationResult","validation_state","pricingResult","pricing_state","selectionsCount","all","rulesCount","currentSelections","selectionsKeys","default_option_id","isSelected","isSingleSelect","updateTimeout","formattedSelections","updated_config","price_breakdown","backendSelections","helps","fullResult","configIsValid","selectedOptions","Boolean","hasActiveViolations","severity","sessionTimeRemaining","now","diff","floor","hours","clearError","size","$$render","consequent","small","large","on_click","reload","tooltipElement","targetElement","content","position","maxWidth","showTooltip","$.bind_this","div_1","$$value","$.get","div","$.set","handleChange","event","selectionType","preventDefault","selected","$.prop","$$props","isRadioGroup","defaultOptionId","selectionsType","defaultSelected","selectionsJSON","$.template_effect","$.set_text","text_1","min_selections","consequent_3","consequent_2","alternate_1","consequent_1","alternate","consequent_4","consequent_5","each","div_2","state","$.derived","selectionValue","available","requirementTooltip","firstItem","requirement_tooltip","disabled","getOptionState","unavailableReason","groupName","marker","symbol","title","b","class","base_price","toFixed","set_class","span_5","text_6","consequent_6","consequent_7","$.set_attribute","input","set_attribute","unavailable","onChange","newValue","selectedOption","onSelectionChange","handleOptionChange","compact","constraintSummary","sort","a","localeCompare","reduce","sum","groupedSelections","grouped","alternate_2","$.index","$$anchor","$$item","$.each","node_5","$$array","template_effect","text_7","sku","text_8","alternate_3","violation","consequent_8","text_11","consequent_9","helpful","text_13","consequent_10","text_4","theme","embedMode","onComplete","useSessionApi","mounted","store","visibleGroups","isReady","isComplete","sessionInfo","timeRemaining","async","handleSave","handleExtendSession","handleClearSession","retry","selectionCount","timestamp","onMount","document","documentElement","setAttribute","onError","hasError","handleError","stopPropagation","addEventListener","removeEventListener","groupsWithDefaults","text_5","span","node_11","expression_1","expression_2","alternate_4","expression_3","expression_4","expression_5","expression_6","expression_8","expression_10","expression_11","isCalculating","baseTotal","price","finalTotal","node_2","node_4","adjustment","set_text","text_2","abs","amount","consequent_11","alternate_5","button_5","__click","consequent_12","consequent_13"],"mappings":"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","x_google_ignoreList":[0,1]}