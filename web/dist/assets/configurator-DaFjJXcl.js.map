{"version":3,"file":"configurator-DaFjJXcl.js","sources":["../../src/lib/utils/timing.js","../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../src/lib/api/client.js","../../src/lib/utils/storage.js","../../src/lib/stores/configuration.svelte.js","../../src/lib/components/ErrorBoundary.svelte","../../src/lib/utils/format.js","../../src/lib/components/OptionCard.svelte","../../src/lib/components/OptionGroup.svelte","../../src/lib/utils/virtual-scroll.js","../../src/lib/components/PricingDisplay.svelte","../../src/lib/components/ValidationDisplay.svelte","../../src/lib/components/ConfigurationSummary.svelte","../../src/lib/components/UndoRedo.svelte","../../src/lib/ConfiguratorApp.svelte","../../src/lib/components/NetworkStatus.svelte","../../src/lib/components/LoadingSpinner.svelte","../../src/lib/components/ProgressIndicator.svelte"],"sourcesContent":["// web/src/lib/utils/timing.js\nexport function debounce(fn, delay) {\n    let timeoutId;\n    return function (...args) {\n        clearTimeout(timeoutId);\n        timeoutId = setTimeout(() => fn.apply(this, args), delay);\n    };\n}\n\nexport function throttle(fn, limit) {\n    let inThrottle;\n    return function (...args) {\n        if (!inThrottle) {\n            fn.apply(this, args);\n            inThrottle = true;\n            setTimeout(() => inThrottle = false, limit);\n        }\n    };\n}","import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.34.3';\nexport const PUBLIC_VERSION = '5';\n","// web/src/lib/api/client.js\nclass ConfiguratorApiClient {\n  constructor(baseUrl, options = {}) {\n    this.baseUrl = baseUrl || 'http://localhost:8080/api/v1';\n    this.modelId = options.modelId;\n    this.authToken = options.authToken;\n    this.timeout = options.timeout || 30000;\n    this.retryAttempts = options.retryAttempts || 2; // Reduced from 3\n    this.retryDelay = options.retryDelay || 1000;\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseUrl}${endpoint}`;\n    const config = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-Request-ID': this.generateRequestId(),\n        ...(this.authToken && { 'Authorization': `Bearer ${this.authToken}` }),\n        ...options.headers\n      },\n      ...options\n    };\n\n    if (config.body && typeof config.body === 'object') {\n      config.body = JSON.stringify(config.body);\n    }\n\n    let lastError;\n    for (let attempt = 0; attempt < this.retryAttempts; attempt++) {\n      try {\n        const controller = new AbortController();\n        const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n        const response = await fetch(url, {\n          ...config,\n          signal: controller.signal\n        });\n\n        clearTimeout(timeoutId);\n\n        // Handle different response statuses\n        if (response.status === 401) {\n          throw new Error('Authentication required');\n        }\n\n        if (response.status === 404) {\n          const error = new Error('Resource not found');\n          error.code = 'NOT_FOUND';\n          throw error;\n        }\n\n        if (response.status === 429) {\n          const retryAfter = response.headers.get('Retry-After');\n          throw new Error(`Rate limited. Retry after ${retryAfter}s`);\n        }\n\n        if (!response.ok) {\n          const errorData = await response.json().catch(() => ({}));\n          throw new Error(errorData.error?.message || `HTTP ${response.status}: ${response.statusText}`);\n        }\n\n        const data = await response.json();\n\n        // Handle both wrapped and unwrapped responses\n        return data.data !== undefined ? data : { data };\n\n      } catch (error) {\n        lastError = error;\n\n        // Don't retry on client errors (4xx) or abort errors\n        if (error.message.includes('4') || error.name === 'AbortError' || response?.status >= 400 && response?.status < 500) {\n          throw error;\n        }\n\n        // Exponential backoff for retries\n        if (attempt < this.retryAttempts - 1) {\n          await this.delay(this.retryDelay * Math.pow(2, attempt));\n        }\n      }\n    }\n\n    throw lastError;\n  }\n\n  generateRequestId() {\n    return `${Date.now()}-${Math.random().toString(36).substr(2, 9)}`;\n  }\n\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  // Model endpoints\n  async getModel() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}`);\n  }\n\n  async getModelOptions() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/options`);\n  }\n\n  async getModelGroups() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/groups`);\n  }\n\n  // Configuration endpoints\n  async createConfiguration(selections = {}) {\n    const body = {\n      model_id: this.modelId,\n      selections: this.formatSelections(selections)\n    };\n\n    return this.request('/configurations', {\n      method: 'POST',\n      body\n    });\n  }\n\n  async updateConfiguration(configId, selections) {\n    const body = {\n      model_id: this.modelId,\n      selections: this.formatSelections(selections)\n    };\n\n    return this.request(`/configurations/${configId}`, {\n      method: 'PUT',\n      body\n    });\n  }\n\n  async validateConfiguration(selections) {\n    const body = {\n      model_id: this.modelId,\n      selections: this.formatSelections(selections)\n    };\n\n    return this.request('/configurations/validate-selection', {\n      method: 'POST',\n      body\n    });\n  }\n\n  async getConfiguration(configId) {\n    return this.request(`/configurations/${configId}`);\n  }\n\n  async deleteConfiguration(configId) {\n    return this.request(`/configurations/${configId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  // Pricing endpoints\n  async calculatePricing(selections, context = {}) {\n    const body = {\n      model_id: this.modelId,\n      selections: this.formatSelections(selections),\n      context\n    };\n\n    return this.request('/pricing/calculate', {\n      method: 'POST',\n      body\n    });\n  }\n\n  async simulatePricing(scenarios) {\n    const body = {\n      model_id: this.modelId,\n      scenarios: scenarios.map(s => ({\n        ...s,\n        selections: this.formatSelections(s.selections)\n      }))\n    };\n\n    return this.request('/pricing/simulate', {\n      method: 'POST',\n      body\n    });\n  }\n\n  async getVolumeTiers() {\n    return this.request(`/pricing/volume-tiers/${this.modelId}`);\n  }\n\n  // Analytics endpoints\n  async getConfigurationAnalytics(timeRange = '30d') {\n    return this.request(`/analytics/configurations?model_id=${this.modelId}&range=${timeRange}`);\n  }\n\n  async getPricingAnalytics(timeRange = '30d') {\n    return this.request(`/analytics/pricing?model_id=${this.modelId}&range=${timeRange}`);\n  }\n\n  // Utility methods\n  formatSelections(selections) {\n    if (Array.isArray(selections)) {\n      return selections;\n    }\n\n    return Object.entries(selections)\n        .filter(([_, quantity]) => quantity > 0)\n        .map(([option_id, quantity]) => ({ option_id, quantity }));\n  }\n\n  setModelId(modelId) {\n    this.modelId = modelId;\n  }\n\n  setAuthToken(token) {\n    this.authToken = token;\n  }\n}\n\nexport default ConfiguratorApiClient;","// web/src/lib/utils/storage.js\nconst STORAGE_PREFIX = 'cpq_';\n\nexport function persist(key, data) {\n    try {\n        localStorage.setItem(STORAGE_PREFIX + key, JSON.stringify(data));\n    } catch (e) {\n        console.warn('Failed to persist data:', e);\n    }\n}\n\nexport function recover(key) {\n    try {\n        const item = localStorage.getItem(STORAGE_PREFIX + key);\n        return item ? JSON.parse(item) : null;\n    } catch (e) {\n        console.warn('Failed to recover data:', e);\n        return null;\n    }\n}\n\nexport function clearStorage(key) {\n    try {\n        if (key) {\n            localStorage.removeItem(STORAGE_PREFIX + key);\n        } else {\n            // Clear all CPQ data\n            Object.keys(localStorage)\n                .filter(k => k.startsWith(STORAGE_PREFIX))\n                .forEach(k => localStorage.removeItem(k));\n        }\n    } catch (e) {\n        console.warn('Failed to clear storage:', e);\n    }\n}","// web/src/lib/stores/configuration.svelte.js\nimport { debounce, throttle } from '../utils/timing.js';\nimport ConfiguratorApiClient from '../api/client.js';\nimport { persist, recover } from '../utils/storage.js';\n\nclass ConfigurationStore {\n  // Core state\n  modelId = $state('');\n  model = $state(null);\n  selections = $state({});\n  validationResults = $state({ violations: [], isValid: true });\n  pricingData = $state(null);\n\n  // UI state\n  isLoading = $state(false);\n  isValidating = $state(false);\n  isPricing = $state(false);\n  error = $state(null);\n  currentStep = $state(0);\n\n  // Configuration management\n  configurationId = $state(null);\n  lastSaved = $state(null);\n  isDirty = $state(false);\n\n  // History for undo/redo\n  history = $state([]);\n  historyIndex = $state(-1);\n  maxHistorySize = 50;\n\n  // Network state\n  isOnline = $state(navigator.onLine);\n  retryQueue = [];\n\n  // API client\n  #api = null;\n  #initialized = false;\n  #cleanupFns = [];\n\n  // Computed values\n  get isValid() {\n    return this.validationResults.isValid && this.validationResults.violations.length === 0;\n  }\n\n  get totalPrice() {\n    return this.pricingData?.total_price || 0;\n  }\n\n  get basePrice() {\n    return this.pricingData?.base_price || 0;\n  }\n\n  get adjustments() {\n    return this.pricingData?.adjustments || [];\n  }\n\n  get selectedOptions() {\n    if (!this.model?.option_groups) return [];\n\n    return this.model.option_groups.flatMap(group =>\n        group.options\n            .filter(option => this.selections[option.id] > 0)\n            .map(option => ({\n              ...option,\n              quantity: this.selections[option.id],\n              group_name: group.name\n            }))\n    );\n  }\n\n  get completionPercentage() {\n    if (!this.model?.option_groups) return 0;\n\n    const requiredGroups = this.model.option_groups.filter(g => g.required);\n    if (!requiredGroups.length) return 100;\n\n    const completedGroups = requiredGroups.filter(group =>\n        group.options.some(option => this.selections[option.id] > 0)\n    );\n\n    return Math.round((completedGroups.length / requiredGroups.length) * 100);\n  }\n\n  get canProceedToNextStep() {\n    return this.completionPercentage >= 100 && this.isValid && !this.isValidating;\n  }\n\n  get canUndo() {\n    return this.historyIndex > 0;\n  }\n\n  get canRedo() {\n    return this.historyIndex < this.history.length - 1;\n  }\n\n  // Initialize store\n  initialize(apiUrl = window.__API_BASE_URL__) {\n    if (this.#initialized) return;\n    this.#initialized = true;\n\n    // Set up API client\n    this.#api = new ConfiguratorApiClient(apiUrl);\n\n    // Recover from localStorage\n    this.#recoverState();\n\n    // Set up effects\n    this.#setupEffects();\n\n    // Set up network monitoring\n    this.#setupNetworkMonitoring();\n  }\n\n  // Clean up resources\n  destroy() {\n    this.#cleanupFns.forEach(fn => fn());\n    this.#cleanupFns = [];\n    this.#api = null;\n    this.#initialized = false;\n  }\n\n  #setupEffects() {\n    // Auto-load model when modelId changes\n    const unsubModel = $effect.root(() => {\n      $effect(() => {\n        if (this.modelId && this.#api && !this.model && !this.error) {\n          this.#api.modelId = this.modelId;\n          this.loadModel();\n        }\n      });\n    });\n    this.#cleanupFns.push(unsubModel);\n\n    // Debounced validation\n    const validateDebounced = debounce(() => {\n      if (Object.keys(this.selections).length > 0) {\n        this.validateSelections();\n      }\n    }, 300);\n\n    const unsubValidate = $effect.root(() => {\n      $effect(() => {\n        // Track selections changes\n        const _ = JSON.stringify(this.selections);\n        validateDebounced();\n      });\n    });\n    this.#cleanupFns.push(unsubValidate);\n\n    // Debounced pricing\n    const pricingDebounced = debounce(() => {\n      if (this.isValid && Object.keys(this.selections).length > 0) {\n        this.calculatePricing();\n      }\n    }, 500);\n\n    const unsubPricing = $effect.root(() => {\n      $effect(() => {\n        // Track validation state and selections\n        const _ = this.isValid + JSON.stringify(this.selections);\n        pricingDebounced();\n      });\n    });\n    this.#cleanupFns.push(unsubPricing);\n\n    // Auto-save\n    const saveDebounced = debounce(() => {\n      if (this.isDirty) {\n        this.saveConfiguration();\n      }\n    }, 2000);\n\n    const unsubSave = $effect.root(() => {\n      $effect(() => {\n        // Track dirty state\n        if (this.isDirty) {\n          saveDebounced();\n        }\n      });\n    });\n    this.#cleanupFns.push(unsubSave);\n\n    // Persist state changes\n    const unsubPersist = $effect.root(() => {\n      $effect(() => {\n        this.#persistState();\n      });\n    });\n    this.#cleanupFns.push(unsubPersist);\n  }\n\n  #setupNetworkMonitoring() {\n    const handleOnline = () => {\n      this.isOnline = true;\n      this.#processRetryQueue();\n    };\n\n    const handleOffline = () => {\n      this.isOnline = false;\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    this.#cleanupFns.push(() => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    });\n  }\n\n  async #processRetryQueue() {\n    while (this.retryQueue.length > 0 && this.isOnline) {\n      const operation = this.retryQueue.shift();\n      try {\n        await operation();\n      } catch (error) {\n        console.error('Retry failed:', error);\n      }\n    }\n  }\n\n  #persistState() {\n    const state = {\n      modelId: this.modelId,\n      selections: this.selections,\n      configurationId: this.configurationId,\n      currentStep: this.currentStep,\n      lastSaved: this.lastSaved\n    };\n    persist('cpq_config_state', state);\n  }\n\n  #recoverState() {\n    const state = recover('cpq_config_state');\n    if (state) {\n      this.modelId = state.modelId || '';\n      this.selections = state.selections || {};\n      this.configurationId = state.configurationId || null;\n      this.currentStep = state.currentStep || 0;\n      this.lastSaved = state.lastSaved || null;\n    }\n  }\n\n  #addToHistory() {\n    // Remove any redo history\n    this.history = this.history.slice(0, this.historyIndex + 1);\n\n    // Add current state\n    this.history.push({\n      selections: { ...this.selections },\n      timestamp: Date.now()\n    });\n\n    // Limit history size\n    if (this.history.length > this.maxHistorySize) {\n      this.history = this.history.slice(-this.maxHistorySize);\n    }\n\n    this.historyIndex = this.history.length - 1;\n  }\n\n  // Public methods\n  setModelId(modelId) {\n    if (this.modelId !== modelId) {\n      this.modelId = modelId;\n      // Only reset if we had a different model loaded\n      if (this.model || this.error) {\n        this.reset();\n      }\n    }\n  }\n\n  async loadModel() {\n    if (!this.#api || this.isLoading || !this.modelId) {\n      console.log('Skipping loadModel:', { api: !!this.#api, isLoading: this.isLoading, modelId: this.modelId });\n      return;\n    }\n\n    console.log('Loading model:', this.modelId);\n    this.isLoading = true;\n    this.error = null;\n\n    try {\n      const response = await this.#api.getModel();\n      console.log('Model loaded successfully:', response);\n      this.model = response.data || response;\n\n      // Initialize selections for required single-select groups\n      if (this.model?.option_groups) {\n        for (const group of this.model.option_groups) {\n          if (group.required && group.selection_type === 'single' && group.min_selections > 0) {\n            const hasSelection = group.options.some(opt => this.selections[opt.id] > 0);\n            if (!hasSelection && group.options.length > 0) {\n              this.selections[group.options[0].id] = 1;\n            }\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to load model:', error);\n      this.error = {\n        type: 'load',\n        message: error.message || 'Failed to load model',\n        code: error.code\n      };\n\n      // Only add to retry queue if offline\n      if (!this.isOnline && !error.message.includes('404')) {\n        this.retryQueue.push(() => this.loadModel());\n      }\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  updateSelection(optionId, quantity) {\n    const oldSelections = { ...this.selections };\n\n    if (quantity > 0) {\n      this.selections[optionId] = quantity;\n    } else {\n      delete this.selections[optionId];\n    }\n\n    // Check group constraints\n    if (this.model?.option_groups) {\n      const option = this.model.option_groups\n          .flatMap(g => g.options)\n          .find(o => o.id === optionId);\n\n      if (option) {\n        const group = this.model.option_groups.find(g =>\n            g.options.some(o => o.id === option.id)\n        );\n\n        if (group?.selection_type === 'single' && quantity > 0) {\n          // Clear other selections in group\n          for (const otherOption of group.options) {\n            if (otherOption.id !== optionId) {\n              delete this.selections[otherOption.id];\n            }\n          }\n        }\n      }\n    }\n\n    // Only mark dirty if actually changed\n    if (JSON.stringify(oldSelections) !== JSON.stringify(this.selections)) {\n      this.isDirty = true;\n      this.#addToHistory();\n    }\n  }\n\n  async validateSelections() {\n    if (!this.#api || this.isValidating) return;\n\n    this.isValidating = true;\n\n    try {\n      const response = await this.#api.validateConfiguration(this.selections);\n      this.validationResults = {\n        violations: response.data?.violations || [],\n        isValid: response.data?.is_valid ?? true\n      };\n    } catch (error) {\n      if (!this.isOnline) {\n        this.validationResults = { violations: [], isValid: true };\n      } else {\n        this.error = { type: 'validation', message: error.message };\n      }\n    } finally {\n      this.isValidating = false;\n    }\n  }\n\n  async calculatePricing() {\n    if (!this.#api || this.isPricing) return;\n\n    this.isPricing = true;\n\n    try {\n      const response = await this.#api.calculatePricing(this.selections);\n      this.pricingData = response.data || response;\n    } catch (error) {\n      if (!this.isOnline) {\n        // Use cached pricing if available\n        this.pricingData = this.pricingData || null;\n      } else {\n        this.error = { type: 'pricing', message: error.message };\n      }\n    } finally {\n      this.isPricing = false;\n    }\n  }\n\n  async saveConfiguration() {\n    if (!this.#api || !this.isDirty) return;\n\n    try {\n      let response;\n      if (this.configurationId) {\n        response = await this.#api.updateConfiguration(this.configurationId, this.selections);\n      } else {\n        response = await this.#api.createConfiguration(this.selections);\n        this.configurationId = response.data?.id || response.id;\n      }\n\n      this.lastSaved = new Date();\n      this.isDirty = false;\n\n      return response;\n    } catch (error) {\n      if (!this.isOnline) {\n        this.retryQueue.push(() => this.saveConfiguration());\n      } else {\n        this.error = { type: 'save', message: error.message };\n      }\n      throw error;\n    }\n  }\n\n  undo() {\n    if (this.canUndo) {\n      this.historyIndex--;\n      this.selections = { ...this.history[this.historyIndex].selections };\n      this.isDirty = true;\n    }\n  }\n\n  redo() {\n    if (this.canRedo) {\n      this.historyIndex++;\n      this.selections = { ...this.history[this.historyIndex].selections };\n      this.isDirty = true;\n    }\n  }\n\n  nextStep() {\n    if (this.canProceedToNextStep) {\n      this.currentStep = Math.min(this.currentStep + 1, 3);\n    }\n  }\n\n  previousStep() {\n    this.currentStep = Math.max(this.currentStep - 1, 0);\n  }\n\n  reset() {\n    this.model = null;\n    this.selections = {};\n    this.validationResults = { violations: [], isValid: true };\n    this.pricingData = null;\n    this.currentStep = 0;\n    this.configurationId = null;\n    this.lastSaved = null;\n    this.isDirty = false;\n    this.error = null;\n    this.isLoading = false;\n    this.isValidating = false;\n    this.isPricing = false;\n    this.history = [];\n    this.historyIndex = -1;\n    this.retryQueue = [];\n  }\n\n  clearError() {\n    this.error = null;\n  }\n}\n\n// Export singleton instance\nexport const configStore = new ConfigurationStore();","<!-- web/src/lib/components/ErrorBoundary.svelte -->\n<script>\n  import { onMount } from 'svelte';\n\n  let {\n    error = null,\n    onRetry = null,\n    fallback = null,\n    children\n  } = $props();\n\n  let hasError = $state(false);\n  let errorMessage = $state('');\n\n  $effect(() => {\n    if (error) {\n      hasError = true;\n      errorMessage = error.message || 'An unexpected error occurred';\n    }\n  });\n\n  function handleRetry() {\n    hasError = false;\n    errorMessage = '';\n    if (onRetry) onRetry();\n  }\n</script>\n\n{#if hasError}\n  {#if fallback}\n    {@render fallback()}\n  {:else}\n    <div class=\"error-boundary\">\n      <div class=\"error-content\">\n        <svg class=\"error-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n        </svg>\n        <h3>Something went wrong</h3>\n        <p>{errorMessage}</p>\n        {#if onRetry}\n          <button class=\"retry-btn\" onclick={handleRetry}>\n            Try Again\n          </button>\n        {/if}\n      </div>\n    </div>\n  {/if}\n{:else}\n  {@render children?.()}\n{/if}\n\n<style>\n  .error-boundary {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 300px;\n    padding: 2rem;\n  }\n\n  .error-content {\n    text-align: center;\n    max-width: 400px;\n  }\n\n  .error-icon {\n    width: 3rem;\n    height: 3rem;\n    color: var(--error);\n    margin: 0 auto 1rem;\n  }\n\n  h3 {\n    font-size: 1.25rem;\n    font-weight: 600;\n    margin: 0 0 0.5rem;\n  }\n\n  p {\n    color: var(--text-secondary);\n    margin: 0 0 1.5rem;\n  }\n\n  .retry-btn {\n    padding: 0.75rem 1.5rem;\n    background: var(--primary);\n    color: white;\n    border: none;\n    border-radius: 0.5rem;\n    font-weight: 500;\n    cursor: pointer;\n    transition: background 0.2s;\n  }\n\n  .retry-btn:hover {\n    background: var(--primary-hover);\n  }\n</style>","// web/src/lib/utils/format.js\nexport function formatCurrency(amount) {\n    return new Intl.NumberFormat('en-US', {\n        style: 'currency',\n        currency: 'USD'\n    }).format(amount);\n}\n\nexport function formatNumber(num) {\n    return new Intl.NumberFormat('en-US').format(num);\n}\n\nexport function formatDate(date) {\n    return new Intl.DateTimeFormat('en-US', {\n        dateStyle: 'medium',\n        timeStyle: 'short'\n    }).format(new Date(date));\n}","<!-- web/src/lib/components/OptionCard.svelte -->\n<script>\n  import { configStore } from '../stores/configuration.svelte.js';\n  import { formatCurrency } from '../utils/format.js';\n  import { throttle } from '../utils/timing.js';\n\n  let { option, group } = $props();\n\n  let quantity = $state(configStore.selections[option.id] || 0);\n  let isSelected = $derived(quantity > 0);\n  let isLoading = $state(false);\n\n  // Throttle quantity updates for performance\n  const updateQuantity = throttle((newQuantity) => {\n    configStore.updateSelection(option.id, newQuantity);\n  }, 100);\n\n  // Check for option-specific errors\n  let optionErrors = $derived(\n          configStore.validationResults.violations.filter(v => v.option_id === option.id)\n  );\n\n  function handleQuantityChange(delta) {\n    const newQuantity = Math.max(0, quantity + delta);\n\n    // Check max selections for group\n    if (group.max_selections && delta > 0) {\n      const currentGroupSelections = group.options\n              .filter(opt => configStore.selections[opt.id] > 0)\n              .length;\n\n      if (!isSelected && currentGroupSelections >= group.max_selections) {\n        return;\n      }\n    }\n\n    quantity = newQuantity;\n    updateQuantity(newQuantity);\n  }\n\n  function handleToggle() {\n    if (group.selection_type === 'single') {\n      // For single select, toggle between 0 and 1\n      const newQuantity = isSelected ? 0 : 1;\n      quantity = newQuantity;\n      configStore.updateSelection(option.id, newQuantity);\n    } else {\n      // For multi-select, toggle between 0 and 1\n      handleQuantityChange(isSelected ? -quantity : 1);\n    }\n  }\n\n  // Sync local state with store\n  $effect(() => {\n    quantity = configStore.selections[option.id] || 0;\n  });\n</script>\n\n<div\n        class=\"option-card\"\n        class:selected={isSelected}\n        class:has-errors={optionErrors.length > 0}\n        class:loading={isLoading}\n>\n  <div class=\"option-header\">\n    <div class=\"option-info\">\n      <h4 class=\"option-name\">{option.name}</h4>\n      {#if option.sku}\n        <span class=\"option-sku\">SKU: {option.sku}</span>\n      {/if}\n    </div>\n\n    <div class=\"option-price\">\n      {formatCurrency(option.base_price)}\n      {#if option.price_unit}\n        <span class=\"price-unit\">/{option.price_unit}</span>\n      {/if}\n    </div>\n  </div>\n\n  {#if option.description}\n    <p class=\"option-description\">{option.description}</p>\n  {/if}\n\n  {#if option.attributes && Object.keys(option.attributes).length > 0}\n    <div class=\"option-attributes\">\n      {#each Object.entries(option.attributes) as [key, value]}\n        <span class=\"attribute\">\n          <span class=\"attribute-key\">{key}:</span>\n          <span class=\"attribute-value\">{value}</span>\n        </span>\n      {/each}\n    </div>\n  {/if}\n\n  {#if optionErrors.length > 0}\n    <div class=\"option-errors\">\n      {#each optionErrors as error}\n        <div class=\"error-text\">{error.message}</div>\n      {/each}\n    </div>\n  {/if}\n\n  <div class=\"option-controls\">\n    {#if group.selection_type === 'single'}\n      <label class=\"radio-control\">\n        <input\n                type=\"radio\"\n                name={`group-${group.id}`}\n                checked={isSelected}\n                onchange={handleToggle}\n                class=\"radio-input\"\n        />\n        <span class=\"radio-label\">Select</span>\n      </label>\n    {:else}\n      <div class=\"quantity-controls\">\n        <button\n                type=\"button\"\n                class=\"quantity-btn\"\n                onclick={() => handleQuantityChange(-1)}\n                disabled={quantity === 0}\n                aria-label=\"Decrease quantity\"\n        >\n          <svg class=\"icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button>\n\n        <input\n                type=\"number\"\n                class=\"quantity-input\"\n                bind:value={quantity}\n                onchange={(e) => updateQuantity(parseInt(e.target.value) || 0)}\n                min=\"0\"\n                max={option.max_quantity || 999}\n        />\n\n        <button\n                type=\"button\"\n                class=\"quantity-btn\"\n                onclick={() => handleQuantityChange(1)}\n                disabled={option.max_quantity && quantity >= option.max_quantity}\n                aria-label=\"Increase quantity\"\n        >\n          <svg class=\"icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z\" clip-rule=\"evenodd\" />\n          </svg>\n        </button>\n      </div>\n\n      {#if quantity > 0}\n        <div class=\"quantity-total\">\n          Total: {formatCurrency(option.base_price * quantity)}\n        </div>\n      {/if}\n    {/if}\n  </div>\n\n  {#if option.availability === 'limited'}\n    <div class=\"availability-warning\">\n      Limited availability\n    </div>\n  {:else if option.availability === 'out_of_stock'}\n    <div class=\"availability-error\">\n      Out of stock\n    </div>\n  {/if}\n</div>\n\n<style>\n  .option-card {\n    background: var(--bg);\n    border: 2px solid var(--border);\n    border-radius: 0.75rem;\n    padding: 1.25rem;\n    transition: all 0.2s;\n    position: relative;\n    overflow: hidden;\n  }\n\n  .option-card.selected {\n    border-color: var(--primary);\n    background: rgba(59, 130, 246, 0.05);\n  }\n\n  .option-card.has-errors {\n    border-color: var(--error);\n  }\n\n  .option-card.loading {\n    opacity: 0.6;\n    pointer-events: none;\n  }\n\n  .option-card.loading::after {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    height: 3px;\n    background: var(--primary);\n    animation: loading 1s ease-in-out infinite;\n  }\n\n  @keyframes loading {\n    0% { transform: translateX(-100%); }\n    100% { transform: translateX(100%); }\n  }\n\n  .option-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: start;\n    margin-bottom: 0.75rem;\n  }\n\n  .option-name {\n    font-size: 1rem;\n    font-weight: 600;\n    margin: 0;\n  }\n\n  .option-sku {\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n  }\n\n  .option-price {\n    font-size: 1.125rem;\n    font-weight: 700;\n    color: var(--primary);\n    text-align: right;\n  }\n\n  .price-unit {\n    font-size: 0.875rem;\n    font-weight: 400;\n    color: var(--text-secondary);\n  }\n\n  .option-description {\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n    margin: 0 0 0.75rem;\n    line-height: 1.5;\n  }\n\n  .option-attributes {\n    display: flex;\n    flex-wrap: wrap;\n    gap: 0.5rem;\n    margin-bottom: 0.75rem;\n  }\n\n  .attribute {\n    font-size: 0.75rem;\n    padding: 0.25rem 0.5rem;\n    background: var(--bg-secondary);\n    border-radius: 0.25rem;\n  }\n\n  .attribute-key {\n    color: var(--text-secondary);\n  }\n\n  .attribute-value {\n    font-weight: 500;\n  }\n\n  .option-errors {\n    margin: 0.75rem 0;\n    padding: 0.5rem;\n    background: rgba(239, 68, 68, 0.1);\n    border-radius: 0.25rem;\n  }\n\n  .error-text {\n    font-size: 0.75rem;\n    color: var(--error);\n  }\n\n  .option-controls {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    margin-top: 1rem;\n  }\n\n  .radio-control {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    cursor: pointer;\n  }\n\n  .radio-input {\n    width: 1.25rem;\n    height: 1.25rem;\n    cursor: pointer;\n  }\n\n  .quantity-controls {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n  }\n\n  .quantity-btn {\n    background: var(--bg-secondary);\n    border: 1px solid var(--border);\n    border-radius: 0.375rem;\n    padding: 0.5rem;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .quantity-btn:hover:not(:disabled) {\n    background: var(--border);\n  }\n\n  .quantity-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .icon {\n    width: 1rem;\n    height: 1rem;\n  }\n\n  .quantity-input {\n    width: 4rem;\n    text-align: center;\n    padding: 0.5rem;\n    border: 1px solid var(--border);\n    border-radius: 0.375rem;\n    background: var(--bg);\n  }\n\n  .quantity-total {\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--success);\n  }\n\n  .availability-warning {\n    margin-top: 0.75rem;\n    padding: 0.5rem;\n    background: rgba(245, 158, 11, 0.1);\n    color: var(--warning);\n    font-size: 0.75rem;\n    text-align: center;\n    border-radius: 0.25rem;\n  }\n\n  .availability-error {\n    margin-top: 0.75rem;\n    padding: 0.5rem;\n    background: rgba(239, 68, 68, 0.1);\n    color: var(--error);\n    font-size: 0.75rem;\n    text-align: center;\n    border-radius: 0.25rem;\n  }\n</style>","<!-- web/src/lib/components/OptionGroup.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n    import { createVirtualScroller } from '../utils/virtual-scroll.js';\n    import OptionCard from './OptionCard.svelte';\n\n    let { group } = $props();\n\n    let expanded = $state(true);\n    let searchTerm = $state('');\n    let showVirtualScroll = $state(false);\n    let virtualScroller = $state(null);\n    let scrollContainer;\n\n    // Filter options based on search\n    let filteredOptions = $derived(\n        group.options.filter(option =>\n            option.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\n            option.description?.toLowerCase().includes(searchTerm.toLowerCase())\n        )\n    );\n\n    $effect(() => {\n        if (filteredOptions.length > 20) {\n            showVirtualScroll = true;\n            virtualScroller = createVirtualScroller({\n                items: filteredOptions,\n                itemHeight: 120,\n                containerHeight: 600,\n                buffer: 3\n            });\n        } else {\n            showVirtualScroll = false;\n            virtualScroller = null;\n        }\n    });\n\n    // Check if group has selections\n    let hasSelections = $derived(\n        group.options.some(option => configStore.selections[option.id] > 0)\n    );\n\n    // Check if group has errors\n    let hasErrors = $derived(\n        configStore.validationResults.violations.some(v =>\n            v.group_id === group.id ||\n            group.options.some(opt => v.option_id === opt.id)\n        )\n    );\n\n    // Get group-specific errors\n    let groupErrors = $derived(\n        configStore.validationResults.violations.filter(v =>\n            v.group_id === group.id ||\n            group.options.some(opt => v.option_id === opt.id)\n        )\n    );\n\n    function handleScroll(event) {\n        if (virtualScroller) {\n            virtualScroller.updateScroll(event.target.scrollTop);\n        }\n    }\n</script>\n\n<div class=\"option-group\" class:has-errors={hasErrors}>\n    <!-- Group header -->\n    <div class=\"group-header\" onclick={() => expanded = !expanded}>\n        <div class=\"header-content\">\n            <h3 class=\"group-title\">\n                {group.name}\n                {#if group.required}\n                    <span class=\"required-badge\">Required</span>\n                {/if}\n            </h3>\n\n            <div class=\"group-meta\">\n                {#if group.selection_type === 'single'}\n                    <span class=\"selection-type\">Single selection</span>\n                {:else if group.selection_type === 'multiple'}\n          <span class=\"selection-type\">\n            Multiple selection\n              {#if group.min_selections > 0 || group.max_selections}\n              ({group.min_selections || 0}-{group.max_selections || '∞'})\n            {/if}\n          </span>\n                {/if}\n\n                {#if hasSelections}\n          <span class=\"selection-count\">\n            {group.options.filter(o => configStore.selections[o.id] > 0).length} selected\n          </span>\n                {/if}\n            </div>\n        </div>\n\n        <button class=\"expand-toggle\" aria-label={expanded ? 'Collapse' : 'Expand'}>\n            <svg class=\"icon\" class:rotated={expanded} viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n            </svg>\n        </button>\n    </div>\n\n    {#if expanded}\n        <div class=\"group-content\">\n            {#if group.description}\n                <p class=\"group-description\">{group.description}</p>\n            {/if}\n\n            {#if groupErrors.length > 0}\n                <div class=\"group-errors\">\n                    {#each groupErrors as error}\n                        <div class=\"error-message\">\n                            <svg class=\"error-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                            </svg>\n                            {error.message}\n                        </div>\n                    {/each}\n                </div>\n            {/if}\n\n            {#if filteredOptions.length > 10}\n                <div class=\"search-box\">\n                    <input\n                            type=\"search\"\n                            placeholder=\"Search options...\"\n                            bind:value={searchTerm}\n                            class=\"search-input\"\n                    />\n                </div>\n            {/if}\n\n            <div class=\"options-container\" class:virtual={showVirtualScroll}>\n                {#if showVirtualScroll && virtualScroller}\n                    <div\n                            class=\"virtual-scroll-container\"\n                            bind:this={scrollContainer}\n                            onscroll={handleScroll}\n                            style=\"height: 600px\"\n                    >\n                        <div style=\"height: {virtualScroller?.totalHeight || 0}px; position: relative;\">\n                            <div style=\"transform: translateY({virtualScroller?.offsetY || 0}px);\">\n                                {#each virtualScroller?.visibleItems || [] as option}\n                                    <OptionCard {option} {group} />\n                                {/each}\n                            </div>\n                        </div>\n                    </div>\n                {:else}\n                    <div class=\"options-grid\">\n                        {#each filteredOptions as option}\n                            <OptionCard {option} {group} />\n                        {/each}\n                    </div>\n                {/if}\n            </div>\n\n            {#if filteredOptions.length === 0}\n                <div class=\"no-results\">\n                    No options found matching \"{searchTerm}\"\n                </div>\n            {/if}\n        </div>\n    {/if}\n</div>\n\n<style>\n    .option-group {\n        background: var(--bg-secondary);\n        border-radius: 0.75rem;\n        border: 1px solid var(--border);\n        overflow: hidden;\n        transition: border-color 0.2s;\n    }\n\n    .option-group.has-errors {\n        border-color: var(--error);\n    }\n\n    .group-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 1.25rem;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    .group-header:hover {\n        background: var(--bg);\n    }\n\n    .header-content {\n        flex: 1;\n    }\n\n    .group-title {\n        font-size: 1.125rem;\n        font-weight: 600;\n        margin: 0;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n    }\n\n    .required-badge {\n        font-size: 0.75rem;\n        font-weight: 500;\n        color: var(--error);\n        background: rgba(239, 68, 68, 0.1);\n        padding: 0.125rem 0.5rem;\n        border-radius: 9999px;\n    }\n\n    .group-meta {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        margin-top: 0.25rem;\n        font-size: 0.875rem;\n        color: var(--text-secondary);\n    }\n\n    .selection-count {\n        color: var(--success);\n        font-weight: 500;\n    }\n\n    .expand-toggle {\n        background: none;\n        border: none;\n        padding: 0.5rem;\n        cursor: pointer;\n        color: var(--text-secondary);\n    }\n\n    .icon {\n        width: 1.25rem;\n        height: 1.25rem;\n        transition: transform 0.2s;\n    }\n\n    .icon.rotated {\n        transform: rotate(180deg);\n    }\n\n    .group-content {\n        padding: 0 1.25rem 1.25rem;\n    }\n\n    .group-description {\n        color: var(--text-secondary);\n        font-size: 0.875rem;\n        margin: 0 0 1rem;\n    }\n\n    .group-errors {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n        margin-bottom: 1rem;\n    }\n\n    .error-message {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.75rem;\n        background: rgba(239, 68, 68, 0.1);\n        border: 1px solid rgba(239, 68, 68, 0.2);\n        border-radius: 0.5rem;\n        color: var(--error);\n        font-size: 0.875rem;\n    }\n\n    .error-icon {\n        width: 1.25rem;\n        height: 1.25rem;\n        flex-shrink: 0;\n    }\n\n    .search-box {\n        margin-bottom: 1rem;\n    }\n\n    .search-input {\n        width: 100%;\n        padding: 0.75rem 1rem;\n        border: 1px solid var(--border);\n        border-radius: 0.5rem;\n        background: var(--bg);\n        font-size: 0.875rem;\n    }\n\n    .search-input:focus {\n        outline: none;\n        border-color: var(--primary);\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n    }\n\n    .options-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n        gap: 1rem;\n    }\n\n    .virtual-scroll-container {\n        overflow-y: auto;\n        scrollbar-width: thin;\n    }\n\n    .no-results {\n        text-align: center;\n        padding: 3rem;\n        color: var(--text-secondary);\n    }\n\n    @media (max-width: 640px) {\n        .options-grid {\n            grid-template-columns: 1fr;\n        }\n    }\n</style>","// web/src/lib/utils/virtual-scroll.js\nexport function createVirtualScroller(options) {\n    const {\n        items,\n        itemHeight,\n        containerHeight,\n        buffer = 5\n    } = options;\n\n    let scrollTop = $state(0);\n    let visibleStart = $derived(Math.floor(scrollTop / itemHeight));\n    let visibleEnd = $derived(Math.ceil((scrollTop + containerHeight) / itemHeight));\n    let displayStart = $derived(Math.max(0, visibleStart - buffer));\n    let displayEnd = $derived(Math.min(items.length, visibleEnd + buffer));\n    let offsetY = $derived(displayStart * itemHeight);\n\n    return {\n        visibleItems: $derived(items.slice(displayStart, displayEnd)),\n        totalHeight: items.length * itemHeight,\n        offsetY,\n        updateScroll(newScrollTop) {\n            scrollTop = newScrollTop;\n        }\n    };\n}","<!-- web/src/lib/components/PricingDisplay.svelte -->\n<script>\n  import { configStore } from '../stores/configuration.svelte.js';\n  import { formatCurrency } from '../utils/format.js';\n\n  let { detailed = true } = $props();\n\n  let showBreakdown = $state(detailed);\n  let showVolumeDetails = $state(false);\n\n  // Calculate pricing breakdown\n  let breakdown = $derived(() => {\n    if (!configStore.pricingData) return null;\n\n    const data = configStore.pricingData;\n    const items = [];\n\n    // Selected options\n    configStore.selectedOptions.forEach(option => {\n      items.push({\n        type: 'option',\n        name: option.name,\n        quantity: option.quantity,\n        unitPrice: option.base_price,\n        total: option.base_price * option.quantity,\n        group: option.group_name\n      });\n    });\n\n    // Adjustments\n    if (data.adjustments) {\n      data.adjustments.forEach(adj => {\n        items.push({\n          type: 'adjustment',\n          name: adj.description || adj.type,\n          reason: adj.reason,\n          amount: adj.amount,\n          percentage: adj.percentage\n        });\n      });\n    }\n\n    return items;\n  });\n\n  // Volume discount details\n  let volumeDiscounts = $derived(() => {\n    if (!configStore.pricingData?.adjustments) return [];\n\n    return configStore.pricingData.adjustments\n            .filter(adj => adj.type === 'volume_discount')\n            .map(adj => ({\n              ...adj,\n              saved: Math.abs(adj.amount)\n            }));\n  });\n\n  let totalSavings = $derived(() => {\n    if (!configStore.pricingData?.adjustments) return 0;\n\n    return configStore.pricingData.adjustments\n            .filter(adj => adj.amount < 0)\n            .reduce((sum, adj) => sum + Math.abs(adj.amount), 0);\n  });\n</script>\n\n<div class=\"pricing-display\">\n  <div class=\"pricing-header\">\n    <h3 class=\"pricing-title\">\n      Pricing Summary\n      {#if configStore.isPricing}\n        <span class=\"calculating\">\n          <span class=\"spinner\"></span>\n          Calculating...\n        </span>\n      {/if}\n    </h3>\n\n    {#if detailed && breakdown && breakdown.length > 0}\n      <button\n              class=\"toggle-btn\"\n              onclick={() => showBreakdown = !showBreakdown}\n      >\n        {showBreakdown ? 'Hide' : 'Show'} Details\n      </button>\n    {/if}\n  </div>\n\n  {#if configStore.pricingData}\n    <div class=\"pricing-summary\">\n      <div class=\"price-row subtotal\">\n        <span>Subtotal</span>\n        <span>{formatCurrency(configStore.basePrice)}</span>\n      </div>\n\n      {#if totalSavings > 0}\n        <div class=\"price-row savings\">\n          <span>Total Savings</span>\n          <span>-{formatCurrency(totalSavings)}</span>\n        </div>\n      {/if}\n\n      <div class=\"price-row total\">\n        <span>Total Price</span>\n        <span class=\"total-amount\">{formatCurrency(configStore.totalPrice)}</span>\n      </div>\n\n      {#if configStore.pricingData.price_per_unit}\n        <div class=\"price-per-unit\">\n          {formatCurrency(configStore.pricingData.price_per_unit)} per unit\n        </div>\n      {/if}\n    </div>\n\n    {#if showBreakdown && breakdown}\n      <div class=\"pricing-breakdown\">\n        <h4 class=\"breakdown-title\">Price Breakdown</h4>\n\n        <div class=\"breakdown-items\">\n          {#each breakdown as item}\n            <div class=\"breakdown-item type-{item.type}\">\n              <div class=\"item-info\">\n                <div class=\"item-name\">\n                  {item.name}\n                  {#if item.quantity > 1}\n                    <span class=\"item-quantity\">×{item.quantity}</span>\n                  {/if}\n                </div>\n                {#if item.group}\n                  <div class=\"item-group\">{item.group}</div>\n                {/if}\n                {#if item.reason}\n                  <div class=\"item-reason\">{item.reason}</div>\n                {/if}\n              </div>\n\n              <div class=\"item-price\">\n                {#if item.type === 'option'}\n                  {formatCurrency(item.total)}\n                {:else if item.type === 'adjustment'}\n                  <span class:discount={item.amount < 0}>\n                    {item.amount < 0 ? '-' : '+'}{formatCurrency(Math.abs(item.amount))}\n                    {#if item.percentage}\n                      <span class=\"percentage\">({item.percentage}%)</span>\n                    {/if}\n                  </span>\n                {/if}\n              </div>\n            </div>\n          {/each}\n        </div>\n      </div>\n    {/if}\n\n    {#if volumeDiscounts.length > 0}\n      <div class=\"volume-discounts\">\n        <button\n                class=\"volume-header\"\n                onclick={() => showVolumeDetails = !showVolumeDetails}\n        >\n          <span>Volume Discounts Applied</span>\n          <span class=\"discount-amount\">\n            Save {formatCurrency(volumeDiscounts.reduce((sum, d) => sum + d.saved, 0))}\n          </span>\n        </button>\n\n        {#if showVolumeDetails}\n          <div class=\"volume-details\">\n            {#each volumeDiscounts as discount}\n              <div class=\"discount-item\">\n                <div>\n                  <div class=\"discount-name\">{discount.description}</div>\n                  <div class=\"discount-tier\">Tier: {discount.tier_name || 'Volume'}</div>\n                </div>\n                <div class=\"discount-save\">\n                  Save {formatCurrency(discount.saved)}\n                </div>\n              </div>\n            {/each}\n          </div>\n        {/if}\n      </div>\n    {/if}\n  {:else if !configStore.isPricing && configStore.selectedOptions.length === 0}\n    <div class=\"no-selections\">\n      <p>Select options to see pricing</p>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .pricing-display {\n    background: var(--bg-secondary);\n    border-radius: 0.75rem;\n    padding: 1.25rem;\n    border: 1px solid var(--border);\n  }\n\n  .pricing-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1rem;\n  }\n\n  .pricing-title {\n    font-size: 1rem;\n    font-weight: 600;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n  }\n\n  .calculating {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    font-size: 0.875rem;\n    font-weight: 400;\n    color: var(--text-secondary);\n  }\n\n  .spinner {\n    display: inline-block;\n    width: 1rem;\n    height: 1rem;\n    border: 2px solid var(--border);\n    border-top-color: var(--primary);\n    border-radius: 50%;\n    animation: spin 0.8s linear infinite;\n  }\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n\n  .toggle-btn {\n    padding: 0.375rem 0.75rem;\n    font-size: 0.75rem;\n    font-weight: 500;\n    background: var(--bg);\n    border: 1px solid var(--border);\n    border-radius: 0.375rem;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .toggle-btn:hover {\n    background: var(--bg-secondary);\n  }\n\n  .pricing-summary {\n    background: var(--bg);\n    border: 1px solid var(--border);\n    border-radius: 0.5rem;\n    padding: 1rem;\n  }\n\n  .price-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem 0;\n    font-size: 0.875rem;\n  }\n\n  .price-row.subtotal {\n    color: var(--text-secondary);\n  }\n\n  .price-row.savings {\n    color: var(--success);\n    font-weight: 500;\n  }\n\n  .price-row.total {\n    border-top: 2px solid var(--border);\n    margin-top: 0.5rem;\n    padding-top: 1rem;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n\n  .total-amount {\n    font-size: 1.5rem;\n    color: var(--primary);\n  }\n\n  .price-per-unit {\n    text-align: center;\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n    margin-top: 0.5rem;\n  }\n\n  .pricing-breakdown {\n    margin-top: 1rem;\n  }\n\n  .breakdown-title {\n    font-size: 0.875rem;\n    font-weight: 600;\n    margin: 0 0 0.75rem;\n  }\n\n  .breakdown-items {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .breakdown-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: start;\n    padding: 0.75rem;\n    background: var(--bg);\n    border: 1px solid var(--border);\n    border-radius: 0.375rem;\n    font-size: 0.813rem;\n  }\n\n  .item-info {\n    flex: 1;\n  }\n\n  .item-name {\n    font-weight: 500;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n  }\n\n  .item-quantity {\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n  }\n\n  .item-group,\n  .item-reason {\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n    margin-top: 0.25rem;\n  }\n\n  .item-price {\n    font-weight: 600;\n    text-align: right;\n  }\n\n  .item-price .discount {\n    color: var(--success);\n  }\n\n  .percentage {\n    font-size: 0.75rem;\n    font-weight: 400;\n    color: var(--text-secondary);\n  }\n\n  .volume-discounts {\n    margin-top: 1rem;\n    background: rgba(16, 185, 129, 0.05);\n    border: 1px solid rgba(16, 185, 129, 0.2);\n    border-radius: 0.5rem;\n    overflow: hidden;\n  }\n\n  .volume-header {\n    width: 100%;\n    padding: 0.75rem 1rem;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    background: none;\n    border: none;\n    cursor: pointer;\n    text-align: left;\n    font-size: 0.875rem;\n  }\n\n  .volume-header:hover {\n    background: rgba(16, 185, 129, 0.1);\n  }\n\n  .discount-amount {\n    color: var(--success);\n    font-weight: 600;\n  }\n\n  .volume-details {\n    padding: 0 1rem 1rem;\n  }\n\n  .discount-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem 0;\n    font-size: 0.813rem;\n  }\n\n  .discount-name {\n    font-weight: 500;\n  }\n\n  .discount-tier {\n    font-size: 0.75rem;\n    color: var(--text-secondary);\n  }\n\n  .discount-save {\n    color: var(--success);\n    font-weight: 500;\n  }\n\n  .no-selections {\n    text-align: center;\n    padding: 2rem;\n    color: var(--text-secondary);\n    font-size: 0.875rem;\n  }\n</style>","<!-- web/src/lib/components/ValidationDisplay.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n\n    let showDetails = $state(true);\n    let filterSeverity = $state('all');\n\n    // Group violations by severity\n    let groupedViolations = $derived(() => {\n        const violations = configStore.validationResults.violations || [];\n        const groups = {\n            error: [],\n            warning: [],\n            info: []\n        };\n\n        violations.forEach(v => {\n            const severity = v.severity || 'error';\n            if (groups[severity]) {\n                groups[severity].push(v);\n            }\n        });\n\n        return groups;\n    });\n\n    let filteredViolations = $derived(() => {\n        if (filterSeverity === 'all') {\n            return configStore.validationResults.violations || [];\n        }\n        return groupedViolations()[filterSeverity] || [];\n    });\n\n    function getViolationIcon(severity) {\n        switch (severity) {\n            case 'warning':\n                return `<path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />`;\n            case 'info':\n                return `<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />`;\n            default:\n                return `<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />`;\n        }\n    }\n\n    function getSeverityColor(severity) {\n        switch (severity) {\n            case 'warning': return 'var(--warning)';\n            case 'info': return 'var(--primary)';\n            default: return 'var(--error)';\n        }\n    }\n\n    function handleAutoFix(violation) {\n        if (violation.auto_fix_action) {\n            // Apply the auto-fix action\n            const action = violation.auto_fix_action;\n            if (action.type === 'add_selection') {\n                configStore.updateSelection(action.option_id, action.quantity || 1);\n            } else if (action.type === 'remove_selection') {\n                configStore.updateSelection(action.option_id, 0);\n            }\n        }\n    }\n</script>\n\n<div class=\"validation-display\">\n    <div class=\"validation-header\">\n        <h3 class=\"validation-title\">\n            Configuration Validation\n            {#if configStore.isValidating}\n        <span class=\"validating-indicator\">\n          <span class=\"spinner\"></span>\n          Checking...\n        </span>\n            {/if}\n        </h3>\n\n        {#if !configStore.isValidating}\n            <div class=\"validation-status\" class:valid={configStore.isValid}>\n                {#if configStore.isValid}\n                    <svg class=\"status-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n                    </svg>\n                    Valid\n                {:else}\n                    <svg class=\"status-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                        <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />\n                    </svg>\n                    {filteredViolations.length} Issues\n                {/if}\n            </div>\n        {/if}\n    </div>\n\n    {#if !configStore.isValid && filteredViolations.length > 0}\n        <div class=\"validation-filters\">\n            <button\n                    class=\"filter-btn\"\n                    class:active={filterSeverity === 'all'}\n                    onclick={() => filterSeverity = 'all'}\n            >\n                All ({configStore.validationResults.violations.length})\n            </button>\n            {#if groupedViolations().error.length > 0}\n                <button\n                        class=\"filter-btn error\"\n                        class:active={filterSeverity === 'error'}\n                        onclick={() => filterSeverity = 'error'}\n                >\n                    Errors ({groupedViolations().error.length})\n                </button>\n            {/if}\n            {#if groupedViolations().warning.length > 0}\n                <button\n                        class=\"filter-btn warning\"\n                        class:active={filterSeverity === 'warning'}\n                        onclick={() => filterSeverity = 'warning'}\n                >\n                    Warnings ({groupedViolations().warning.length})\n                </button>\n            {/if}\n            {#if groupedViolations().info.length > 0}\n                <button\n                        class=\"filter-btn info\"\n                        class:active={filterSeverity === 'info'}\n                        onclick={() => filterSeverity = 'info'}\n                >\n                    Info ({groupedViolations().info.length})\n                </button>\n            {/if}\n        </div>\n\n        <div class=\"violations-list\">\n            {#each filteredViolations as violation, index}\n                <div class=\"violation-item severity-{violation.severity || 'error'}\">\n                    <div class=\"violation-header\">\n                        <svg\n                                class=\"violation-icon\"\n                                viewBox=\"0 0 20 20\"\n                                fill={getSeverityColor(violation.severity || 'error')}\n                        >\n                            {@html getViolationIcon(violation.severity || 'error')}\n                        </svg>\n                        <div class=\"violation-content\">\n                            <div class=\"violation-message\">{violation.message}</div>\n\n                            {#if violation.details}\n                                <div class=\"violation-details\">{violation.details}</div>\n                            {/if}\n\n                            {#if violation.affected_options && violation.affected_options.length > 0}\n                                <div class=\"affected-options\">\n                                    Affects:\n                                    {#each violation.affected_options as optionId, i}\n                    <span class=\"affected-option\">\n                      {configStore.model?.option_groups\n                          .flatMap(g => g.options)\n                          .find(o => o.id === optionId)?.name || optionId}\n                    </span>\n                                        {#if i < violation.affected_options.length - 1}, {/if}\n                                    {/each}\n                                </div>\n                            {/if}\n\n                            {#if violation.rule_expression && showDetails}\n                                <div class=\"rule-expression\">\n                                    Rule: <code>{violation.rule_expression}</code>\n                                </div>\n                            {/if}\n                        </div>\n                    </div>\n\n                    {#if violation.suggestions && violation.suggestions.length > 0}\n                        <div class=\"violation-suggestions\">\n                            <div class=\"suggestions-title\">Suggestions:</div>\n                            <ul class=\"suggestions-list\">\n                                {#each violation.suggestions as suggestion}\n                                    <li>{suggestion}</li>\n                                {/each}\n                            </ul>\n                        </div>\n                    {/if}\n\n                    {#if violation.auto_fix_action}\n                        <button\n                                class=\"auto-fix-btn\"\n                                onclick={() => handleAutoFix(violation)}\n                        >\n                            <svg class=\"fix-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                                <path fill-rule=\"evenodd\" d=\"M11.3 1.046A1 1 0 0112 2v5h4a1 1 0 01.82 1.573l-7 10A1 1 0 018 18v-5H4a1 1 0 01-.82-1.573l7-10a1 1 0 011.12-.38z\" clip-rule=\"evenodd\" />\n                            </svg>\n                            Auto-fix\n                        </button>\n                    {/if}\n                </div>\n            {/each}\n        </div>\n    {:else if configStore.isValid && !configStore.isValidating}\n        <div class=\"valid-message\">\n            <svg class=\"valid-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                <path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />\n            </svg>\n            <p>Your configuration is valid and meets all requirements.</p>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .validation-display {\n        background: var(--bg-secondary);\n        border-radius: 0.75rem;\n        padding: 1.25rem;\n        border: 1px solid var(--border);\n    }\n\n    .validation-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1rem;\n    }\n\n    .validation-title {\n        font-size: 1rem;\n        font-weight: 600;\n        margin: 0;\n        display: flex;\n        align-items: center;\n        gap: 0.75rem;\n    }\n\n    .validating-indicator {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        font-size: 0.875rem;\n        font-weight: 400;\n        color: var(--text-secondary);\n    }\n\n    .spinner {\n        display: inline-block;\n        width: 1rem;\n        height: 1rem;\n        border: 2px solid var(--border);\n        border-top-color: var(--primary);\n        border-radius: 50%;\n        animation: spin 0.8s linear infinite;\n    }\n\n    @keyframes spin {\n        to { transform: rotate(360deg); }\n    }\n\n    .validation-status {\n        display: flex;\n        align-items: center;\n        gap: 0.375rem;\n        font-size: 0.875rem;\n        font-weight: 500;\n        color: var(--error);\n    }\n\n    .validation-status.valid {\n        color: var(--success);\n    }\n\n    .status-icon {\n        width: 1.25rem;\n        height: 1.25rem;\n    }\n\n    .validation-filters {\n        display: flex;\n        gap: 0.5rem;\n        margin-bottom: 1rem;\n    }\n\n    .filter-btn {\n        padding: 0.375rem 0.75rem;\n        font-size: 0.75rem;\n        font-weight: 500;\n        background: var(--bg);\n        border: 1px solid var(--border);\n        border-radius: 0.375rem;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .filter-btn:hover {\n        background: var(--bg-secondary);\n    }\n\n    .filter-btn.active {\n        background: var(--primary);\n        color: white;\n        border-color: var(--primary);\n    }\n\n    .filter-btn.error.active {\n        background: var(--error);\n        border-color: var(--error);\n    }\n\n    .filter-btn.warning.active {\n        background: var(--warning);\n        border-color: var(--warning);\n    }\n\n    .filter-btn.info.active {\n        background: var(--primary);\n        border-color: var(--primary);\n    }\n\n    .violations-list {\n        display: flex;\n        flex-direction: column;\n        gap: 0.75rem;\n    }\n\n    .violation-item {\n        background: var(--bg);\n        border: 1px solid var(--border);\n        border-radius: 0.5rem;\n        padding: 1rem;\n    }\n\n    .violation-item.severity-error {\n        border-color: rgba(239, 68, 68, 0.2);\n        background: rgba(239, 68, 68, 0.05);\n    }\n\n    .violation-item.severity-warning {\n        border-color: rgba(245, 158, 11, 0.2);\n        background: rgba(245, 158, 11, 0.05);\n    }\n\n    .violation-item.severity-info {\n        border-color: rgba(59, 130, 246, 0.2);\n        background: rgba(59, 130, 246, 0.05);\n    }\n\n    .violation-header {\n        display: flex;\n        gap: 0.75rem;\n    }\n\n    .violation-icon {\n        width: 1.25rem;\n        height: 1.25rem;\n        flex-shrink: 0;\n        margin-top: 0.125rem;\n    }\n\n    .violation-content {\n        flex: 1;\n    }\n\n    .violation-message {\n        font-size: 0.875rem;\n        font-weight: 500;\n        margin-bottom: 0.25rem;\n    }\n\n    .violation-details {\n        font-size: 0.813rem;\n        color: var(--text-secondary);\n        margin-bottom: 0.5rem;\n    }\n\n    .affected-options {\n        font-size: 0.75rem;\n        color: var(--text-secondary);\n        margin-bottom: 0.5rem;\n    }\n\n    .affected-option {\n        font-weight: 500;\n        color: var(--text);\n    }\n\n    .rule-expression {\n        font-size: 0.75rem;\n        color: var(--text-secondary);\n        margin-top: 0.5rem;\n    }\n\n    .rule-expression code {\n        background: var(--bg-secondary);\n        padding: 0.125rem 0.375rem;\n        border-radius: 0.25rem;\n        font-family: monospace;\n    }\n\n    .violation-suggestions {\n        margin-top: 0.75rem;\n        padding-top: 0.75rem;\n        border-top: 1px solid var(--border);\n    }\n\n    .suggestions-title {\n        font-size: 0.75rem;\n        font-weight: 600;\n        margin-bottom: 0.375rem;\n    }\n\n    .suggestions-list {\n        margin: 0;\n        padding-left: 1.25rem;\n        font-size: 0.813rem;\n        color: var(--text-secondary);\n    }\n\n    .auto-fix-btn {\n        display: flex;\n        align-items: center;\n        gap: 0.375rem;\n        margin-top: 0.75rem;\n        padding: 0.375rem 0.75rem;\n        background: var(--primary);\n        color: white;\n        border: none;\n        border-radius: 0.375rem;\n        font-size: 0.75rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .auto-fix-btn:hover {\n        background: var(--primary-hover);\n    }\n\n    .fix-icon {\n        width: 1rem;\n        height: 1rem;\n    }\n\n    .valid-message {\n        display: flex;\n        align-items: center;\n        gap: 0.75rem;\n        padding: 1rem;\n        background: rgba(16, 185, 129, 0.1);\n        border: 1px solid rgba(16, 185, 129, 0.2);\n        border-radius: 0.5rem;\n    }\n\n    .valid-icon {\n        width: 1.5rem;\n        height: 1.5rem;\n        color: var(--success);\n    }\n\n    .valid-message p {\n        margin: 0;\n        font-size: 0.875rem;\n        color: var(--success);\n        font-weight: 500;\n    }\n</style>","<!-- web/src/lib/components/ConfigurationSummary.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n    import { formatCurrency } from '../utils/format.js';\n\n    async function handleSave() {\n        try {\n            await configStore.saveConfiguration();\n        } catch (error) {\n            console.error('Failed to save:', error);\n        }\n    }\n\n    function handleExport() {\n        const data = {\n            modelId: configStore.modelId,\n            modelName: configStore.model?.name,\n            selections: configStore.selections,\n            pricing: configStore.pricingData,\n            timestamp: new Date().toISOString()\n        };\n\n        const blob = new Blob([JSON.stringify(data, null, 2)], { type: 'application/json' });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `configuration-${Date.now()}.json`;\n        a.click();\n        URL.revokeObjectURL(url);\n    }\n</script>\n\n<div class=\"configuration-summary\">\n    <h3>Configuration Summary</h3>\n\n    <div class=\"summary-stats\">\n        <div class=\"stat\">\n            <span class=\"stat-value\">{configStore.selectedOptions.length}</span>\n            <span class=\"stat-label\">Options Selected</span>\n        </div>\n        <div class=\"stat\">\n            <span class=\"stat-value\">{formatCurrency(configStore.totalPrice)}</span>\n            <span class=\"stat-label\">Total Price</span>\n        </div>\n    </div>\n\n    <div class=\"summary-actions\">\n        <button class=\"action-btn primary\" onclick={handleSave}>\n            Save Configuration\n        </button>\n        <button class=\"action-btn secondary\" onclick={handleExport}>\n            Export\n        </button>\n    </div>\n</div>\n\n<style>\n    .configuration-summary {\n        background: var(--bg-secondary);\n        border-radius: 0.75rem;\n        padding: 1.25rem;\n        border: 1px solid var(--border);\n    }\n\n    h3 {\n        font-size: 1rem;\n        font-weight: 600;\n        margin: 0 0 1rem;\n    }\n\n    .summary-stats {\n        display: grid;\n        grid-template-columns: 1fr 1fr;\n        gap: 1rem;\n        margin-bottom: 1rem;\n    }\n\n    .stat {\n        text-align: center;\n        padding: 1rem;\n        background: var(--bg);\n        border-radius: 0.5rem;\n    }\n\n    .stat-value {\n        display: block;\n        font-size: 1.5rem;\n        font-weight: 700;\n        color: var(--primary);\n    }\n\n    .stat-label {\n        display: block;\n        font-size: 0.75rem;\n        color: var(--text-secondary);\n        margin-top: 0.25rem;\n    }\n\n    .summary-actions {\n        display: flex;\n        gap: 0.75rem;\n    }\n\n    .action-btn {\n        flex: 1;\n        padding: 0.75rem;\n        border-radius: 0.5rem;\n        font-weight: 500;\n        border: none;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .action-btn.primary {\n        background: var(--primary);\n        color: white;\n    }\n\n    .action-btn.primary:hover {\n        background: var(--primary-hover);\n    }\n\n    .action-btn.secondary {\n        background: var(--bg);\n        color: var(--text);\n        border: 1px solid var(--border);\n    }\n\n    .action-btn.secondary:hover {\n        background: var(--bg-secondary);\n    }\n</style>","<!-- web/src/lib/components/UndoRedo.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n</script>\n\n<div class=\"undo-redo\">\n    <button\n            class=\"action-btn\"\n            disabled={!configStore.canUndo}\n            onclick={() => configStore.undo()}\n            title=\"Undo\"\n    >\n        <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path d=\"M12.207 2.293a1 1 0 010 1.414L10.914 5H13a7 7 0 017 7v2a1 1 0 11-2 0v-2a5 5 0 00-5-5h-2.586l1.293 1.293a1 1 0 11-1.414 1.414l-3-3a1 1 0 010-1.414l3-3a1 1 0 011.414 0z\" />\n        </svg>\n    </button>\n\n    <button\n            class=\"action-btn\"\n            disabled={!configStore.canRedo}\n            onclick={() => configStore.redo()}\n            title=\"Redo\"\n    >\n        <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path d=\"M7.793 2.293a1 1 0 011.414 0l3 3a1 1 0 010 1.414l-3 3a1 1 0 01-1.414-1.414L9.086 7H7a5 5 0 00-5 5v2a1 1 0 11-2 0v-2a7 7 0 017-7h2.586L7.793 3.707a1 1 0 010-1.414z\" />\n        </svg>\n    </button>\n</div>\n\n<style>\n    .undo-redo {\n        display: flex;\n        gap: 0.5rem;\n    }\n\n    .action-btn {\n        padding: 0.5rem;\n        background: var(--bg-secondary);\n        border: 1px solid var(--border);\n        border-radius: 0.375rem;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .action-btn:hover:not(:disabled) {\n        background: var(--bg);\n    }\n\n    .action-btn:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n\n    .action-btn svg {\n        width: 1.25rem;\n        height: 1.25rem;\n        color: var(--text-secondary);\n    }\n</style>","<!-- web/src/lib/ConfiguratorApp.svelte -->\n<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { configStore } from './stores/configuration.svelte.js';\n  import ProgressIndicator from './components/ProgressIndicator.svelte';\n  import LoadingSpinner from './components/LoadingSpinner.svelte';\n  import ErrorBoundary from './components/ErrorBoundary.svelte';\n  import OptionGroup from './components/OptionGroup.svelte';\n  import PricingDisplay from './components/PricingDisplay.svelte';\n  import ValidationDisplay from './components/ValidationDisplay.svelte';\n  import ConfigurationSummary from './components/ConfigurationSummary.svelte';\n  import NetworkStatus from './components/NetworkStatus.svelte';\n  import UndoRedo from './components/UndoRedo.svelte';\n\n  let {\n    modelId,\n    theme = 'light',\n    apiUrl = 'http://localhost:8080/api/v1',\n    embedMode = false,\n    onComplete = null,\n    onConfigurationChange = null,\n    onError = null\n  } = $props();\n\n  let mounted = false;\n  let container;\n\n  // Set API URL globally before anything else\n  if (typeof window !== 'undefined') {\n    window.__API_BASE_URL__ = apiUrl;\n  }\n\n  onMount(() => {\n    mounted = true;\n\n    // Initialize store with API URL first\n    configStore.initialize(apiUrl);\n\n    // Then set model ID after a tick to ensure proper initialization\n    if (modelId) {\n      setTimeout(() => {\n        configStore.setModelId(modelId);\n      }, 0);\n    }\n\n    // Apply theme\n    document.documentElement.setAttribute('data-theme', theme);\n\n    // Set up event handlers\n    if (onConfigurationChange) {\n      const unsubscribe = $effect.root(() => {\n        $effect(() => {\n          if (configStore.isDirty && configStore.selections) {\n            onConfigurationChange({\n              selections: configStore.selections,\n              validation: configStore.validationResults,\n              pricing: configStore.pricingData\n            });\n          }\n        });\n      });\n\n      return () => unsubscribe();\n    }\n  });\n\n  onDestroy(() => {\n    configStore.destroy();\n  });\n\n  function handleComplete() {\n    const configuration = {\n      modelId: configStore.modelId,\n      selections: configStore.selections,\n      pricing: configStore.pricingData,\n      validation: configStore.validationResults\n    };\n\n    if (onComplete) {\n      onComplete(configuration);\n    }\n  }\n\n  function handleError(error) {\n    console.error('Configuration error:', error);\n    if (onError) {\n      onError(error);\n    }\n  }\n\n  function handleRetry() {\n    configStore.clearError();\n    configStore.loadModel();\n  }\n\n  $effect(() => {\n    if (configStore.error) {\n      handleError(configStore.error);\n    }\n  });\n</script>\n\n<div class=\"cpq-configurator\" bind:this={container} class:embed-mode={embedMode} data-theme={theme}>\n  <NetworkStatus />\n\n  <ErrorBoundary error={configStore.error} onRetry={handleRetry}>\n    {#snippet children()}\n      <div class=\"configurator-content\">\n        {#if configStore.error && configStore.error.code === 'NOT_FOUND'}\n          <div class=\"error-state\">\n            <svg class=\"error-icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7 4a1 1 0 11-2 0 1 1 0 012 0zm-1-9a1 1 0 00-1 1v4a1 1 0 102 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />\n            </svg>\n            <h2>Model Not Found</h2>\n            <p>The model with ID \"{modelId}\" could not be found.</p>\n            <p class=\"error-details\">Please check the model ID and try again.</p>\n          </div>\n        {:else if configStore.isLoading}\n          <LoadingSpinner size=\"large\" message=\"Loading configuration...\" />\n        {:else if configStore.model}\n          <!-- Header with progress -->\n          <div class=\"configurator-header\">\n            <div class=\"header-content\">\n              <h1 class=\"configurator-title\">{configStore.model.name}</h1>\n              {#if configStore.model.description}\n                <p class=\"configurator-description\">{configStore.model.description}</p>\n              {/if}\n            </div>\n\n            <UndoRedo />\n          </div>\n\n          <ProgressIndicator\n                  currentStep={configStore.currentStep}\n                  completionPercentage={configStore.completionPercentage}\n          />\n\n          <!-- Main content -->\n          <div class=\"configurator-body\" class:compact={embedMode}>\n            <!-- Options panel -->\n            <div class=\"options-panel\">\n              {#if configStore.model.option_groups}\n                {#each configStore.model.option_groups as group}\n                  <OptionGroup {group} />\n                {/each}\n              {/if}\n            </div>\n\n            <!-- Sidebar -->\n            <div class=\"sidebar-panel\">\n              <ValidationDisplay />\n              <PricingDisplay detailed={!embedMode} />\n\n              {#if configStore.completionPercentage === 100}\n                <ConfigurationSummary />\n              {/if}\n            </div>\n          </div>\n\n          <!-- Actions -->\n          <div class=\"configurator-actions\">\n            <button\n                    type=\"button\"\n                    class=\"btn btn-secondary\"\n                    disabled={configStore.currentStep === 0}\n                    onclick={() => configStore.previousStep()}\n            >\n              Previous\n            </button>\n\n            <div class=\"action-group\">\n              {#if configStore.isDirty}\n              <span class=\"save-indicator\">\n                {#if configStore.lastSaved}\n                  Last saved {new Date(configStore.lastSaved).toLocaleTimeString()}\n                {:else}\n                  Unsaved changes\n                {/if}\n              </span>\n              {/if}\n\n              <button\n                      type=\"button\"\n                      class=\"btn btn-primary\"\n                      disabled={!configStore.canProceedToNextStep && configStore.currentStep < 3}\n                      onclick={() => {\n                if (configStore.currentStep === 3) {\n                  handleComplete();\n                } else {\n                  configStore.nextStep();\n                }\n              }}\n              >\n                {configStore.currentStep === 3 ? 'Complete' : 'Next'}\n              </button>\n            </div>\n          </div>\n        {:else}\n          <div class=\"no-model\">\n            <p>No model selected</p>\n          </div>\n        {/if}\n      </div>\n    {/snippet}\n  </ErrorBoundary>\n</div>\n\n<style>\n  .cpq-configurator {\n    --primary: #3b82f6;\n    --primary-hover: #2563eb;\n    --secondary: #6b7280;\n    --success: #10b981;\n    --warning: #f59e0b;\n    --error: #ef4444;\n    --bg: #ffffff;\n    --bg-secondary: #f9fafb;\n    --text: #111827;\n    --text-secondary: #6b7280;\n    --border: #e5e7eb;\n\n    min-height: 100vh;\n    background: var(--bg);\n    color: var(--text);\n  }\n\n  .cpq-configurator[data-theme=\"dark\"] {\n    --bg: #111827;\n    --bg-secondary: #1f2937;\n    --text: #f9fafb;\n    --text-secondary: #9ca3af;\n    --border: #374151;\n  }\n\n  .embed-mode {\n    min-height: auto;\n  }\n\n  .configurator-content {\n    max-width: 1280px;\n    margin: 0 auto;\n    padding: 2rem;\n  }\n\n  .configurator-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: start;\n    margin-bottom: 2rem;\n  }\n\n  .configurator-title {\n    font-size: 2rem;\n    font-weight: 700;\n    margin: 0;\n  }\n\n  .configurator-description {\n    color: var(--text-secondary);\n    margin: 0.5rem 0 0;\n  }\n\n  .configurator-body {\n    display: grid;\n    grid-template-columns: 1fr 400px;\n    gap: 2rem;\n    margin: 2rem 0;\n  }\n\n  .configurator-body.compact {\n    grid-template-columns: 1fr;\n  }\n\n  .options-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n  }\n\n  .sidebar-panel {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    position: sticky;\n    top: 2rem;\n    max-height: calc(100vh - 4rem);\n    overflow-y: auto;\n  }\n\n  .configurator-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-top: 2rem;\n    border-top: 1px solid var(--border);\n  }\n\n  .action-group {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  .save-indicator {\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n  }\n\n  .btn {\n    padding: 0.75rem 1.5rem;\n    border-radius: 0.5rem;\n    font-weight: 500;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .btn-primary {\n    background: var(--primary);\n    color: white;\n  }\n\n  .btn-primary:hover:not(:disabled) {\n    background: var(--primary-hover);\n  }\n\n  .btn-secondary {\n    background: var(--bg-secondary);\n    color: var(--text);\n    border: 1px solid var(--border);\n  }\n\n  .btn-secondary:hover:not(:disabled) {\n    background: var(--border);\n  }\n\n  .no-model {\n    text-align: center;\n    padding: 4rem;\n    color: var(--text-secondary);\n  }\n\n  .error-state {\n    text-align: center;\n    padding: 4rem;\n    max-width: 400px;\n    margin: 0 auto;\n  }\n\n  .error-state .error-icon {\n    width: 3rem;\n    height: 3rem;\n    color: var(--warning);\n    margin: 0 auto 1rem;\n  }\n\n  .error-state h2 {\n    font-size: 1.5rem;\n    font-weight: 600;\n    margin: 0 0 0.5rem;\n  }\n\n  .error-state p {\n    color: var(--text-secondary);\n    margin: 0 0 0.5rem;\n  }\n\n  .error-state .error-details {\n    font-size: 0.875rem;\n  }\n\n  @media (max-width: 768px) {\n    .configurator-body {\n      grid-template-columns: 1fr;\n    }\n\n    .sidebar-panel {\n      position: static;\n      max-height: none;\n    }\n  }\n</style>","<!-- web/src/lib/components/NetworkStatus.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n\n    let showBanner = $state(false);\n\n    $effect(() => {\n        showBanner = !configStore.isOnline;\n    });\n</script>\n\n{#if showBanner}\n    <div class=\"network-banner offline\">\n        <svg class=\"icon\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path fill-rule=\"evenodd\" d=\"M3.707 2.293a1 1 0 00-1.414 1.414l14 14a1 1 0 001.414-1.414l-1.473-1.473A10.014 10.014 0 0019.542 10C18.268 5.943 14.478 3 10 3a9.958 9.958 0 00-4.512 1.074l-1.78-1.781zm4.261 4.26l1.514 1.515a2.003 2.003 0 012.45 2.45l1.514 1.514a4 4 0 00-5.478-5.478z\" clip-rule=\"evenodd\" />\n            <path d=\"M12.454 16.697L9.75 13.992a4 4 0 01-3.742-3.741L2.335 6.578A9.98 9.98 0 00.458 10c1.274 4.057 5.065 7 9.542 7 .847 0 1.669-.105 2.454-.303z\" />\n        </svg>\n        <span>You're offline - changes will be saved when connection is restored</span>\n    </div>\n{/if}\n\n<style>\n    .network-banner {\n        position: fixed;\n        top: 0;\n        left: 0;\n        right: 0;\n        padding: 0.75rem;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        gap: 0.5rem;\n        font-size: 0.875rem;\n        font-weight: 500;\n        z-index: 1000;\n    }\n\n    .network-banner.offline {\n        background: var(--warning);\n        color: white;\n    }\n\n    .icon {\n        width: 1.25rem;\n        height: 1.25rem;\n    }\n</style>","<!-- web/src/lib/components/LoadingSpinner.svelte -->\n<script>\n  let {\n    size = 'medium',\n    message = '',\n    overlay = false\n  } = $props();\n\n  const sizeClasses = {\n    small: 'w-4 h-4',\n    medium: 'w-8 h-8',\n    large: 'w-12 h-12'\n  };\n</script>\n\n<div class=\"loading-spinner\" class:overlay>\n  <div class=\"spinner-content\">\n    <div class=\"spinner {sizeClasses[size]}\"></div>\n    {#if message}\n      <p class=\"loading-message\">{message}</p>\n    {/if}\n  </div>\n</div>\n\n<style>\n  .loading-spinner {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n  }\n\n  .loading-spinner.overlay {\n    position: fixed;\n    inset: 0;\n    background: rgba(0, 0, 0, 0.5);\n    z-index: 9999;\n  }\n\n  .spinner-content {\n    text-align: center;\n  }\n\n  .spinner {\n    margin: 0 auto;\n    border: 3px solid var(--border);\n    border-top-color: var(--primary);\n    border-radius: 50%;\n    animation: spin 0.8s linear infinite;\n  }\n\n  .loading-message {\n    margin-top: 1rem;\n    color: var(--text-secondary);\n    font-size: 0.875rem;\n  }\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n</style>","<!-- web/src/lib/components/ProgressIndicator.svelte -->\n<script>\n  let {\n    currentStep = 0,\n    completionPercentage = 0\n  } = $props();\n\n  const steps = [\n    { name: 'Configure', icon: '1' },\n    { name: 'Validate', icon: '2' },\n    { name: 'Price', icon: '3' },\n    { name: 'Complete', icon: '4' }\n  ];\n</script>\n\n<div class=\"progress-indicator\">\n  <div class=\"progress-bar\">\n    <div class=\"progress-fill\" style=\"width: {completionPercentage}%\"></div>\n  </div>\n\n  <div class=\"progress-steps\">\n    {#each steps as step, index}\n      <div\n              class=\"step\"\n              class:active={index === currentStep}\n              class:completed={index < currentStep}\n      >\n        <div class=\"step-icon\">\n          {#if index < currentStep}\n            <svg viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path fill-rule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clip-rule=\"evenodd\" />\n            </svg>\n          {:else}\n            {step.icon}\n          {/if}\n        </div>\n        <span class=\"step-name\">{step.name}</span>\n      </div>\n    {/each}\n  </div>\n\n  <div class=\"progress-text\">\n    {completionPercentage}% Complete\n  </div>\n</div>\n\n<style>\n  .progress-indicator {\n    margin-bottom: 2rem;\n  }\n\n  .progress-bar {\n    height: 0.5rem;\n    background: var(--bg-secondary);\n    border-radius: 9999px;\n    overflow: hidden;\n    margin-bottom: 1.5rem;\n  }\n\n  .progress-fill {\n    height: 100%;\n    background: var(--primary);\n    transition: width 0.3s ease;\n  }\n\n  .progress-steps {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 1rem;\n  }\n\n  .step {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n    opacity: 0.5;\n    transition: opacity 0.2s;\n  }\n\n  .step.active,\n  .step.completed {\n    opacity: 1;\n  }\n\n  .step-icon {\n    width: 2rem;\n    height: 2rem;\n    background: var(--bg-secondary);\n    border: 2px solid var(--border);\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    font-weight: 600;\n    font-size: 0.875rem;\n    transition: all 0.2s;\n  }\n\n  .step.active .step-icon {\n    background: var(--primary);\n    color: white;\n    border-color: var(--primary);\n  }\n\n  .step.completed .step-icon {\n    background: var(--success);\n    color: white;\n    border-color: var(--success);\n  }\n\n  .step-icon svg {\n    width: 1rem;\n    height: 1rem;\n  }\n\n  .step-name {\n    font-size: 0.75rem;\n    font-weight: 500;\n  }\n\n  .progress-text {\n    text-align: center;\n    font-size: 0.875rem;\n    color: var(--text-secondary);\n  }\n</style>"],"names":["debounce","fn","delay","timeoutId","args","clearTimeout","setTimeout","apply","this","window","_a","__svelte","v","Set","add","ConfiguratorApiClient","constructor","baseUrl","options","modelId","authToken","timeout","retryAttempts","retryDelay","request","endpoint","url","config","method","headers","generateRequestId","Authorization","lastError","body","JSON","stringify","attempt","controller","AbortController","abort","response","fetch","signal","status","Error","error","code","retryAfter","get","ok","errorData","json","catch","message","statusText","data","includes","name","Math","pow","Date","now","random","toString","substr","ms","Promise","resolve","getModel","getModelOptions","getModelGroups","createConfiguration","selections","model_id","formatSelections","updateConfiguration","configId","validateConfiguration","getConfiguration","deleteConfiguration","calculatePricing","context","simulatePricing","scenarios","map","s","getVolumeTiers","getConfigurationAnalytics","timeRange","getPricingAnalytics","Array","isArray","Object","entries","filter","_","quantity","option_id","setModelId","setAuthToken","token","STORAGE_PREFIX","_isOnline","WeakMap","_api","_initialized","_ConfigurationStore_instances","WeakSet","setupEffects_fn","unsubModel","$.user_effect","__privateGet","model","loadModel","_cleanupFns","push","validateDebounced","keys","length","validateSelections","unsubValidate","pricingDebounced","isValid","unsubPricing","saveDebounced","isDirty","saveConfiguration","unsubSave","unsubPersist","__privateMethod","persistState_fn","call","setupNetworkMonitoring_fn","handleOnline","isOnline","processRetryQueue_fn","handleOffline","addEventListener","removeEventListener","async","retryQueue","operation","shift","console","key","localStorage","setItem","e","warn","persist","configurationId","currentStep","lastSaved","recoverState_fn","state","item","getItem","parse","recover","addToHistory_fn","history","slice","historyIndex","timestamp","maxHistorySize","configStore","__privateAdd","violations","__publicField","$.state","$.proxy","navigator","onLine","value","validationResults","pricingData","isLoading","isValidating","isPricing","totalPrice","total_price","basePrice","base_price","adjustments","selectedOptions","option_groups","flatMap","group","option","id","group_name","completionPercentage","requiredGroups","g","required","completedGroups","some","round","canProceedToNextStep","canUndo","canRedo","initialize","apiUrl","__API_BASE_URL__","__privateSet","destroy","forEach","reset","log","selection_type","min_selections","opt","type","api","updateSelection","optionId","oldSelections","find","o","otherOption","is_valid","undo","redo","nextStep","min","previousStep","max","clearError","handleRetry","$.set","hasError","errorMessage","onRetry","formatCurrency","amount","Intl","NumberFormat","style","currency","format","handleToggle","newQuantity","$.get","isSelected","set","$$props","handleQuantityChange","on_click","__1","updateQuantity","parseInt","target","on_click_1","__2","$.derived","limit","inThrottle","throttle","optionErrors","delta","max_selections","currentGroupSelections","sku","$$render","consequent","price_unit","consequent_1","description","consequent_2","attributes","$.index","$$anchor","$$item","$$array","consequent_3","each","div_5","$.template_effect","$.set_text","text_7","consequent_4","consequent_6","button","disabled","$.set_attribute","input_1","max_quantity","bind_value","$$value","consequent_5","alternate","availability","consequent_8","consequent_7","alternate_1","expanded","scrollContainer","searchTerm","showVirtualScroll","virtualScroller","filteredOptions","toLowerCase","items","itemHeight","containerHeight","buffer","scrollTop","$state","visibleStart","$derived","floor","visibleEnd","ceil","displayStart","displayEnd","offsetY","visibleItems","totalHeight","updateScroll","newScrollTop","createVirtualScroller","hasSelections","hasErrors","group_id","groupErrors","handleScroll","event","text_1","template_effect","text_4","input","$.bind_this","div_9","div_12","consequent_9","consequent_10","showBreakdown","showVolumeDetails","filterSeverity","on_click_2","on_click_3","__3","on_click_4","__4","handleAutoFix","violation","handleSave","handleComplete","container","theme","embedMode","onComplete","onConfigurationChange","onError","configuration","pricing","validation","onMount","document","documentElement","setAttribute","unsubscribe","onDestroy","showBanner","size","overlay","sizeClasses","small","medium","large","set_class","div_2","button_1","steps","icon","div_3","step","index","text","active","completed","node_7","groupedViolations","groups","warning","info","severity","filteredViolations","auto_fix_action","action","$0","classes","$.set_class","valid","div_4","html","getViolationIcon","text_6","details","affected_options","i","text_9","rule_expression","suggestions","suggestion","consequent_11","text_5","getSeverityColor","consequent_13","consequent_12","detailed","breakdown","unitPrice","total","adj","reason","percentage","volumeDiscounts","saved","abs","totalSavings","reduce","sum","price_per_unit","div_8","text_8","text_11","text_10","$1","div_16","discount","text_13","tier_name","d","consequent_14","modelName","toISOString","blob","Blob","URL","createObjectURL","a","createElement","href","download","click","revokeObjectURL","toLocaleTimeString","alternate_2","alternate_3","fallback","div"],"mappings":"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","x_google_ignoreList":[1,2]}