{"version":3,"file":"configurator-VPEb6tR-.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../src/lib/api/client.js","../../src/lib/utils/sanitizer.js","../../src/lib/stores/configuration.svelte.js","../../src/lib/components/ProgressIndicator.svelte","../../src/lib/components/LoadingSpinner.svelte","../../src/lib/components/ErrorBoundary.svelte","../../src/lib/components/SafeText.svelte","../../src/lib/components/OptionCard.svelte","../../src/lib/components/OptionGroup.svelte","../../src/lib/components/PricingDisplay.svelte","../../src/lib/components/ValidationDisplay.svelte","../../src/lib/components/ConfigurationSummary.svelte","../../src/lib/ConfiguratorApp.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.34.3';\nexport const PUBLIC_VERSION = '5';\n","// web/src/lib/api/client.js\nclass ConfiguratorApiClient {\n  constructor(baseUrl, options = {}) {\n    this.baseUrl = baseUrl || window.__API_BASE_URL__ || 'http://localhost:8080/api/v1';\n    this.modelId = options.modelId;\n    this.authToken = options.authToken || localStorage.getItem('auth_token');\n    this.timeout = options.timeout || 30000;\n\n    console.log('API Client initialized:', {\n      baseUrl: this.baseUrl,\n      modelId: this.modelId,\n      hasAuth: !!this.authToken\n    });\n  }\n\n  async request(endpoint, options = {}) {\n    const url = `${this.baseUrl}${endpoint}`;\n    console.log(`API Request: ${options.method || 'GET'} ${url}`);\n\n    const config = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(this.authToken && { 'Authorization': `Bearer ${this.authToken}` }),\n        ...options.headers\n      },\n      ...options\n    };\n\n    if (config.body && typeof config.body === 'object') {\n      config.body = JSON.stringify(config.body);\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n      const response = await fetch(url, {\n        ...config,\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorData = await response.json().catch(() => ({ message: response.statusText }));\n        throw new Error(errorData.message || errorData.error || `HTTP ${response.status}`);\n      }\n\n      const result = await response.json();\n\n      // Debug logging for development\n      if (window.location.hostname === 'localhost' || window.location.hostname === '127.0.0.1') {\n        console.log(`API Response from ${endpoint}:`, result);\n      }\n\n      // Handle wrapped responses from backend\n      if (result && typeof result === 'object' && result.success !== undefined && result.data !== undefined) {\n        return result.data;\n      }\n\n      // Return result or empty array/object for safety\n      return result ?? (endpoint.includes('/groups') || endpoint.includes('/options') || endpoint.includes('/rules') ? [] : {});\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout');\n      }\n      console.error(`API Error for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  // Model Management\n  async getModel() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const model = await this.request(`/models/${this.modelId}`);\n\n    // Ensure we have proper structure\n    if (!model.option_groups && model.groups) {\n      model.option_groups = model.groups;\n    }\n\n    // Log the model structure for debugging\n    console.log('Model structure:', {\n      hasGroups: !!model.groups,\n      hasOptionGroups: !!model.option_groups,\n      hasOptions: !!model.options,\n      groupsCount: model.groups?.length || model.option_groups?.length || 0,\n      optionsCount: model.options?.length || 0\n    });\n\n    return model;\n  }\n\n  async getModelGroups() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/groups`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelOptions() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/options`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelRules() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/rules`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelPricingRules() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/pricing-rules`);\n    // Ensure we return an array\n    return Array.isArray(response) ? response : [];\n  }\n\n  async getModelStatistics() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/statistics`);\n  }\n\n  // Configuration Management\n  async createConfiguration(selections = []) {\n    return this.request('/configurations', {\n      method: 'POST',\n      body: {\n        model_id: \"sample-laptop\",\n        name: `Configuration ${new Date().toISOString()}`,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async getConfiguration(configId) {\n    return this.request(`/configurations/${configId}`);\n  }\n\n  async updateConfiguration(configId, updates) {\n    return this.request(`/configurations/${configId}`, {\n      method: 'PUT',\n      body: {\n        model_id: this.modelId,\n        ...updates,\n        selections: updates.selections ? this.formatSelections(updates.selections) : undefined\n      }\n    });\n  }\n\n  async deleteConfiguration(configId) {\n    return this.request(`/configurations/${configId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  async addSelections(configId, selections) {\n    return this.request(`/configurations/${configId}/selections`, {\n      method: 'POST',\n      body: {\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async removeSelection(configId, optionId) {\n    return this.request(`/configurations/${configId}/selections/${optionId}`, {\n      method: 'DELETE'\n    });\n  }\n\n  async validateConfiguration(configId) {\n    return this.request(`/configurations/${configId}/validate`, {\n      method: 'POST'\n    });\n  }\n\n  async validateSelections(selections) {\n    return this.request('/configurations/validate-selection', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async getAvailableOptions(configId) {\n    return this.request(`/configurations/${configId}/available-options`);\n  }\n\n  async getConstraints(configId) {\n    return this.request(`/configurations/${configId}/constraints`);\n  }\n\n  async getConfigurationSummary(configId) {\n    return this.request(`/configurations/${configId}/summary`);\n  }\n\n  async cloneConfiguration(configId) {\n    return this.request(`/configurations/${configId}/clone`, {\n      method: 'POST'\n    });\n  }\n\n  // Pricing Operations\n  async calculatePrice(selections, context = {}) {\n    return this.request('/pricing/calculate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections),\n        context\n      }\n    });\n  }\n\n  async simulatePricing(scenarios) {\n    return this.request('/pricing/simulate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        scenarios\n      }\n    });\n  }\n\n  async validatePricing(selections, expectedPrice) {\n    return this.request('/pricing/validate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections),\n        expected_price: expectedPrice\n      }\n    });\n  }\n\n  async getPricingRules() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/pricing/rules/${this.modelId}`);\n  }\n\n  async getVolumeTiers() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/pricing/volume-tiers/${this.modelId}`);\n  }\n\n  // Model Builder Operations\n  async validateModel() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/validate`, {\n      method: 'POST'\n    });\n  }\n\n  async detectConflicts(ruleIds = []) {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/conflicts`, {\n      method: 'POST',\n      body: { rule_ids: ruleIds }\n    });\n  }\n\n  async analyzeImpact(changes) {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/impact`, {\n      method: 'POST',\n      body: changes\n    });\n  }\n\n  async getModelQuality() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/quality`, {\n      method: 'POST'\n    });\n  }\n\n  async getOptimizationRecommendations() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/optimize`, {\n      method: 'POST'\n    });\n  }\n\n  // Utility Methods\n  formatSelections(selections) {\n    if (Array.isArray(selections)) {\n      return selections;\n    }\n\n    // Convert object format to array format\n    return Object.entries(selections)\n        .filter(([_, quantity]) => quantity > 0)\n        .map(([option_id, quantity]) => ({\n          option_id,\n          quantity: parseInt(quantity) || 1\n        }));\n  }\n\n  // Batch Operations\n  async batchValidate(configurations) {\n    return this.request('/configurations/validate', {\n      method: 'POST',\n      body: { configurations }\n    });\n  }\n\n  async bulkCalculatePricing(configurations) {\n    return this.request('/pricing/bulk-calculate', {\n      method: 'POST',\n      body: { configurations }\n    });\n  }\n\n  // Health Check\n  async checkHealth() {\n    return this.request('/health');\n  }\n\n  async getStatus() {\n    return this.request('/status');\n  }\n}\n\nexport default ConfiguratorApiClient;","// web/src/lib/utils/sanitizer.js\n\n/**\n * Check if a string contains code patterns\n */\nexport function containsCode(text) {\n    if (typeof text !== 'string') return false;\n\n    const codePatterns = [\n        '=>',              // Arrow functions\n        'function',        // Function keyword\n        '$props',         // Svelte internals\n        '$',              // Any Svelte internal\n        '$.strict_equals', // Svelte runtime\n        'return ',         // Return statements\n        '${',              // Template literals\n        '() =>',           // Arrow function pattern\n        '} else',          // Control flow\n        'if (',            // Conditionals\n        '.selection_type',  // Property access that looks like code\n        'strict_equals',   // Function names\n        'min_selections',  // When preceded by dots\n        'max_selections',  // When preceded by dots\n    ];\n\n    return codePatterns.some(pattern => text.includes(pattern));\n}\n\n/**\n * Sanitize text by removing code patterns\n */\nexport function sanitizeText(text, fallback = '') {\n    // Handle non-string inputs\n    if (text === null || text === undefined) return fallback;\n\n    // Convert to string if needed\n    const textStr = String(text);\n\n    // Check if it's already a normal string\n    if (typeof text === 'string' && !containsCode(textStr)) {\n        return textStr;\n    }\n\n    // Log when we detect code\n    if (containsCode(textStr)) {\n        console.warn('[Sanitizer] Code pattern detected and removed:', {\n            original: textStr.substring(0, 100) + (textStr.length > 100 ? '...' : ''),\n            fallback: fallback\n        });\n        return fallback;\n    }\n\n    return textStr;\n}\n\n/**\n * Sanitize an entire object recursively\n */\nexport function sanitizeObject(obj, fields = ['name', 'description', 'label', 'title', 'text', 'value']) {\n    if (!obj || typeof obj !== 'object') return obj;\n\n    if (Array.isArray(obj)) {\n        return obj.map(item => sanitizeObject(item, fields));\n    }\n\n    const sanitized = { ...obj };\n\n    // Check all string properties, not just specific fields\n    Object.keys(sanitized).forEach(key => {\n        if (typeof sanitized[key] === 'string') {\n            const original = sanitized[key];\n            const cleaned = sanitizeText(original, '');\n            if (original !== cleaned) {\n                console.warn(`[Sanitizer] Cleaned field '${key}' in object`);\n                sanitized[key] = cleaned;\n            }\n        } else if (sanitized[key] && typeof sanitized[key] === 'object') {\n            // Recursively sanitize nested objects\n            sanitized[key] = sanitizeObject(sanitized[key], fields);\n        }\n    });\n\n    return sanitized;\n}\n\n/**\n * Create a safe text getter\n */\nexport function safeText(getValue, fallback = '') {\n    try {\n        const value = typeof getValue === 'function' ? getValue() : getValue;\n        return sanitizeText(String(value), fallback);\n    } catch (error) {\n        console.error('[Sanitizer] Error in safeText:', error);\n        return fallback;\n    }\n}\n\n/**\n * Debug helper to check if an object contains code\n */\nexport function debugCheckForCode(obj, path = '') {\n    if (!obj || typeof obj !== 'object') return;\n\n    Object.keys(obj).forEach(key => {\n        const value = obj[key];\n        const currentPath = path ? `${path}.${key}` : key;\n\n        if (typeof value === 'string' && containsCode(value)) {\n            console.error(`[Sanitizer] Code found at ${currentPath}:`, value);\n        } else if (value && typeof value === 'object') {\n            debugCheckForCode(value, currentPath);\n        }\n    });\n}","// web/src/lib/stores/configuration.svelte.js\nimport ConfiguratorApiClient from '../api/client.js';\nimport { sanitizeObject, debugCheckForCode } from '../utils/sanitizer.js';\n\nclass ConfigurationStore {\n  constructor() {\n    // Core state\n    this.modelId = $state('');\n    this.model = $state(null);\n    this.configuration = $state(null);\n    this.selections = $state({});\n    this.validationResults = $state(null);\n    this.pricingData = $state(null);\n    this.availableOptions = $state([]);\n    this.constraints = $state([]);\n\n    // Model data - ensure arrays are initialized\n    this.groups = $state([]);\n    this.options = $state([]);\n    this.rules = $state([]);\n    this.pricingRules = $state([]);\n    this.volumeTiers = $state([]);\n\n    // Loading states\n    this.isLoading = $state(false);\n    this.isValidating = $state(false);\n    this.isPricing = $state(false);\n    this.isSaving = $state(false);\n\n    // Error handling\n    this.error = $state(null);\n    this.validationErrors = $state([]);\n\n    // Configuration management\n    this.configurationId = $state(null);\n    this.lastSaved = $state(null);\n    this.isDirty = $state(false);\n\n    // UI state\n    this.currentStep = $state(0);\n    this.expandedGroups = $state(new Set());\n\n    // API client\n    this.api = null;\n\n    // Internal\n    this._initialized = false;\n    this._debounceTimers = new Map();\n    this._modelLoaded = false;\n  }\n\n  // Initialize store\n  async initialize() {\n    if (this._initialized) return;\n    this._initialized = true;\n\n    console.log('🚀 ConfigurationStore initialized');\n\n    // Ensure arrays are initialized\n    if (!Array.isArray(this.groups)) this.groups = [];\n    if (!Array.isArray(this.options)) this.options = [];\n    if (!Array.isArray(this.rules)) this.rules = [];\n    if (!Array.isArray(this.pricingRules)) this.pricingRules = [];\n    if (!Array.isArray(this.volumeTiers)) this.volumeTiers = [];\n    if (!Array.isArray(this.availableOptions)) this.availableOptions = [];\n    if (!Array.isArray(this.validationErrors)) this.validationErrors = [];\n\n    // Setup effects for reactive updates\n    $effect(() => {\n      if (this.modelId && !this.api) {\n        this.api = new ConfiguratorApiClient(window.__API_BASE_URL__, {\n          modelId: this.modelId\n        });\n        this.loadModel();\n      }\n    });\n\n    // Auto-validate on selection changes\n    $effect(() => {\n      if (this.api && Object.keys(this.selections).length > 0) {\n        this._debounce('validate', () => this.validateSelections(), 500);\n      }\n    });\n\n    // Auto-calculate pricing after validation\n    $effect(() => {\n      if (this.api && this.isValid && Object.keys(this.selections).length > 0) {\n        this._debounce('pricing', () => this.calculatePricing(), 300);\n      }\n    });\n\n    // Track dirty state\n    $effect(() => {\n      if (this.configuration && Object.keys(this.selections).length > 0) {\n        this.isDirty = true;\n      }\n    });\n  }\n\n  // Computed values\n  get isValid() {\n    return !this.validationResults || this.validationResults.is_valid;\n  }\n\n  get hasViolations() {\n    return this.validationResults?.violations?.length > 0;\n  }\n\n  get totalPrice() {\n    return this.pricingData?.total_price || 0;\n  }\n\n  get basePrice() {\n    return this.pricingData?.base_price || 0;\n  }\n\n  get discounts() {\n    return this.pricingData?.discounts || [];\n  }\n\n  get selectedCount() {\n    return Object.values(this.selections).reduce((sum, qty) => sum + qty, 0);\n  }\n\n  // Safe getters for arrays\n  get safeGroups() {\n    return Array.isArray(this.groups) ? this.groups : [];\n  }\n\n  get safeOptions() {\n    return Array.isArray(this.options) ? this.options : [];\n  }\n\n  get safeRules() {\n    return Array.isArray(this.rules) ? this.rules : [];\n  }\n\n  get safePricingRules() {\n    return Array.isArray(this.pricingRules) ? this.pricingRules : [];\n  }\n\n  get safeVolumeTiers() {\n    return Array.isArray(this.volumeTiers) ? this.volumeTiers : [];\n  }\n\n  get progress() {\n    if (!this.model || !this._modelLoaded) return 0;\n    const groups = this.safeGroups;\n    if (groups.length === 0) return 0;\n\n    const requiredGroups = groups.filter(g => g && g.required).length;\n    if (requiredGroups === 0) return 100; // No required groups means complete\n\n    const selectedGroups = groups.filter(g => g && g.id && this.hasGroupSelection(g.id)).length;\n    return Math.round((selectedGroups / requiredGroups) * 100);\n  }\n\n  // Model Management\n  async loadModel() {\n    if (!this.api) return;\n\n    this.isLoading = true;\n    this.error = null;\n\n    try {\n      // Load model with all related data\n      const [model, groupsResponse, optionsResponse, rulesResponse, pricingRulesResponse] = await Promise.all([\n        this.api.getModel(),\n        this.api.getModelGroups(),\n        this.api.getModelOptions(),\n        this.api.getModelRules().catch(() => ({ data: [] })),\n        this.api.getModelPricingRules().catch(() => ({ data: [] }))\n      ]);\n\n      // Ensure we have the model data\n      this.model = model;\n\n      // Extract arrays from responses, handling different response formats\n      this.groups = Array.isArray(groupsResponse) ? groupsResponse :\n          (groupsResponse && typeof groupsResponse === 'object' && groupsResponse.data) ? groupsResponse.data :\n              (groupsResponse && typeof groupsResponse === 'object' && groupsResponse.groups) ? groupsResponse.groups :\n                  (model && model.option_groups && Array.isArray(model.option_groups)) ? model.option_groups :\n                      (model && model.groups && Array.isArray(model.groups)) ? model.groups :\n                          [];\n\n      this.options = Array.isArray(optionsResponse) ? optionsResponse :\n          (optionsResponse && typeof optionsResponse === 'object' && optionsResponse.data) ? optionsResponse.data :\n              (optionsResponse && typeof optionsResponse === 'object' && optionsResponse.options) ? optionsResponse.options :\n                  (model && model.options && Array.isArray(model.options)) ? model.options :\n                      [];\n\n      this.rules = Array.isArray(rulesResponse) ? rulesResponse :\n          (rulesResponse && typeof rulesResponse === 'object' && rulesResponse.data) ? rulesResponse.data :\n              (rulesResponse && typeof rulesResponse === 'object' && rulesResponse.rules) ? rulesResponse.rules :\n                  [];\n\n      this.pricingRules = Array.isArray(pricingRulesResponse) ? pricingRulesResponse :\n          (pricingRulesResponse && typeof pricingRulesResponse === 'object' && pricingRulesResponse.data) ? pricingRulesResponse.data :\n              (pricingRulesResponse && typeof pricingRulesResponse === 'object' && pricingRulesResponse.pricing_rules) ? pricingRulesResponse.pricing_rules :\n                  [];\n\n      // Clean up any function strings in descriptions\n      this.groups = this.groups.map(group => ({\n        ...group,\n        description: (typeof group.description === 'string' &&\n            (group.description.includes('=>') ||\n                group.description.includes('function') ||\n                group.description.includes('$props')))\n            ? '' : group.description\n      }));\n\n      this.options = this.options.map(option => ({\n        ...option,\n        description: (typeof option.description === 'string' &&\n            (option.description.includes('=>') ||\n                option.description.includes('function') ||\n                option.description.includes('$props')))\n            ? '' : option.description\n      }));\n\n      // Final safety check - ensure everything is an array\n      if (!Array.isArray(this.groups)) this.groups = [];\n      if (!Array.isArray(this.options)) this.options = [];\n      if (!Array.isArray(this.rules)) this.rules = [];\n      if (!Array.isArray(this.pricingRules)) this.pricingRules = [];\n\n      // If groups/options are empty, try to get them from the model itself\n      if (this.groups.length === 0 && model.option_groups) {\n        console.log('Using groups from model.option_groups');\n        this.groups = Array.isArray(model.option_groups) ? model.option_groups : [];\n      }\n      if (this.groups.length === 0 && model.groups) {\n        console.log('Using groups from model.groups');\n        this.groups = Array.isArray(model.groups) ? model.groups : [];\n      }\n\n      if (this.options.length === 0 && model.options) {\n        console.log('Using options from model.options');\n        this.options = Array.isArray(model.options) ? model.options : [];\n      }\n\n      // If we still don't have options but have groups, try to extract from groups\n      if (this.options.length === 0 && this.groups.length > 0) {\n        const extractedOptions = [];\n        this.groups.forEach(group => {\n          if (Array.isArray(group.options)) {\n            group.options.forEach(opt => {\n              extractedOptions.push({\n                ...opt,\n                group_id: group.id\n              });\n            });\n          }\n        });\n        if (extractedOptions.length > 0) {\n          console.log('Extracted options from groups:', extractedOptions.length);\n          this.options = extractedOptions;\n        }\n      }\n\n      // Log what we got for debugging\n      console.log('Model loaded:', {\n        model: model,\n        groups: this.groups,\n        options: this.options,\n        groupsCount: this.groups.length,\n        optionsCount: this.options.length\n      });\n\n      // Debug: Check for any function strings in the data\n      this.groups.forEach((group, index) => {\n        if (group.description && typeof group.description === 'string' &&\n            (group.description.includes('=>') || group.description.includes('function'))) {\n          console.warn(`Group ${index} (${group.name}) has function code in description:`, group.description);\n        }\n        if (group.name && typeof group.name === 'string' &&\n            (group.name.includes('=>') || group.name.includes('function'))) {\n          console.warn(`Group ${index} has function code in name:`, group.name);\n        }\n      });\n\n      this.options.forEach((option, index) => {\n        if (option.description && typeof option.description === 'string' &&\n            (option.description.includes('=>') || option.description.includes('function'))) {\n          console.warn(`Option ${index} (${option.name}) has function code in description:`, option.description);\n        }\n        if (option.name && typeof option.name === 'string' &&\n            (option.name.includes('=>') || option.name.includes('function'))) {\n          console.warn(`Option ${index} has function code in name:`, option.name);\n        }\n      });\n\n      // Load volume tiers\n      try {\n        const tiersResponse = await this.api.getVolumeTiers();\n        this.volumeTiers = Array.isArray(tiersResponse) ? tiersResponse :\n            (tiersResponse && typeof tiersResponse === 'object' && tiersResponse.data) ? tiersResponse.data :\n                (tiersResponse && typeof tiersResponse === 'object' && tiersResponse.tiers) ? tiersResponse.tiers :\n                    [];\n      } catch (e) {\n        console.warn('Volume tiers not available');\n        this.volumeTiers = [];\n      }\n\n      // Final check for volume tiers\n      if (!Array.isArray(this.volumeTiers)) this.volumeTiers = [];\n\n      // Create initial configuration\n      if (this.groups.length > 0 || this.options.length > 0) {\n        this._modelLoaded = true;\n        await this.createConfiguration();\n      } else {\n        console.warn('No groups or options loaded - skipping configuration creation');\n      }\n\n    } catch (error) {\n      this.error = error.message;\n      console.error('Failed to load model:', error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  // Configuration Management\n  async createConfiguration() {\n    if (!this.api || this.configuration) return;\n\n    try {\n      const config = await this.api.createConfiguration([]);\n      this.configuration = config;\n      this.configurationId = config.id;\n      console.log('Configuration created:', config.id);\n    } catch (error) {\n      this.error = error.message;\n      console.error('Failed to create configuration:', error);\n    }\n  }\n\n  async loadConfiguration(configId) {\n    if (!this.api) return;\n\n    this.isLoading = true;\n\n    try {\n      const config = await this.api.getConfiguration(configId);\n      this.configuration = config;\n      this.configurationId = config.id;\n\n      // Convert selections to object format\n      const selectionsObj = {};\n      config.selections?.forEach(sel => {\n        selectionsObj[sel.option_id] = sel.quantity;\n      });\n      this.selections = selectionsObj;\n\n      // Validate and price\n      await Promise.all([\n        this.validateConfiguration(),\n        this.calculatePricing()\n      ]);\n\n    } catch (error) {\n      this.error = error.message;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  async saveConfiguration() {\n    if (!this.api || !this.configurationId || !this.isDirty) return;\n\n    this.isSaving = true;\n\n    try {\n      await this.api.updateConfiguration(this.configurationId, {\n        selections: this.selections,\n        name: `Configuration ${new Date().toLocaleDateString()}`\n      });\n\n      this.lastSaved = new Date();\n      this.isDirty = false;\n\n    } catch (error) {\n      console.error('Failed to save configuration:', error);\n    } finally {\n      this.isSaving = false;\n    }\n  }\n\n  // Selection Management\n  async updateSelection(optionId, quantity) {\n    // Ensure we have data loaded\n    const options = this.safeOptions;\n    const groups = this.safeGroups;\n\n    if (options.length === 0) {\n      console.warn('Cannot update selection - options not loaded');\n      return;\n    }\n\n    const newSelections = { ...this.selections };\n\n    if (quantity > 0) {\n      newSelections[optionId] = quantity;\n    } else {\n      delete newSelections[optionId];\n    }\n\n    // Check group constraints\n    const option = options.find(o => o.id === optionId);\n    if (option) {\n      const group = groups.find(g => g.id === option.group_id);\n\n      if (group?.selection_type === 'single') {\n        // Clear other selections in the group\n        options\n            .filter(o => o.group_id === group.id && o.id !== optionId)\n            .forEach(o => delete newSelections[o.id]);\n      }\n\n      if (group?.max_selections) {\n        // Check max selections\n        const groupSelections = options\n            .filter(o => o.group_id === group.id && newSelections[o.id])\n            .length;\n\n        if (groupSelections > group.max_selections) {\n          this.error = `Maximum ${group.max_selections} selections allowed in ${group.name}`;\n          return;\n        }\n      }\n    }\n\n    this.selections = newSelections;\n\n    // Update backend\n    if (this.configurationId) {\n      try {\n        if (quantity > 0) {\n          await this.api.addSelections(this.configurationId, newSelections);\n        } else {\n          await this.api.removeSelection(this.configurationId, optionId);\n        }\n      } catch (error) {\n        this.error = error.message;\n      }\n    }\n  }\n\n  toggleOption(optionId) {\n    const currentQty = this.selections[optionId] || 0;\n    return this.updateSelection(optionId, currentQty > 0 ? 0 : 1);\n  }\n\n  // Validation\n  async validateSelections() {\n    if (!this.api || this.isValidating) return;\n\n    this.isValidating = true;\n    this.validationErrors = [];\n\n    try {\n      const result = await this.api.validateSelections(this.selections);\n      this.validationResults = result;\n\n      if (result.available_options) {\n        this.availableOptions = result.available_options;\n      }\n\n      if (result.violations) {\n        this.validationErrors = result.violations;\n      }\n\n    } catch (error) {\n      console.error('Validation failed:', error);\n    } finally {\n      this.isValidating = false;\n    }\n  }\n\n  async validateConfiguration() {\n    if (!this.api || !this.configurationId) return;\n\n    this.isValidating = true;\n\n    try {\n      const result = await this.api.validateConfiguration(this.configurationId);\n      this.validationResults = result;\n\n      if (result.available_options) {\n        this.availableOptions = result.available_options;\n      }\n\n    } catch (error) {\n      console.error('Configuration validation failed:', error);\n    } finally {\n      this.isValidating = false;\n    }\n  }\n\n  // Pricing\n  async calculatePricing(context = {}) {\n    if (!this.api || this.isPricing) return;\n\n    this.isPricing = true;\n\n    try {\n      const result = await this.api.calculatePrice(this.selections, context);\n      this.pricingData = result;\n    } catch (error) {\n      console.error('Pricing calculation failed:', error);\n    } finally {\n      this.isPricing = false;\n    }\n  }\n\n  // Helper Methods\n  hasGroupSelection(groupId) {\n    const options = this.safeOptions;\n    return options\n        .filter(o => o.group_id === groupId)\n        .some(o => this.selections[o.id] > 0);\n  }\n\n  getGroupSelections(groupId) {\n    const options = this.safeOptions;\n    return options\n        .filter(o => o.group_id === groupId && this.selections[o.id] > 0)\n        .map(o => ({ ...o, quantity: this.selections[o.id] }));\n  }\n\n  isOptionAvailable(optionId) {\n    if (!this.availableOptions.length) return true;\n    return this.availableOptions.includes(optionId);\n  }\n\n  isOptionSelected(optionId) {\n    return this.selections[optionId] > 0;\n  }\n\n  getOptionQuantity(optionId) {\n    return this.selections[optionId] || 0;\n  }\n\n  // Group UI Management\n  toggleGroup(groupId) {\n    const expanded = new Set(this.expandedGroups);\n    if (expanded.has(groupId)) {\n      expanded.delete(groupId);\n    } else {\n      expanded.add(groupId);\n    }\n    this.expandedGroups = expanded;\n  }\n\n  isGroupExpanded(groupId) {\n    return this.expandedGroups.has(groupId);\n  }\n\n  // Export configuration\n  exportConfiguration() {\n    const options = this.safeOptions;\n    const selectedOptions = Object.entries(this.selections)\n        .filter(([_, qty]) => qty > 0)\n        .map(([optionId, quantity]) => {\n          const option = options.find(o => o.id === optionId);\n          return {\n            option_id: optionId,\n            option_name: option?.name,\n            quantity,\n            unit_price: option?.price || 0,\n            total_price: (option?.price || 0) * quantity\n          };\n        });\n\n    return {\n      id: this.configurationId,\n      model_id: this.modelId,\n      model_name: this.model?.name,\n      selections: selectedOptions,\n      validation: {\n        is_valid: this.isValid,\n        violations: this.validationResults?.violations || []\n      },\n      pricing: {\n        base_price: this.basePrice,\n        total_price: this.totalPrice,\n        discounts: this.discounts,\n        breakdown: this.pricingData?.breakdown || []\n      },\n      metadata: {\n        created: this.configuration?.created_at,\n        updated: this.configuration?.updated_at,\n        saved: this.lastSaved\n      }\n    };\n  }\n\n  // Reset store\n  reset() {\n    this.selections = {};\n    this.validationResults = null;\n    this.pricingData = null;\n    this.configuration = null;\n    this.configurationId = null;\n    this.currentStep = 0;\n    this.isDirty = false;\n    this.error = null;\n    this.validationErrors = [];\n  }\n\n  // Utility method for debouncing\n  _debounce(key, fn, delay) {\n    clearTimeout(this._debounceTimers.get(key));\n    this._debounceTimers.set(key, setTimeout(fn, delay));\n  }\n\n  // Step navigation\n  canProceedToStep(step) {\n    switch (step) {\n      case 1: // Validate\n        return this.selectedCount > 0;\n      case 2: // Price\n        return this.isValid;\n      case 3: // Summary\n        return this.isValid && this.pricingData;\n      default:\n        return true;\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep < 3 && this.canProceedToStep(this.currentStep + 1)) {\n      this.currentStep++;\n    }\n  }\n\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n\n  goToStep(step) {\n    if (step >= 0 && step <= 3 && this.canProceedToStep(step)) {\n      this.currentStep = step;\n    }\n  }\n\n  // Model setter\n  setModelId(modelId) {\n    if (this.modelId !== modelId) {\n      this.reset();\n      this.modelId = modelId;\n    }\n  }\n}\n\n// Create singleton instance\nexport const configStore = new ConfigurationStore();\n\n// Export for component usage with safe getters\nexport default configStore;","<!-- web/src/lib/components/ProgressIndicator.svelte -->\n<script>\n  let {\n    steps = [],\n    currentStep = 0,\n    onStepClick = null,\n    canNavigate = false\n  } = $props();\n\n  function handleStepClick(index) {\n    if (canNavigate && onStepClick && index <= currentStep) {\n      onStepClick(index);\n    }\n  }\n\n  function getStepStatus(index) {\n    if (index < currentStep) return 'completed';\n    if (index === currentStep) return 'active';\n    return 'pending';\n  }\n</script>\n\n<div class=\"progress-indicator\">\n  <div class=\"progress-bar\">\n    <div\n            class=\"progress-fill\"\n            style=\"width: {currentStep === 0 ? 0 : (currentStep / (steps.length - 1)) * 100}%\"\n    ></div>\n  </div>\n\n  <div class=\"steps\">\n    {#each steps as step, index}\n      {@const status = getStepStatus(index)}\n      {@const isClickable = canNavigate && index <= currentStep}\n\n      <div\n              class=\"step {status}\"\n              class:clickable={isClickable}\n              onclick={() => handleStepClick(index)}\n              role={isClickable ? 'button' : 'presentation'}\n              tabindex={isClickable ? 0 : -1}\n              onkeydown={(e) => {\n          if (isClickable && (e.key === 'Enter' || e.key === ' ')) {\n            e.preventDefault();\n            handleStepClick(index);\n          }\n        }}\n      >\n        <div class=\"step-marker\">\n          {#if status === 'completed'}\n            <svg class=\"checkmark\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n              <path d=\"M13.854 3.646a.5.5 0 010 .708l-7 7a.5.5 0 01-.708 0l-3.5-3.5a.5.5 0 11.708-.708L6.5 10.293l6.646-6.647a.5.5 0 01.708 0z\"/>\n            </svg>\n          {:else}\n            <span class=\"step-number\">{index + 1}</span>\n          {/if}\n        </div>\n\n        <div class=\"step-content\">\n          <span class=\"step-icon\">{step.icon}</span>\n          <span class=\"step-label\">{step.label}</span>\n        </div>\n      </div>\n    {/each}\n  </div>\n</div>\n\n<style>\n  .progress-indicator {\n    position: relative;\n    padding: 2rem 0;\n  }\n\n  .progress-bar {\n    position: absolute;\n    top: 3rem;\n    left: 2rem;\n    right: 2rem;\n    height: 2px;\n    background: var(--border-color, #e5e7eb);\n    z-index: 0;\n  }\n\n  .progress-fill {\n    height: 100%;\n    background: var(--primary-color, #3b82f6);\n    transition: width 0.3s ease;\n  }\n\n  .steps {\n    display: flex;\n    justify-content: space-between;\n    position: relative;\n    z-index: 1;\n  }\n\n  .step {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n    flex: 1;\n    transition: all 0.2s;\n  }\n\n  .step.clickable {\n    cursor: pointer;\n  }\n\n  .step.clickable:hover .step-marker {\n    transform: scale(1.1);\n  }\n\n  .step-marker {\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--bg-primary, #ffffff);\n    border: 2px solid var(--border-color, #e5e7eb);\n    transition: all 0.2s;\n    font-weight: 600;\n  }\n\n  .step.active .step-marker {\n    border-color: var(--primary-color, #3b82f6);\n    color: var(--primary-color, #3b82f6);\n    box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.1);\n  }\n\n  .step.completed .step-marker {\n    background: var(--primary-color, #3b82f6);\n    border-color: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .checkmark {\n    width: 1rem;\n    height: 1rem;\n  }\n\n  .step-number {\n    font-size: 0.875rem;\n  }\n\n  .step-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.25rem;\n    text-align: center;\n  }\n\n  .step-icon {\n    font-size: 1.25rem;\n  }\n\n  .step-label {\n    font-size: 0.875rem;\n    font-weight: 500;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .step.active .step-label {\n    color: var(--primary-color, #3b82f6);\n  }\n\n  .step.completed .step-label {\n    color: var(--text-primary, #111827);\n  }\n\n  @media (max-width: 640px) {\n    .progress-bar {\n      left: 1rem;\n      right: 1rem;\n    }\n\n    .step-content {\n      display: none;\n    }\n\n    .step.active .step-content {\n      display: flex;\n    }\n  }\n</style>","<!-- web/src/lib/components/LoadingSpinner.svelte -->\n<script>\n  let {\n    size = 'medium',\n    message = '',\n    overlay = false,\n    color = 'primary'\n  } = $props();\n\n  let sizeClasses = $derived({\n    small: 'w-4 h-4 border-2',\n    medium: 'w-8 h-8 border-3',\n    large: 'w-12 h-12 border-4'\n  }[size] || 'w-8 h-8 border-3');\n\n  let colorClasses = $derived({\n    primary: 'border-blue-600 border-t-transparent',\n    white: 'border-white border-t-transparent',\n    gray: 'border-gray-600 border-t-transparent'\n  }[color] || 'border-blue-600 border-t-transparent');\n</script>\n\n{#if overlay}\n  <div class=\"loading-overlay\">\n    <div class=\"loading-content\">\n      <div class=\"spinner {sizeClasses} {colorClasses}\"></div>\n      {#if message}\n        <p class=\"loading-message\">{message}</p>\n      {/if}\n    </div>\n  </div>\n{:else}\n  <div class=\"loading-container\">\n    <div class=\"spinner {sizeClasses} {colorClasses}\"></div>\n    {#if message}\n      <p class=\"loading-message\">{message}</p>\n    {/if}\n  </div>\n{/if}\n\n<style>\n  .loading-overlay {\n    position: fixed;\n    inset: 0;\n    background: rgba(255, 255, 255, 0.9);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1000;\n  }\n\n  .loading-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    padding: 2rem;\n  }\n\n  .loading-content {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1rem;\n  }\n\n  .spinner {\n    border-style: solid;\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n\n  .loading-message {\n    margin: 0;\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n    text-align: center;\n  }\n\n  @keyframes spin {\n    to {\n      transform: rotate(360deg);\n    }\n  }\n\n  /* Border width utilities */\n  .border-2 {\n    border-width: 2px;\n  }\n\n  .border-3 {\n    border-width: 3px;\n  }\n\n  .border-4 {\n    border-width: 4px;\n  }\n\n  /* Size utilities */\n  .w-4 { width: 1rem; }\n  .h-4 { height: 1rem; }\n  .w-8 { width: 2rem; }\n  .h-8 { height: 2rem; }\n  .w-12 { width: 3rem; }\n  .h-12 { height: 3rem; }\n</style>","<!-- web/src/lib/components/ErrorBoundary.svelte -->\n<script>\n  import { onMount, onDestroy } from 'svelte';\n\n  let {\n    children,\n    fallback = null,\n    onError = null\n  } = $props();\n\n  let error = $state(null);\n  let hasError = $state(false);\n\n  function handleError(event) {\n    console.error('ErrorBoundary caught:', event.error);\n    error = event.error;\n    hasError = true;\n\n    if (onError) {\n      onError(event.error);\n    }\n\n    // Prevent the error from propagating\n    event.preventDefault();\n    event.stopPropagation();\n  }\n\n  function reset() {\n    error = null;\n    hasError = false;\n  }\n\n  onMount(() => {\n    // Listen for unhandled errors\n    window.addEventListener('error', handleError);\n    window.addEventListener('unhandledrejection', (event) => {\n      handleError({ error: event.reason });\n    });\n\n    return () => {\n      window.removeEventListener('error', handleError);\n      window.removeEventListener('unhandledrejection', handleError);\n    };\n  });\n</script>\n\n{#if hasError}\n  {#if fallback}\n    {@render fallback(error, reset)}\n  {:else}\n    <div class=\"error-boundary\">\n      <div class=\"error-content\">\n        <div class=\"error-icon\">⚠️</div>\n        <h2 class=\"error-title\">Something went wrong</h2>\n        <p class=\"error-message\">{error?.message || 'An unexpected error occurred'}</p>\n\n        {#if import.meta.env.DEV && error?.stack}\n          <details class=\"error-details\">\n            <summary>Error Details</summary>\n            <pre class=\"error-stack\">{error.stack}</pre>\n          </details>\n        {/if}\n\n        <div class=\"error-actions\">\n          <button class=\"btn btn-primary\" onclick={reset}>\n            Try Again\n          </button>\n          <button class=\"btn btn-secondary\" onclick={() => location.reload()}>\n            Reload Page\n          </button>\n        </div>\n      </div>\n    </div>\n  {/if}\n{:else}\n  {@render children()}\n{/if}\n\n<style>\n  .error-boundary {\n    min-height: 400px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    padding: 2rem;\n  }\n\n  .error-content {\n    max-width: 500px;\n    text-align: center;\n  }\n\n  .error-icon {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n  }\n\n  .error-title {\n    margin: 0 0 0.5rem;\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--text-primary, #111827);\n  }\n\n  .error-message {\n    margin: 0 0 1.5rem;\n    font-size: 1rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .error-details {\n    margin: 1rem 0;\n    text-align: left;\n    background: var(--bg-secondary, #f9fafb);\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 6px;\n    padding: 1rem;\n  }\n\n  .error-details summary {\n    cursor: pointer;\n    font-weight: 500;\n    color: var(--text-secondary, #6b7280);\n    font-size: 0.875rem;\n  }\n\n  .error-stack {\n    margin: 1rem 0 0;\n    padding: 1rem;\n    background: var(--bg-tertiary, #111827);\n    color: var(--text-code, #f3f4f6);\n    border-radius: 4px;\n    font-size: 0.75rem;\n    overflow-x: auto;\n    white-space: pre-wrap;\n    word-break: break-word;\n  }\n\n  .error-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n  }\n\n  .btn {\n    padding: 0.75rem 1.5rem;\n    border-radius: 6px;\n    border: none;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s;\n    font-size: 1rem;\n  }\n\n  .btn-primary {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .btn-primary:hover {\n    background: var(--primary-hover, #2563eb);\n  }\n\n  .btn-secondary {\n    background: var(--bg-secondary, #f3f4f6);\n    color: var(--text-primary, #111827);\n  }\n\n  .btn-secondary:hover {\n    background: var(--bg-tertiary, #e5e7eb);\n  }\n</style>","<!-- web/src/lib/components/SafeText.svelte -->\n<script>\n    import { sanitizeText } from '../utils/sanitizer.js';\n\n    let {\n        text = '',\n        fallback = '',\n        tag = 'span',\n        class: className = ''\n    } = $props();\n\n    // Ensure text is safe\n    let safeContent = $derived(sanitizeText(text, fallback));\n</script>\n\n{#if tag === 'p'}\n    <p class={className}>{safeContent}</p>\n{:else if tag === 'h1'}\n    <h1 class={className}>{safeContent}</h1>\n{:else if tag === 'h2'}\n    <h2 class={className}>{safeContent}</h2>\n{:else if tag === 'h3'}\n    <h3 class={className}>{safeContent}</h3>\n{:else if tag === 'h4'}\n    <h4 class={className}>{safeContent}</h4>\n{:else if tag === 'div'}\n    <div class={className}>{safeContent}</div>\n{:else}\n    <span class={className}>{safeContent}</span>\n{/if}","<!-- web/src/lib/components/OptionCard.svelte -->\n<script>\n  import SafeText from './SafeText.svelte';\n  import { sanitizeText } from '../utils/sanitizer.js';\n\n  let {\n    option,\n    selected = false,\n    quantity = 0,\n    disabled = false,\n    available = true,\n    selectionType = 'multiple',\n    maxQuantity = 10,\n    onChange\n  } = $props();\n\n  function handleToggle() {\n    if (disabled) return;\n\n    if (selectionType === 'single') {\n      onChange(selected ? 0 : 1);\n    } else {\n      onChange(selected ? 0 : 1);\n    }\n  }\n\n  function handleQuantityChange(newQuantity) {\n    if (disabled) return;\n\n    const qty = Math.max(0, Math.min(newQuantity, maxQuantity));\n    onChange(qty);\n  }\n\n  function increment() {\n    handleQuantityChange(quantity + 1);\n  }\n\n  function decrement() {\n    handleQuantityChange(quantity - 1);\n  }\n\n  let formattedPrice = $derived(\n          option.price ? `$${option.price.toFixed(2)}` : 'Included'\n  );\n\n  let totalPrice = $derived(\n          quantity > 1 && option.price ? `$${(option.price * quantity).toFixed(2)} total` : ''\n  );\n</script>\n\n<div\n        class=\"option-card\"\n        class:selected\n        class:disabled\n        class:unavailable={!available}\n        role=\"button\"\n        tabindex={disabled ? -1 : 0}\n        onclick={selectionType === 'single' ? handleToggle : undefined}\n        onkeydown={(e) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleToggle();\n    }\n  }}\n>\n  <div class=\"option-header\">\n    {#if selectionType === 'single'}\n      <input\n              type=\"radio\"\n              checked={selected}\n              {disabled}\n              onchange={handleToggle}\n              onclick={(e) => e.stopPropagation()}\n              class=\"radio-input\"\n      />\n    {:else}\n      <input\n              type=\"checkbox\"\n              checked={selected}\n              {disabled}\n              onchange={handleToggle}\n              onclick={(e) => e.stopPropagation()}\n              class=\"checkbox-input\"\n      />\n    {/if}\n\n    <div class=\"option-info\">\n      <SafeText text={option.name} fallback=\"Unnamed Option\" tag=\"h4\" class=\"option-name\" />\n      {#if option.sku}\n        <span class=\"option-sku\">SKU: {option.sku}</span>\n      {/if}\n    </div>\n\n    <div class=\"option-price\">\n      <span class=\"price\">{formattedPrice}</span>\n      {#if totalPrice}\n        <span class=\"total-price\">{totalPrice}</span>\n      {/if}\n    </div>\n  </div>\n\n  {#if option.description}\n    <SafeText text={option.description} tag=\"p\" class=\"option-description\" />\n  {/if}\n\n  {#if option.features && option.features.length > 0}\n    <ul class=\"option-features\">\n      {#each option.features as feature}\n        <li><SafeText text={feature} tag=\"span\" /></li>\n      {/each}\n    </ul>\n  {/if}\n\n  {#if selectionType === 'multiple' && selected}\n    <div class=\"quantity-controls\" onclick={(e) => e.stopPropagation()}>\n      <label class=\"quantity-label\">Quantity:</label>\n      <div class=\"quantity-input\">\n        <button\n                class=\"qty-btn\"\n                onclick={decrement}\n                disabled={disabled || quantity <= 1}\n                aria-label=\"Decrease quantity\"\n        >\n          −\n        </button>\n        <input\n                type=\"number\"\n                value={quantity}\n                min=\"1\"\n                max={maxQuantity}\n                {disabled}\n                onchange={(e) => handleQuantityChange(parseInt(e.target.value) || 0)}\n                onclick={(e) => e.stopPropagation()}\n                class=\"qty-value\"\n        />\n        <button\n                class=\"qty-btn\"\n                onclick={increment}\n                disabled={disabled || quantity >= maxQuantity}\n                aria-label=\"Increase quantity\"\n        >\n          +\n        </button>\n      </div>\n    </div>\n  {/if}\n\n  {#if !available && !disabled}\n    <div class=\"unavailable-message\">\n      Not available with current selections\n    </div>\n  {/if}\n\n  {#if disabled && available}\n    <div class=\"disabled-message\">\n      Maximum selections reached for this group\n    </div>\n  {/if}\n</div>\n\n<style>\n  .option-card {\n    background: var(--bg-primary, #ffffff);\n    border: 2px solid var(--border-color, #e5e7eb);\n    border-radius: 8px;\n    padding: 1rem;\n    transition: all 0.2s;\n    cursor: pointer;\n    position: relative;\n  }\n\n  .option-card:hover:not(.disabled):not(.unavailable) {\n    border-color: var(--primary-color, #3b82f6);\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  }\n\n  .option-card.selected {\n    border-color: var(--primary-color, #3b82f6);\n    background: var(--primary-bg, #eff6ff);\n  }\n\n  .option-card.disabled,\n  .option-card.unavailable {\n    opacity: 0.6;\n    cursor: not-allowed;\n  }\n\n  .option-header {\n    display: flex;\n    align-items: flex-start;\n    gap: 0.75rem;\n  }\n\n  .radio-input,\n  .checkbox-input {\n    margin-top: 0.125rem;\n    flex-shrink: 0;\n    width: 1.25rem;\n    height: 1.25rem;\n    cursor: pointer;\n  }\n\n  .radio-input:disabled,\n  .checkbox-input:disabled {\n    cursor: not-allowed;\n  }\n\n  .option-info {\n    flex: 1;\n  }\n\n  .option-name {\n    margin: 0;\n    font-size: 1rem;\n    font-weight: 600;\n    color: var(--text-primary, #111827);\n  }\n\n  .option-sku {\n    font-size: 0.75rem;\n    color: var(--text-tertiary, #9ca3af);\n    margin-top: 0.125rem;\n    display: inline-block;\n  }\n\n  .option-price {\n    text-align: right;\n    display: flex;\n    flex-direction: column;\n    align-items: flex-end;\n    gap: 0.125rem;\n  }\n\n  .price {\n    font-size: 1.125rem;\n    font-weight: 600;\n    color: var(--primary-color, #3b82f6);\n  }\n\n  .total-price {\n    font-size: 0.75rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .option-description {\n    margin: 0.75rem 0 0 2rem;\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n    line-height: 1.5;\n  }\n\n  .option-features {\n    margin: 0.75rem 0 0 2rem;\n    padding: 0;\n    list-style: none;\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .option-features li {\n    position: relative;\n    padding-left: 1.25rem;\n    margin-bottom: 0.25rem;\n  }\n\n  .option-features li::before {\n    content: \"✓\";\n    position: absolute;\n    left: 0;\n    color: var(--success-color, #10b981);\n    font-weight: 600;\n  }\n\n  .quantity-controls {\n    margin-top: 0.75rem;\n    margin-left: 2rem;\n    display: flex;\n    align-items: center;\n    gap: 0.75rem;\n  }\n\n  .quantity-label {\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .quantity-input {\n    display: flex;\n    align-items: center;\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 6px;\n    overflow: hidden;\n  }\n\n  .qty-btn {\n    background: var(--bg-secondary, #f9fafb);\n    border: none;\n    padding: 0.25rem 0.75rem;\n    cursor: pointer;\n    font-size: 1.125rem;\n    color: var(--text-primary, #111827);\n    transition: background 0.2s;\n  }\n\n  .qty-btn:hover:not(:disabled) {\n    background: var(--bg-tertiary, #e5e7eb);\n  }\n\n  .qty-btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .qty-value {\n    border: none;\n    background: var(--bg-primary, #ffffff);\n    text-align: center;\n    width: 3rem;\n    padding: 0.25rem;\n    font-size: 0.875rem;\n    color: var(--text-primary, #111827);\n  }\n\n  .qty-value:focus {\n    outline: none;\n  }\n\n  .unavailable-message,\n  .disabled-message {\n    margin-top: 0.75rem;\n    margin-left: 2rem;\n    padding: 0.5rem 0.75rem;\n    background: var(--warning-bg, #fef3c7);\n    color: var(--warning-text, #92400e);\n    border-radius: 4px;\n    font-size: 0.75rem;\n    font-weight: 500;\n  }\n\n  @media (max-width: 640px) {\n    .option-card {\n      padding: 0.875rem;\n    }\n\n    .option-description,\n    .option-features,\n    .quantity-controls,\n    .unavailable-message,\n    .disabled-message {\n      margin-left: 0;\n    }\n  }\n</style>","<!-- web/src/lib/components/OptionGroup.svelte -->\n<script>\n    import { onMount } from 'svelte';\n    import OptionCard from './OptionCard.svelte';\n    import { sanitizeText } from '../utils/sanitizer.js';\n\n    let {\n        group,\n        options = [],\n        selections = {},\n        availableOptions = [],\n        onSelectionChange,\n        expanded = true,\n        onToggle\n    } = $props();\n\n    // Computed values\n    let selectedCount = $derived(\n        Array.isArray(options) ? options.filter(opt => selections[opt.id] > 0).length : 0\n    );\n\n    let totalQuantity = $derived(\n        Array.isArray(options) ? options.reduce((sum, opt) => sum + (selections[opt.id] || 0), 0) : 0\n    );\n\n    let isComplete = $derived(\n        group.required\n            ? (group.min_selections ? selectedCount >= group.min_selections : selectedCount > 0)\n            : true\n    );\n\n    // Use a function instead of $derived for selection text\n    function getSelectionText() {\n        if (group.selection_type === 'single') {\n            return 'Select one';\n        } else if (group.selection_type === 'multiple') {\n            if (group.min_selections && group.max_selections) {\n                if (group.min_selections === group.max_selections) {\n                    return `Select exactly ${group.min_selections}`;\n                }\n                return `Select ${group.min_selections}-${group.max_selections}`;\n            } else if (group.min_selections) {\n                return `Select at least ${group.min_selections}`;\n            } else if (group.max_selections) {\n                return `Select up to ${group.max_selections}`;\n            }\n            return 'Select multiple';\n        }\n        return '';\n    }\n\n    // Update selection text when group changes\n    let selectionText = $state(getSelectionText());\n\n    // Debug logging on mount\n    onMount(() => {\n        const text = getSelectionText();\n        if (text.includes('=>') || text.includes('function')) {\n            console.error('[OptionGroup] Selection text contains code!', {\n                text,\n                group\n            });\n        }\n    });\n\n    function handleOptionChange(optionId, quantity) {\n        // For single selection groups, ensure only one is selected\n        if (group.selection_type === 'single' && quantity > 0 && Array.isArray(options)) {\n            // Clear other selections in this group\n            options.forEach(opt => {\n                if (opt.id !== optionId && selections[opt.id] > 0) {\n                    onSelectionChange(opt.id, 0);\n                }\n            });\n        }\n\n        // Check max selections\n        if (group.max_selections && quantity > 0 && Array.isArray(options)) {\n            const currentSelections = options.filter(opt =>\n                opt.id !== optionId && selections[opt.id] > 0\n            ).length;\n\n            if (currentSelections >= group.max_selections) {\n                // Can't add more\n                return;\n            }\n        }\n\n        onSelectionChange(optionId, quantity);\n    }\n\n    function isOptionDisabled(option) {\n        // Check if option is available based on constraints\n        if (availableOptions.length > 0 && !availableOptions.includes(option.id)) {\n            return true;\n        }\n\n        // Check group max selections\n        if (group.max_selections && !selections[option.id]) {\n            const currentSelections = options.filter(opt => selections[opt.id] > 0).length;\n            if (currentSelections >= group.max_selections) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    function getOptionState(option) {\n        const isSelected = selections[option.id] > 0;\n        const isAvailable = availableOptions.length === 0 || availableOptions.includes(option.id);\n        const isDisabled = isOptionDisabled(option);\n\n        return {\n            selected: isSelected,\n            available: isAvailable,\n            disabled: isDisabled,\n            quantity: selections[option.id] || 0\n        };\n    }\n</script>\n\n<div class=\"option-group\" class:expanded class:required={group.required}>\n    <div class=\"group-header\" onclick={onToggle}>\n        <div class=\"group-info\">\n            <h3 class=\"group-name\">\n                {group.name || 'Unnamed Group'}\n                {#if group.required}\n                    <span class=\"required\">*</span>\n                {/if}\n            </h3>\n            {#if group.description && typeof group.description === 'string' &&\n            !group.description.includes('=>') &&\n            !group.description.includes('function') &&\n            !group.description.includes('$props')}\n                <p class=\"group-description\">{group.description}</p>\n            {/if}\n        </div>\n\n        <div class=\"group-meta\">\n            <div class=\"selection-info\">\n        <span class=\"selection-type\">\n          {sanitizeText(selectionText, group.selection_type === 'single' ? 'Select one' : 'Select multiple')}\n        </span>\n                {#if selectedCount > 0}\n          <span class=\"selection-count\">\n            {selectedCount} selected\n              {#if totalQuantity > selectedCount}\n              ({totalQuantity} total)\n            {/if}\n          </span>\n                {/if}\n            </div>\n\n            <button class=\"expand-toggle\" aria-label={expanded ? 'Collapse' : 'Expand'}>\n                <svg class=\"icon\" class:rotated={!expanded} width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                    <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n            </button>\n        </div>\n    </div>\n\n    {#if expanded}\n        <div class=\"group-content\">\n            {#if Array.isArray(options) && options.length > 0}\n                <div class=\"options-grid\" data-selection-type={group.selection_type}>\n                    {#each options as option (option.id)}\n                        {@const state = getOptionState(option)}\n                        <OptionCard\n                                {option}\n                                selected={state.selected}\n                                quantity={state.quantity}\n                                disabled={state.disabled}\n                                available={state.available}\n                                selectionType={group.selection_type}\n                                maxQuantity={option.max_quantity || 10}\n                                onChange={(quantity) => handleOptionChange(option.id, quantity)}\n                        />\n                    {/each}\n                </div>\n            {:else}\n                <div class=\"no-options\">\n                    <p>No options available in this group.</p>\n                </div>\n            {/if}\n        </div>\n    {/if}\n</div>\n\n<style>\n    .option-group {\n        background: var(--bg-primary, #ffffff);\n        border: 1px solid var(--border-color, #e5e7eb);\n        border-radius: 8px;\n        overflow: hidden;\n        transition: all 0.2s;\n    }\n\n    .option-group.required {\n        border-color: var(--primary-color, #3b82f6);\n    }\n\n    .group-header {\n        padding: 1.25rem;\n        cursor: pointer;\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        background: var(--bg-secondary, #f9fafb);\n        transition: background 0.2s;\n    }\n\n    .group-header:hover {\n        background: var(--bg-tertiary, #f3f4f6);\n    }\n\n    .group-info {\n        flex: 1;\n    }\n\n    .group-name {\n        margin: 0;\n        font-size: 1.125rem;\n        font-weight: 600;\n        color: var(--text-primary, #111827);\n        display: flex;\n        align-items: center;\n        gap: 0.25rem;\n    }\n\n    .required {\n        color: var(--error-color, #dc2626);\n    }\n\n    .group-description {\n        margin: 0.25rem 0 0;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .group-meta {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n    }\n\n    .selection-info {\n        display: flex;\n        flex-direction: column;\n        align-items: flex-end;\n        gap: 0.25rem;\n        font-size: 0.875rem;\n    }\n\n    .selection-type {\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .selection-count {\n        font-weight: 500;\n        color: var(--primary-color, #3b82f6);\n    }\n\n    .expand-toggle {\n        background: none;\n        border: none;\n        padding: 0.5rem;\n        cursor: pointer;\n        color: var(--text-secondary, #6b7280);\n        transition: transform 0.2s;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n    }\n\n    .icon {\n        transition: transform 0.2s;\n    }\n\n    .icon.rotated {\n        transform: rotate(-90deg);\n    }\n\n    .group-content {\n        padding: 1.25rem;\n        border-top: 1px solid var(--border-color, #e5e7eb);\n    }\n\n    .options-grid {\n        display: grid;\n        gap: 1rem;\n    }\n\n    .options-grid[data-selection-type=\"single\"] {\n        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n    }\n\n    .options-grid[data-selection-type=\"multiple\"] {\n        grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n    }\n\n    .no-options {\n        padding: 2rem;\n        text-align: center;\n        color: var(--text-secondary, #6b7280);\n        background: var(--bg-tertiary, #f9fafb);\n        border-radius: 6px;\n    }\n\n    @media (max-width: 640px) {\n        .options-grid {\n            grid-template-columns: 1fr !important;\n        }\n\n        .group-header {\n            flex-direction: column;\n            gap: 1rem;\n        }\n\n        .group-meta {\n            width: 100%;\n            justify-content: space-between;\n        }\n    }\n</style>","<!-- web/src/lib/components/PricingDisplay.svelte -->\n<script>\n  let {\n    pricingData,\n    selections = {},\n    options = [],\n    volumeTiers = [],\n    detailed = false\n  } = $props();\n\n  let showBreakdown = $state(detailed);\n  let showDiscounts = $state(true);\n\n  // Get option details for pricing display\n  function getOption(optionId) {\n    if (!Array.isArray(options)) return null;\n    return options.find(o => o.id === optionId);\n  }\n\n  // Format currency\n  function formatPrice(amount) {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(amount || 0);\n  }\n\n  // Calculate savings\n  let totalSavings = $derived(() => {\n    if (!pricingData?.discounts) return 0;\n    return pricingData.discounts.reduce((sum, d) => sum + (d.amount || 0), 0);\n  });\n\n  let savingsPercent = $derived(() => {\n    if (!pricingData || !totalSavings) return 0;\n    const subtotal = pricingData.base_price + (pricingData.options_total || 0);\n    if (subtotal === 0) return 0;\n    return Math.round((totalSavings / subtotal) * 100);\n  });\n\n  // Group selections by option group\n  let groupedSelections = $derived(() => {\n    const groups = new Map();\n\n    Object.entries(selections).forEach(([optionId, quantity]) => {\n      if (quantity <= 0) return;\n\n      const option = getOption(optionId);\n      if (!option) return;\n\n      const groupId = option.group_id || 'other';\n      if (!groups.has(groupId)) {\n        groups.set(groupId, []);\n      }\n\n      groups.get(groupId).push({\n        option,\n        quantity,\n        lineTotal: (option.price || 0) * quantity\n      });\n    });\n\n    return Array.from(groups.entries());\n  });\n</script>\n\n<div class=\"pricing-display\" class:detailed>\n  {#if !pricingData}\n    <div class=\"pricing-empty\">\n      <p>Add options to see pricing</p>\n    </div>\n  {:else}\n    <!-- Summary Section -->\n    <div class=\"pricing-summary\">\n      <div class=\"summary-row total\">\n        <span class=\"label\">Total Price</span>\n        <span class=\"amount\">{formatPrice(pricingData.total_price)}</span>\n      </div>\n\n      {#if totalSavings > 0}\n        <div class=\"summary-row savings\">\n          <span class=\"label\">Total Savings</span>\n          <span class=\"amount\">-{formatPrice(totalSavings)} ({savingsPercent}%)</span>\n        </div>\n      {/if}\n\n      {#if detailed}\n        <button\n                class=\"toggle-btn\"\n                onclick={() => showBreakdown = !showBreakdown}\n        >\n          {showBreakdown ? 'Hide' : 'Show'} Breakdown\n          <svg class=\"chevron\" class:rotated={showBreakdown} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n            <path d=\"M4.646 6.646a.5.5 0 01.708 0L8 9.293l2.646-2.647a.5.5 0 01.708.708l-3 3a.5.5 0 01-.708 0l-3-3a.5.5 0 010-.708z\"/>\n          </svg>\n        </button>\n      {/if}\n    </div>\n\n    {#if showBreakdown}\n      <!-- Base Price -->\n      <div class=\"pricing-section\">\n        <h4 class=\"section-title\">Base Configuration</h4>\n        <div class=\"line-item\">\n          <span class=\"item-name\">Base Model Price</span>\n          <span class=\"item-price\">{formatPrice(pricingData.base_price)}</span>\n        </div>\n      </div>\n\n      <!-- Selected Options -->\n      {#if groupedSelections.length > 0}\n        <div class=\"pricing-section\">\n          <h4 class=\"section-title\">Selected Options</h4>\n          {#each groupedSelections as [groupId, items]}\n            <div class=\"option-group\">\n              {#each items as { option, quantity, lineTotal }}\n                <div class=\"line-item\">\n                  <div class=\"item-details\">\n                    <span class=\"item-name\">{option.name}</span>\n                    {#if quantity > 1}\n                      <span class=\"item-quantity\">×{quantity} @ {formatPrice(option.price)} each</span>\n                    {/if}\n                  </div>\n                  <span class=\"item-price\">{formatPrice(lineTotal)}</span>\n                </div>\n              {/each}\n            </div>\n          {/each}\n\n          <div class=\"line-item subtotal\">\n            <span class=\"item-name\">Options Subtotal</span>\n            <span class=\"item-price\">{formatPrice(pricingData.options_total || 0)}</span>\n          </div>\n        </div>\n      {/if}\n\n      <!-- Discounts -->\n      {#if pricingData.discounts?.length > 0}\n        <div class=\"pricing-section\">\n          <h4 class=\"section-title\">\n            Discounts Applied\n            <button\n                    class=\"toggle-discounts\"\n                    onclick={() => showDiscounts = !showDiscounts}\n            >\n              {showDiscounts ? 'Hide' : 'Show'}\n            </button>\n          </h4>\n\n          {#if showDiscounts}\n            {#each pricingData.discounts as discount}\n              <div class=\"line-item discount\">\n                <div class=\"item-details\">\n                  <span class=\"item-name\">{discount.name}</span>\n                  {#if discount.description}\n                    <span class=\"item-description\">{discount.description}</span>\n                  {/if}\n                </div>\n                <span class=\"item-price discount-amount\">-{formatPrice(discount.amount)}</span>\n              </div>\n            {/each}\n          {/if}\n        </div>\n      {/if}\n\n      <!-- Volume Tiers -->\n      {#if volumeTiers.length > 0 && detailed}\n        <div class=\"pricing-section\">\n          <h4 class=\"section-title\">Volume Pricing Tiers</h4>\n          <div class=\"volume-tiers\">\n            {#each volumeTiers as tier}\n              {@const isActive = pricingData.active_tier?.id === tier.id}\n              <div class=\"tier-item\" class:active={isActive}>\n                <div class=\"tier-range\">\n                  {tier.min_quantity}\n                  {#if tier.max_quantity}\n                    - {tier.max_quantity}\n                  {:else}\n                    +\n                  {/if}\n                  units\n                </div>\n                <div class=\"tier-discount\">\n                  {tier.discount_percent}% off\n                  {#if isActive}\n                    <span class=\"active-badge\">Active</span>\n                  {/if}\n                </div>\n              </div>\n            {/each}\n          </div>\n        </div>\n      {/if}\n\n      <!-- Price Breakdown -->\n      {#if pricingData.breakdown && detailed}\n        <div class=\"pricing-section\">\n          <h4 class=\"section-title\">Detailed Breakdown</h4>\n          <div class=\"breakdown-items\">\n            {#each pricingData.breakdown as item}\n              <div class=\"line-item small\">\n                <span class=\"item-name\">{item.name}</span>\n                <span class=\"item-price\">{formatPrice(item.amount)}</span>\n              </div>\n            {/each}\n          </div>\n        </div>\n      {/if}\n    {/if}\n\n    <!-- Final Total -->\n    <div class=\"pricing-footer\">\n      <div class=\"final-total\">\n        <span class=\"label\">Total</span>\n        <span class=\"amount\">{formatPrice(pricingData.total_price)}</span>\n      </div>\n\n      {#if pricingData.currency && pricingData.currency !== 'USD'}\n        <div class=\"currency-note\">\n          Prices shown in {pricingData.currency}\n        </div>\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .pricing-display {\n    background: var(--bg-primary, #ffffff);\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 8px;\n    overflow: hidden;\n  }\n\n  .pricing-display.detailed {\n    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\n  }\n\n  .pricing-empty {\n    padding: 3rem;\n    text-align: center;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .pricing-summary {\n    padding: 1.5rem;\n    background: var(--bg-secondary, #f9fafb);\n    border-bottom: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .summary-row {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 0.75rem;\n  }\n\n  .summary-row:last-child {\n    margin-bottom: 0;\n  }\n\n  .summary-row.total {\n    font-size: 1.25rem;\n    font-weight: 700;\n    color: var(--text-primary, #111827);\n  }\n\n  .summary-row.savings {\n    color: var(--success-color, #10b981);\n    font-weight: 600;\n  }\n\n  .toggle-btn {\n    margin-top: 1rem;\n    padding: 0.5rem 1rem;\n    width: 100%;\n    background: var(--bg-primary, #ffffff);\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 6px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    transition: all 0.2s;\n  }\n\n  .toggle-btn:hover {\n    background: var(--bg-tertiary, #f3f4f6);\n  }\n\n  .chevron {\n    transition: transform 0.2s;\n  }\n\n  .chevron.rotated {\n    transform: rotate(180deg);\n  }\n\n  .pricing-section {\n    padding: 1.25rem 1.5rem;\n    border-bottom: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .pricing-section:last-of-type {\n    border-bottom: none;\n  }\n\n  .section-title {\n    margin: 0 0 1rem;\n    font-size: 0.875rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    color: var(--text-secondary, #6b7280);\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .toggle-discounts {\n    font-size: 0.75rem;\n    color: var(--primary-color, #3b82f6);\n    background: none;\n    border: none;\n    cursor: pointer;\n    text-transform: none;\n  }\n\n  .line-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n    margin-bottom: 0.75rem;\n    font-size: 0.875rem;\n  }\n\n  .line-item:last-child {\n    margin-bottom: 0;\n  }\n\n  .line-item.subtotal {\n    padding-top: 0.75rem;\n    border-top: 1px solid var(--border-color, #e5e7eb);\n    font-weight: 600;\n  }\n\n  .line-item.discount {\n    color: var(--success-color, #10b981);\n  }\n\n  .line-item.small {\n    font-size: 0.75rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .item-details {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 0.125rem;\n  }\n\n  .item-name {\n    color: var(--text-primary, #111827);\n  }\n\n  .item-quantity,\n  .item-description {\n    font-size: 0.75rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .item-price {\n    font-weight: 500;\n    white-space: nowrap;\n    margin-left: 1rem;\n  }\n\n  .discount-amount {\n    color: var(--success-color, #10b981);\n  }\n\n  .option-group {\n    margin-bottom: 1rem;\n    padding-bottom: 1rem;\n    border-bottom: 1px dashed var(--border-color, #e5e7eb);\n  }\n\n  .option-group:last-child {\n    margin-bottom: 0;\n    padding-bottom: 0;\n    border-bottom: none;\n  }\n\n  .volume-tiers {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n    gap: 0.75rem;\n  }\n\n  .tier-item {\n    padding: 0.75rem;\n    background: var(--bg-tertiary, #f9fafb);\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 6px;\n    text-align: center;\n    transition: all 0.2s;\n  }\n\n  .tier-item.active {\n    background: var(--primary-bg, #eff6ff);\n    border-color: var(--primary-color, #3b82f6);\n  }\n\n  .tier-range {\n    font-size: 0.875rem;\n    font-weight: 600;\n    color: var(--text-primary, #111827);\n    margin-bottom: 0.25rem;\n  }\n\n  .tier-discount {\n    font-size: 0.75rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .active-badge {\n    display: inline-block;\n    padding: 0.125rem 0.5rem;\n    background: var(--primary-color, #3b82f6);\n    color: white;\n    border-radius: 999px;\n    font-size: 0.625rem;\n    font-weight: 600;\n    margin-left: 0.25rem;\n  }\n\n  .breakdown-items {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .pricing-footer {\n    padding: 1.5rem;\n    background: var(--bg-tertiary, #f3f4f6);\n  }\n\n  .final-total {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    font-size: 1.5rem;\n    font-weight: 700;\n    color: var(--text-primary, #111827);\n  }\n\n  .currency-note {\n    margin-top: 0.5rem;\n    font-size: 0.75rem;\n    color: var(--text-secondary, #6b7280);\n    text-align: right;\n  }\n\n  @media (max-width: 640px) {\n    .pricing-section {\n      padding: 1rem;\n    }\n\n    .volume-tiers {\n      grid-template-columns: 1fr;\n    }\n  }\n</style>","<!-- web/src/lib/components/ValidationDisplay.svelte -->\n<script>\n    let {\n        validationResults,\n        compact = false,\n        onFix\n    } = $props();\n\n    let expandedViolations = $state(new Set());\n    let filterSeverity = $state('all');\n\n    let violations = $derived(validationResults?.violations || []);\n\n    let filteredViolations = $derived(() => {\n        if (filterSeverity === 'all') return violations;\n        return violations.filter(v => v.severity === filterSeverity);\n    });\n\n    let violationCounts = $derived(() => {\n        const counts = { critical: 0, warning: 0, info: 0 };\n        violations.forEach(v => {\n            counts[v.severity || 'warning']++;\n        });\n        return counts;\n    });\n\n    function toggleViolation(id) {\n        const expanded = new Set(expandedViolations);\n        if (expanded.has(id)) {\n            expanded.delete(id);\n        } else {\n            expanded.add(id);\n        }\n        expandedViolations = expanded;\n    }\n\n    function getSeverityIcon(severity) {\n        switch (severity) {\n            case 'critical': return '🚫';\n            case 'warning': return '⚠️';\n            case 'info': return 'ℹ️';\n            default: return '⚠️';\n        }\n    }\n\n    function getSeverityColor(severity) {\n        switch (severity) {\n            case 'critical': return 'error';\n            case 'warning': return 'warning';\n            case 'info': return 'info';\n            default: return 'warning';\n        }\n    }\n\n    function handleFix(violation) {\n        if (onFix && violation.suggestions?.length > 0) {\n            // Apply the first suggestion\n            onFix(violation.suggestions[0]);\n        }\n    }\n</script>\n\n<div class=\"validation-display\" class:compact>\n    {#if validationResults?.is_valid}\n        <div class=\"validation-success\">\n            <div class=\"success-icon\">✅</div>\n            <div class=\"success-content\">\n                <h3>Configuration Valid</h3>\n                <p>All constraints are satisfied. Your configuration is ready.</p>\n            </div>\n        </div>\n    {:else if violations.length > 0}\n        {#if !compact}\n            <div class=\"validation-header\">\n                <h3>Validation Issues ({violations.length})</h3>\n\n                <div class=\"severity-filters\">\n                    <button\n                            class=\"filter-btn\"\n                            class:active={filterSeverity === 'all'}\n                            onclick={() => filterSeverity = 'all'}\n                    >\n                        All ({violations.length})\n                    </button>\n                    {#if violationCounts.critical > 0}\n                        <button\n                                class=\"filter-btn critical\"\n                                class:active={filterSeverity === 'critical'}\n                                onclick={() => filterSeverity = 'critical'}\n                        >\n                            Critical ({violationCounts.critical})\n                        </button>\n                    {/if}\n                    {#if violationCounts.warning > 0}\n                        <button\n                                class=\"filter-btn warning\"\n                                class:active={filterSeverity === 'warning'}\n                                onclick={() => filterSeverity = 'warning'}\n                        >\n                            Warning ({violationCounts.warning})\n                        </button>\n                    {/if}\n                    {#if violationCounts.info > 0}\n                        <button\n                                class=\"filter-btn info\"\n                                class:active={filterSeverity === 'info'}\n                                onclick={() => filterSeverity = 'info'}\n                        >\n                            Info ({violationCounts.info})\n                        </button>\n                    {/if}\n                </div>\n            </div>\n        {/if}\n\n        <div class=\"violations-list\">\n            {#each filteredViolations as violation, index}\n                {@const isExpanded = expandedViolations.has(violation.rule_id || index)}\n                {@const severityColor = getSeverityColor(violation.severity)}\n\n                <div class=\"violation-item {severityColor}\" class:expanded={isExpanded}>\n                    <div\n                            class=\"violation-header\"\n                            onclick={() => toggleViolation(violation.rule_id || index)}\n                    >\n                        <div class=\"violation-icon\">\n                            {getSeverityIcon(violation.severity)}\n                        </div>\n\n                        <div class=\"violation-content\">\n                            <div class=\"violation-message\">{violation.message}</div>\n                            {#if violation.rule_name && !compact}\n                                <div class=\"violation-rule\">Rule: {violation.rule_name}</div>\n                            {/if}\n                        </div>\n\n                        <div class=\"violation-actions\">\n                            {#if violation.suggestions?.length > 0 && onFix}\n                                <button\n                                        class=\"fix-btn\"\n                                        onclick={(e) => {\n                    e.stopPropagation();\n                    handleFix(violation);\n                  }}\n                                        title=\"Apply suggested fix\"\n                                >\n                                    Fix\n                                </button>\n                            {/if}\n\n                            <button class=\"expand-btn\" aria-label={isExpanded ? 'Collapse' : 'Expand'}>\n                                <svg class=\"chevron\" class:rotated={isExpanded} width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                                    <path d=\"M4.646 6.646a.5.5 0 01.708 0L8 9.293l2.646-2.647a.5.5 0 01.708.708l-3 3a.5.5 0 01-.708 0l-3-3a.5.5 0 010-.708z\"/>\n                                </svg>\n                            </button>\n                        </div>\n                    </div>\n\n                    {#if isExpanded}\n                        <div class=\"violation-details\">\n                            {#if violation.details}\n                                <div class=\"detail-section\">\n                                    <h4>Details</h4>\n                                    <p>{violation.details}</p>\n                                </div>\n                            {/if}\n\n                            {#if violation.affected_options?.length > 0}\n                                <div class=\"detail-section\">\n                                    <h4>Affected Options</h4>\n                                    <ul class=\"affected-list\">\n                                        {#each violation.affected_options as option}\n                                            <li>{option.name || option.id}</li>\n                                        {/each}\n                                    </ul>\n                                </div>\n                            {/if}\n\n                            {#if violation.suggestions?.length > 0}\n                                <div class=\"detail-section\">\n                                    <h4>Suggested Actions</h4>\n                                    <div class=\"suggestions\">\n                                        {#each violation.suggestions as suggestion}\n                                            <div class=\"suggestion\">\n                        <span class=\"suggestion-text\">\n                          {#if suggestion.action === 'add'}\n                            Add: {suggestion.option_name || suggestion.option_id}\n                              {#if suggestion.quantity > 1}\n                                  (×{suggestion.quantity})\n                              {/if}\n                          {:else if suggestion.action === 'remove'}\n                            Remove: {suggestion.option_name || suggestion.option_id}\n                          {:else if suggestion.action === 'change'}\n                            Change: {suggestion.description}\n                          {:else}\n                            {suggestion.description}\n                          {/if}\n                        </span>\n                                                {#if onFix}\n                                                    <button\n                                                            class=\"apply-btn\"\n                                                            onclick={() => onFix(suggestion)}\n                                                    >\n                                                        Apply\n                                                    </button>\n                                                {/if}\n                                            </div>\n                                        {/each}\n                                    </div>\n                                </div>\n                            {/if}\n\n                            {#if violation.rule_expression && !compact}\n                                <div class=\"detail-section\">\n                                    <h4>Rule Expression</h4>\n                                    <code class=\"expression\">{violation.rule_expression}</code>\n                                </div>\n                            {/if}\n                        </div>\n                    {/if}\n                </div>\n            {/each}\n        </div>\n    {:else}\n        <div class=\"validation-empty\">\n            <p>Validating configuration...</p>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .validation-display {\n        background: var(--bg-primary, #ffffff);\n        border-radius: 8px;\n        overflow: hidden;\n    }\n\n    .validation-display.compact {\n        background: transparent;\n    }\n\n    .validation-success {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        padding: 1.5rem;\n        background: var(--success-bg, #d1fae5);\n        color: var(--success-text, #065f46);\n    }\n\n    .success-icon {\n        font-size: 2rem;\n    }\n\n    .success-content h3 {\n        margin: 0 0 0.25rem;\n        font-size: 1.125rem;\n        font-weight: 600;\n    }\n\n    .success-content p {\n        margin: 0;\n        font-size: 0.875rem;\n    }\n\n    .validation-header {\n        padding: 1rem 1.5rem;\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n    }\n\n    .validation-header h3 {\n        margin: 0;\n        font-size: 1.125rem;\n        font-weight: 600;\n    }\n\n    .severity-filters {\n        display: flex;\n        gap: 0.5rem;\n    }\n\n    .filter-btn {\n        padding: 0.25rem 0.75rem;\n        border-radius: 4px;\n        border: 1px solid var(--border-color, #e5e7eb);\n        background: var(--bg-primary, #ffffff);\n        font-size: 0.75rem;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .filter-btn:hover {\n        background: var(--bg-secondary, #f9fafb);\n    }\n\n    .filter-btn.active {\n        background: var(--primary-color, #3b82f6);\n        color: white;\n        border-color: var(--primary-color, #3b82f6);\n    }\n\n    .filter-btn.critical.active {\n        background: var(--error-color, #dc2626);\n        border-color: var(--error-color, #dc2626);\n    }\n\n    .filter-btn.warning.active {\n        background: var(--warning-color, #f59e0b);\n        border-color: var(--warning-color, #f59e0b);\n    }\n\n    .filter-btn.info.active {\n        background: var(--info-color, #3b82f6);\n        border-color: var(--info-color, #3b82f6);\n    }\n\n    .violations-list {\n        max-height: 600px;\n        overflow-y: auto;\n    }\n\n    .violation-item {\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n        transition: background 0.2s;\n    }\n\n    .violation-item:last-child {\n        border-bottom: none;\n    }\n\n    .violation-item.error {\n        border-left: 4px solid var(--error-color, #dc2626);\n    }\n\n    .violation-item.warning {\n        border-left: 4px solid var(--warning-color, #f59e0b);\n    }\n\n    .violation-item.info {\n        border-left: 4px solid var(--info-color, #3b82f6);\n    }\n\n    .violation-header {\n        display: flex;\n        align-items: flex-start;\n        gap: 0.75rem;\n        padding: 1rem 1.5rem;\n        cursor: pointer;\n        transition: background 0.2s;\n    }\n\n    .violation-header:hover {\n        background: var(--bg-secondary, #f9fafb);\n    }\n\n    .violation-icon {\n        font-size: 1.25rem;\n        flex-shrink: 0;\n    }\n\n    .violation-content {\n        flex: 1;\n    }\n\n    .violation-message {\n        font-size: 0.875rem;\n        font-weight: 500;\n        color: var(--text-primary, #111827);\n        line-height: 1.5;\n    }\n\n    .violation-rule {\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n        margin-top: 0.25rem;\n    }\n\n    .violation-actions {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n    }\n\n    .fix-btn,\n    .apply-btn {\n        padding: 0.25rem 0.75rem;\n        border-radius: 4px;\n        border: 1px solid var(--primary-color, #3b82f6);\n        background: var(--primary-color, #3b82f6);\n        color: white;\n        font-size: 0.75rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .fix-btn:hover,\n    .apply-btn:hover {\n        background: var(--primary-hover, #2563eb);\n    }\n\n    .expand-btn {\n        background: none;\n        border: none;\n        padding: 0.25rem;\n        cursor: pointer;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .chevron {\n        transition: transform 0.2s;\n    }\n\n    .chevron.rotated {\n        transform: rotate(180deg);\n    }\n\n    .violation-details {\n        padding: 0 1.5rem 1rem 3.5rem;\n        background: var(--bg-secondary, #f9fafb);\n    }\n\n    .detail-section {\n        margin-bottom: 1rem;\n    }\n\n    .detail-section:last-child {\n        margin-bottom: 0;\n    }\n\n    .detail-section h4 {\n        margin: 0 0 0.5rem;\n        font-size: 0.75rem;\n        font-weight: 600;\n        text-transform: uppercase;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .detail-section p {\n        margin: 0;\n        font-size: 0.875rem;\n        color: var(--text-primary, #111827);\n        line-height: 1.5;\n    }\n\n    .affected-list {\n        margin: 0;\n        padding: 0 0 0 1.25rem;\n        font-size: 0.875rem;\n        color: var(--text-primary, #111827);\n    }\n\n    .suggestions {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n\n    .suggestion {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0.5rem 0.75rem;\n        background: var(--bg-primary, #ffffff);\n        border: 1px solid var(--border-color, #e5e7eb);\n        border-radius: 4px;\n        font-size: 0.875rem;\n    }\n\n    .expression {\n        display: block;\n        padding: 0.5rem 0.75rem;\n        background: var(--bg-tertiary, #111827);\n        color: var(--text-code, #f3f4f6);\n        border-radius: 4px;\n        font-family: monospace;\n        font-size: 0.75rem;\n        overflow-x: auto;\n    }\n\n    .validation-empty {\n        padding: 2rem;\n        text-align: center;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    @media (max-width: 640px) {\n        .validation-header {\n            flex-direction: column;\n            gap: 1rem;\n            align-items: flex-start;\n        }\n\n        .severity-filters {\n            width: 100%;\n            overflow-x: auto;\n        }\n\n        .violation-details {\n            padding-left: 1.5rem;\n        }\n    }\n</style>","<!-- web/src/lib/components/ConfigurationSummary.svelte -->\n<script>\n    let {\n        configuration,\n        model,\n        onEdit\n    } = $props();\n\n    function formatDate(date) {\n        if (!date) return 'N/A';\n        return new Date(date).toLocaleString();\n    }\n\n    function formatPrice(amount) {\n        return new Intl.NumberFormat('en-US', {\n            style: 'currency',\n            currency: 'USD'\n        }).format(amount || 0);\n    }\n\n    // Group selections by group\n    let groupedSelections = $derived(() => {\n        const groups = new Map();\n\n        if (Array.isArray(configuration?.selections)) {\n            configuration.selections.forEach(sel => {\n                const groupName = sel.group_name || 'Other Options';\n                if (!groups.has(groupName)) {\n                    groups.set(groupName, []);\n                }\n                groups.get(groupName).push(sel);\n            });\n        }\n\n        return Array.from(groups.entries());\n    });\n</script>\n\n<div class=\"configuration-summary\">\n    <!-- Header -->\n    <div class=\"summary-header\">\n        <div class=\"header-info\">\n            <h3>Configuration Summary</h3>\n            <p class=\"config-id\">ID: {configuration?.id || 'Not saved'}</p>\n        </div>\n\n        <div class=\"header-status\">\n            {#if configuration?.validation?.is_valid}\n                <span class=\"status-badge valid\">✅ Valid</span>\n            {:else}\n                <span class=\"status-badge invalid\">⚠️ Issues</span>\n            {/if}\n        </div>\n    </div>\n\n    <!-- Model Information -->\n    <div class=\"summary-section\">\n        <h4 class=\"section-title\">Product Model</h4>\n        <div class=\"info-grid\">\n            <div class=\"info-item\">\n                <span class=\"label\">Model</span>\n                <span class=\"value\">{configuration?.model_name || model?.name || 'Unknown'}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Created</span>\n                <span class=\"value\">{formatDate(configuration?.metadata?.created)}</span>\n            </div>\n            <div class=\"info-item\">\n                <span class=\"label\">Last Updated</span>\n                <span class=\"value\">{formatDate(configuration?.metadata?.updated)}</span>\n            </div>\n        </div>\n    </div>\n\n    <!-- Selected Options -->\n    <div class=\"summary-section\">\n        <div class=\"section-header\">\n            <h4 class=\"section-title\">Selected Options ({configuration?.selections?.length || 0})</h4>\n            {#if onEdit}\n                <button class=\"edit-btn\" onclick={() => onEdit(0)}>\n                    Edit Selections\n                </button>\n            {/if}\n        </div>\n\n        {#if groupedSelections.length > 0}\n            <div class=\"selections-list\">\n                {#each groupedSelections as [groupName, selections]}\n                    <div class=\"selection-group\">\n                        <h5 class=\"group-name\">{groupName}</h5>\n                        <div class=\"group-items\">\n                            {#each selections as selection}\n                                <div class=\"selection-item\">\n                                    <div class=\"item-info\">\n                                        <span class=\"item-name\">{selection.option_name}</span>\n                                        {#if selection.quantity > 1}\n                                            <span class=\"item-quantity\">×{selection.quantity}</span>\n                                        {/if}\n                                    </div>\n                                    <span class=\"item-price\">{formatPrice(selection.total_price)}</span>\n                                </div>\n                            {/each}\n                        </div>\n                    </div>\n                {/each}\n            </div>\n        {:else}\n            <p class=\"empty-message\">No options selected</p>\n        {/if}\n    </div>\n\n    <!-- Validation Summary -->\n    {#if configuration?.validation?.violations?.length > 0}\n        <div class=\"summary-section\">\n            <div class=\"section-header\">\n                <h4 class=\"section-title validation-title\">\n                    Validation Issues ({configuration.validation.violations.length})\n                </h4>\n                {#if onEdit}\n                    <button class=\"edit-btn\" onclick={() => onEdit(1)}>\n                        Review Issues\n                    </button>\n                {/if}\n            </div>\n\n            <div class=\"violations-summary\">\n                {#each configuration.validation.violations.slice(0, 3) as violation}\n                    <div class=\"violation-summary\">\n            <span class=\"violation-icon\">\n              {violation.severity === 'critical' ? '🚫' : '⚠️'}\n            </span>\n                        <span class=\"violation-text\">{violation.message}</span>\n                    </div>\n                {/each}\n                {#if configuration.validation.violations.length > 3}\n                    <p class=\"more-violations\">\n                        +{configuration.validation.violations.length - 3} more issues\n                    </p>\n                {/if}\n            </div>\n        </div>\n    {/if}\n\n    <!-- Pricing Summary -->\n    <div class=\"summary-section\">\n        <div class=\"section-header\">\n            <h4 class=\"section-title\">Pricing Summary</h4>\n            {#if onEdit}\n                <button class=\"edit-btn\" onclick={() => onEdit(2)}>\n                    View Details\n                </button>\n            {/if}\n        </div>\n\n        <div class=\"pricing-summary\">\n            <div class=\"price-line\">\n                <span class=\"label\">Base Price</span>\n                <span class=\"value\">{formatPrice(configuration?.pricing?.base_price)}</span>\n            </div>\n\n            {#if configuration?.pricing?.discounts?.length > 0}\n                <div class=\"price-line discount\">\n                    <span class=\"label\">Discounts Applied</span>\n                    <span class=\"value\">\n            -{formatPrice(\n                        configuration.pricing.discounts.reduce((sum, d) => sum + d.amount, 0)\n                    )}\n          </span>\n                </div>\n            {/if}\n\n            <div class=\"price-line total\">\n                <span class=\"label\">Total Price</span>\n                <span class=\"value\">{formatPrice(configuration?.pricing?.total_price)}</span>\n            </div>\n        </div>\n    </div>\n\n    <!-- Actions -->\n    <div class=\"summary-actions\">\n        <button class=\"action-btn secondary\" onclick={() => window.print()}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                <path d=\"M5 3V1h6v2H5zM4 3H2.5A1.5 1.5 0 001 4.5V10h2V8h10v2h2V4.5A1.5 1.5 0 0013.5 3H12v2H4V3zm9 7h-2v4H5v-4H3v4.5A1.5 1.5 0 004.5 16h7a1.5 1.5 0 001.5-1.5V10z\"/>\n            </svg>\n            Print Summary\n        </button>\n\n        <button class=\"action-btn secondary\" onclick={() => {\n      const data = JSON.stringify(configuration, null, 2);\n      const blob = new Blob([data], { type: 'application/json' });\n      const url = URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `configuration-${configuration?.id || 'draft'}.json`;\n      a.click();\n      URL.revokeObjectURL(url);\n    }}>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"currentColor\">\n                <path d=\"M2 2a2 2 0 012-2h8a2 2 0 012 2v12a2 2 0 01-2 2H4a2 2 0 01-2-2V2zm10-1H4a1 1 0 00-1 1v12a1 1 0 001 1h8a1 1 0 001-1V2a1 1 0 00-1-1z\"/>\n                <path d=\"M8 3.5a.5.5 0 01.5.5v4.793l1.146-1.147a.5.5 0 01.708.708l-2 2a.5.5 0 01-.708 0l-2-2a.5.5 0 11.708-.708L7.5 8.793V4a.5.5 0 01.5-.5z\"/>\n            </svg>\n            Export Configuration\n        </button>\n    </div>\n</div>\n\n<style>\n    .configuration-summary {\n        background: var(--bg-primary, #ffffff);\n        border-radius: 8px;\n        overflow: hidden;\n    }\n\n    .summary-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: flex-start;\n        padding: 1.5rem;\n        background: var(--bg-secondary, #f9fafb);\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n    }\n\n    .header-info h3 {\n        margin: 0 0 0.25rem;\n        font-size: 1.25rem;\n        font-weight: 600;\n    }\n\n    .config-id {\n        margin: 0;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n        font-family: monospace;\n    }\n\n    .status-badge {\n        padding: 0.375rem 0.75rem;\n        border-radius: 999px;\n        font-size: 0.875rem;\n        font-weight: 500;\n    }\n\n    .status-badge.valid {\n        background: var(--success-bg, #d1fae5);\n        color: var(--success-text, #065f46);\n    }\n\n    .status-badge.invalid {\n        background: var(--warning-bg, #fef3c7);\n        color: var(--warning-text, #92400e);\n    }\n\n    .summary-section {\n        padding: 1.5rem;\n        border-bottom: 1px solid var(--border-color, #e5e7eb);\n    }\n\n    .summary-section:last-of-type {\n        border-bottom: none;\n    }\n\n    .section-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 1rem;\n    }\n\n    .section-title {\n        margin: 0;\n        font-size: 0.875rem;\n        font-weight: 600;\n        text-transform: uppercase;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .section-title.validation-title {\n        color: var(--warning-text, #92400e);\n    }\n\n    .edit-btn {\n        padding: 0.25rem 0.75rem;\n        border: 1px solid var(--primary-color, #3b82f6);\n        background: transparent;\n        color: var(--primary-color, #3b82f6);\n        border-radius: 4px;\n        font-size: 0.75rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .edit-btn:hover {\n        background: var(--primary-color, #3b82f6);\n        color: white;\n    }\n\n    .info-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n        gap: 1rem;\n    }\n\n    .info-item {\n        display: flex;\n        flex-direction: column;\n        gap: 0.25rem;\n    }\n\n    .info-item .label {\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .info-item .value {\n        font-size: 0.875rem;\n        font-weight: 500;\n        color: var(--text-primary, #111827);\n    }\n\n    .selections-list {\n        display: flex;\n        flex-direction: column;\n        gap: 1.25rem;\n    }\n\n    .selection-group {\n        background: var(--bg-tertiary, #f9fafb);\n        border-radius: 6px;\n        padding: 1rem;\n    }\n\n    .group-name {\n        margin: 0 0 0.75rem;\n        font-size: 0.875rem;\n        font-weight: 600;\n        color: var(--text-primary, #111827);\n    }\n\n    .group-items {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n\n    .selection-item {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 0.5rem;\n        background: var(--bg-primary, #ffffff);\n        border-radius: 4px;\n    }\n\n    .item-info {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n    }\n\n    .item-name {\n        font-size: 0.875rem;\n        color: var(--text-primary, #111827);\n    }\n\n    .item-quantity {\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n        font-weight: 500;\n    }\n\n    .item-price {\n        font-size: 0.875rem;\n        font-weight: 600;\n        color: var(--primary-color, #3b82f6);\n    }\n\n    .violations-summary {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n\n    .violation-summary {\n        display: flex;\n        align-items: flex-start;\n        gap: 0.5rem;\n        padding: 0.5rem;\n        background: var(--warning-bg, #fef3c7);\n        border-radius: 4px;\n        font-size: 0.875rem;\n    }\n\n    .violation-icon {\n        flex-shrink: 0;\n    }\n\n    .violation-text {\n        color: var(--warning-text, #92400e);\n    }\n\n    .more-violations {\n        margin: 0.5rem 0 0;\n        font-size: 0.75rem;\n        color: var(--text-secondary, #6b7280);\n        font-style: italic;\n    }\n\n    .pricing-summary {\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n\n    .price-line {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        font-size: 0.875rem;\n    }\n\n    .price-line.discount {\n        color: var(--success-color, #10b981);\n    }\n\n    .price-line.total {\n        padding-top: 0.5rem;\n        margin-top: 0.5rem;\n        border-top: 1px solid var(--border-color, #e5e7eb);\n        font-size: 1.125rem;\n        font-weight: 700;\n        color: var(--text-primary, #111827);\n    }\n\n    .empty-message {\n        text-align: center;\n        color: var(--text-secondary, #6b7280);\n        padding: 2rem;\n        font-style: italic;\n    }\n\n    .summary-actions {\n        display: flex;\n        gap: 1rem;\n        padding: 1.5rem;\n        background: var(--bg-secondary, #f9fafb);\n    }\n\n    .action-btn {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        padding: 0.75rem 1.25rem;\n        border-radius: 6px;\n        border: 1px solid var(--border-color, #e5e7eb);\n        background: var(--bg-primary, #ffffff);\n        font-size: 0.875rem;\n        font-weight: 500;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .action-btn:hover {\n        background: var(--bg-tertiary, #f3f4f6);\n    }\n\n    @media (max-width: 640px) {\n        .summary-header {\n            flex-direction: column;\n            gap: 1rem;\n        }\n\n        .info-grid {\n            grid-template-columns: 1fr;\n        }\n\n        .summary-actions {\n            flex-direction: column;\n        }\n\n        .action-btn {\n            width: 100%;\n            justify-content: center;\n        }\n    }\n</style>","<!-- web/src/lib/ConfiguratorApp.svelte -->\n<script>\n  import { onMount, onDestroy } from 'svelte';\n  import { createEventDispatcher } from 'svelte';\n  import { configStore } from './stores/configuration.svelte.js';\n  import ProgressIndicator from './components/ProgressIndicator.svelte';\n  import LoadingSpinner from './components/LoadingSpinner.svelte';\n  import ErrorBoundary from './components/ErrorBoundary.svelte';\n  import OptionGroup from './components/OptionGroup.svelte';\n  import PricingDisplay from './components/PricingDisplay.svelte';\n  import ValidationDisplay from './components/ValidationDisplay.svelte';\n  import ConfigurationSummary from './components/ConfigurationSummary.svelte';\n\n  let {\n    modelId,\n    theme = 'light',\n    apiUrl = '/api/v1',\n    embedMode = false,\n    onComplete = null,\n    onConfigurationChange = null,\n    onError = null,\n    configurationId = null\n  } = $props();\n\n  const dispatch = createEventDispatcher();\n\n  let mounted = $state(false);\n  let showValidationPanel = $state(false);\n  let autoSaveEnabled = $state(true);\n  let autoSaveInterval = null;\n\n  const steps = [\n    { id: 'configure', label: 'Configure', icon: '⚙️' },\n    { id: 'validate', label: 'Validate', icon: '✅' },\n    { id: 'price', label: 'Price', icon: '💰' },\n    { id: 'summary', label: 'Summary', icon: '📋' }\n  ];\n\n  // Set API URL globally\n  if (typeof window !== 'undefined') {\n    window.__API_BASE_URL__ = apiUrl;\n  }\n\n  onMount(async () => {\n    // Initialize store\n    await configStore.initialize();\n\n    // Set model ID\n    configStore.setModelId(modelId);\n\n    // Load existing configuration if provided\n    if (configurationId) {\n      await configStore.loadConfiguration(configurationId);\n    }\n\n    mounted = true;\n\n    // Set theme\n    document.documentElement.setAttribute('data-theme', theme);\n\n    // Setup auto-save\n    if (autoSaveEnabled) {\n      autoSaveInterval = setInterval(() => {\n        if (configStore.isDirty) {\n          configStore.saveConfiguration();\n        }\n      }, 30000); // Every 30 seconds\n    }\n\n    // Watch for configuration changes\n    const unsubscribe = $effect.root(() => {\n      $effect(() => {\n        if (onConfigurationChange && configStore.selectedCount > 0) {\n          onConfigurationChange(configStore.exportConfiguration());\n        }\n      });\n\n      $effect(() => {\n        if (onError && configStore.error) {\n          onError(new Error(configStore.error));\n          dispatch('error', { message: configStore.error });\n        }\n      });\n    });\n\n    return () => {\n      unsubscribe();\n      if (autoSaveInterval) {\n        clearInterval(autoSaveInterval);\n      }\n    };\n  });\n\n  onDestroy(() => {\n    // Save on unmount if dirty\n    if (configStore.isDirty) {\n      configStore.saveConfiguration();\n    }\n  });\n\n  async function handleComplete() {\n    // Final validation and save\n    await configStore.validateConfiguration();\n\n    if (!configStore.isValid) {\n      configStore.error = 'Please resolve all validation issues before completing';\n      return;\n    }\n\n    await configStore.saveConfiguration();\n\n    const config = configStore.exportConfiguration();\n    dispatch('complete', config);\n    onComplete?.(config);\n  }\n\n  function nextStep() {\n    if (configStore.canProceedToStep(configStore.currentStep + 1)) {\n      configStore.nextStep();\n    } else {\n      // Show why we can't proceed\n      if (configStore.currentStep === 0 && configStore.selectedCount === 0) {\n        configStore.error = 'Please select at least one option';\n      } else if (configStore.currentStep === 1 && !configStore.isValid) {\n        configStore.error = 'Please resolve validation issues';\n      }\n    }\n  }\n\n  function prevStep() {\n    configStore.previousStep();\n  }\n\n  function goToStep(index) {\n    configStore.goToStep(index);\n  }\n\n  function toggleValidationPanel() {\n    showValidationPanel = !showValidationPanel;\n  }\n\n  // Expose store methods to parent\n  export const store = configStore;\n</script>\n\n<div class=\"configurator-app {embedMode ? 'embed-mode' : 'standalone-mode'}\" data-theme={theme}>\n  <ErrorBoundary>\n    {#if configStore.isLoading && !mounted}\n      <div class=\"loading-container\">\n        <LoadingSpinner size=\"large\" message=\"Loading configuration model...\" />\n      </div>\n    {:else if configStore.error && !configStore.model}\n      <div class=\"error-container\">\n        <div class=\"error-content\">\n          <div class=\"error-icon\">⚠️</div>\n          <h2>Configuration Error</h2>\n          <p>{configStore.error}</p>\n          <button onclick={() => location.reload()} class=\"btn btn-primary\">\n            Reload Page\n          </button>\n        </div>\n      </div>\n    {:else if mounted && configStore.model}\n      <div class=\"configurator-container\">\n        <!-- Header -->\n        <header class=\"configurator-header\">\n          <div class=\"header-content\">\n            <h1>{configStore.model.name}</h1>\n            {#if configStore.model.description}\n              <p class=\"model-description\">{configStore.model.description}</p>\n            {/if}\n          </div>\n\n          <div class=\"header-actions\">\n            {#if configStore.hasViolations}\n              <button\n                      class=\"validation-indicator warning\"\n                      onclick={toggleValidationPanel}\n                      title=\"View validation issues\"\n              >\n                ⚠️ {configStore.validationResults?.violations?.length || 0} Issues\n              </button>\n            {/if}\n\n            {#if configStore.isSaving}\n              <span class=\"save-indicator\">\n                <LoadingSpinner size=\"small\" /> Saving...\n              </span>\n            {:else if configStore.lastSaved}\n              <span class=\"save-indicator saved\">\n                ✅ Saved {new Date(configStore.lastSaved).toLocaleTimeString()}\n              </span>\n            {/if}\n          </div>\n        </header>\n\n        <!-- Progress Indicator -->\n        <ProgressIndicator\n                {steps}\n                currentStep={configStore.currentStep}\n                onStepClick={goToStep}\n                canNavigate={true}\n        />\n\n        <!-- Main Content -->\n        <div class=\"configurator-content\">\n          {#if configStore.currentStep === 0}\n            <!-- Configuration Step -->\n            <div class=\"configuration-step\">\n              <div class=\"step-header\">\n                <h2>Select Your Options</h2>\n                <p>Choose from the available options below. Required selections are marked with *</p>\n              </div>\n\n              {#if configStore.safeGroups.length > 0}\n                <div class=\"groups-container\">\n                  {#each configStore.safeGroups as group (group.id)}\n                    <OptionGroup\n                            {group}\n                            options={configStore.safeOptions.filter(o => o.group_id === group.id)}\n                            selections={configStore.selections}\n                            availableOptions={configStore.availableOptions}\n                            onSelectionChange={(optionId, quantity) => configStore.updateSelection(optionId, quantity)}\n                            expanded={configStore.isGroupExpanded(group.id)}\n                            onToggle={() => configStore.toggleGroup(group.id)}\n                    />\n                  {/each}\n                </div>\n              {:else if configStore.isLoading}\n                <div class=\"loading-state\">\n                  <LoadingSpinner size=\"medium\" message=\"Loading options...\" />\n                </div>\n              {:else}\n                <div class=\"empty-state\">\n                  <p>No option groups available for this model.</p>\n                </div>\n              {/if}\n\n              <div class=\"step-actions\">\n                <div class=\"selection-summary\">\n                  <span>{configStore.selectedCount} options selected</span>\n                  {#if configStore.progress > 0}\n                    <span class=\"progress-text\">{Math.round(configStore.progress)}% complete</span>\n                  {/if}\n                </div>\n                <button\n                        onclick={nextStep}\n                        disabled={configStore.selectedCount === 0}\n                        class=\"btn btn-primary\"\n                >\n                  Continue to Validation\n                </button>\n              </div>\n            </div>\n\n          {:else if configStore.currentStep === 1}\n            <!-- Validation Step -->\n            <div class=\"validation-step\">\n              <div class=\"step-header\">\n                <h2>Configuration Validation</h2>\n                <p>Review and resolve any configuration issues</p>\n              </div>\n\n              <ValidationDisplay\n                      validationResults={configStore.validationResults}\n                      onFix={(suggestion) => {\n                  // Apply fix suggestion\n                  if (suggestion.action === 'add') {\n                    configStore.updateSelection(suggestion.option_id, suggestion.quantity || 1);\n                  } else if (suggestion.action === 'remove') {\n                    configStore.updateSelection(suggestion.option_id, 0);\n                  }\n                }}\n              />\n\n              {#if configStore.isValidating}\n                <div class=\"validation-loading\">\n                  <LoadingSpinner size=\"small\" message=\"Validating configuration...\" />\n                </div>\n              {/if}\n\n              <div class=\"step-actions\">\n                <button onclick={prevStep} class=\"btn btn-secondary\">\n                  Back\n                </button>\n                <button\n                        onclick={nextStep}\n                        disabled={!configStore.isValid}\n                        class=\"btn btn-primary\"\n                >\n                  {configStore.isValid ? 'Continue to Pricing' : 'Resolve Issues First'}\n                </button>\n              </div>\n            </div>\n\n          {:else if configStore.currentStep === 2}\n            <!-- Pricing Step -->\n            <div class=\"pricing-step\">\n              <div class=\"step-header\">\n                <h2>Pricing Details</h2>\n                <p>Review your configuration pricing</p>\n              </div>\n\n              <PricingDisplay\n                      pricingData={configStore.pricingData}\n                      selections={configStore.selections}\n                      options={configStore.options}\n                      volumeTiers={configStore.volumeTiers}\n                      detailed={true}\n              />\n\n              {#if configStore.isPricing}\n                <div class=\"pricing-loading\">\n                  <LoadingSpinner size=\"small\" message=\"Calculating pricing...\" />\n                </div>\n              {/if}\n\n              <div class=\"step-actions\">\n                <button onclick={prevStep} class=\"btn btn-secondary\">\n                  Back\n                </button>\n                <button onclick={nextStep} class=\"btn btn-primary\">\n                  Continue to Summary\n                </button>\n              </div>\n            </div>\n\n          {:else if configStore.currentStep === 3}\n            <!-- Summary Step -->\n            <div class=\"summary-step\">\n              <div class=\"step-header\">\n                <h2>Configuration Summary</h2>\n                <p>Review your complete configuration</p>\n              </div>\n\n              <ConfigurationSummary\n                      configuration={configStore.exportConfiguration()}\n                      model={configStore.model}\n                      onEdit={(step) => goToStep(step)}\n              />\n\n              <div class=\"step-actions\">\n                <button onclick={prevStep} class=\"btn btn-secondary\">\n                  Back\n                </button>\n                <button\n                        onclick={handleComplete}\n                        class=\"btn btn-success\"\n                        disabled={configStore.isSaving}\n                >\n                  {configStore.isSaving ? 'Saving...' : 'Complete Configuration'}\n                </button>\n              </div>\n            </div>\n          {/if}\n        </div>\n\n        <!-- Validation Panel (Slide-out) -->\n        {#if showValidationPanel && configStore.hasViolations}\n          <div class=\"validation-panel\" class:open={showValidationPanel}>\n            <div class=\"panel-header\">\n              <h3>Validation Issues</h3>\n              <button class=\"close-btn\" onclick={() => showValidationPanel = false}>×</button>\n            </div>\n            <ValidationDisplay\n                    validationResults={configStore.validationResults}\n                    compact={true}\n                    onFix={(suggestion) => {\n                if (suggestion.action === 'add') {\n                  configStore.updateSelection(suggestion.option_id, suggestion.quantity || 1);\n                } else if (suggestion.action === 'remove') {\n                  configStore.updateSelection(suggestion.option_id, 0);\n                }\n                showValidationPanel = false;\n              }}\n            />\n          </div>\n        {/if}\n\n        <!-- Sidebar (desktop only) -->\n        {#if !embedMode}\n          <aside class=\"configurator-sidebar\">\n            <div class=\"sidebar-section\">\n              <h3>Quick Summary</h3>\n\n              <div class=\"summary-item\">\n                <span>Selected Options</span>\n                <strong>{configStore.selectedCount}</strong>\n              </div>\n\n              <div class=\"summary-item\">\n                <span>Total Price</span>\n                <strong class=\"price\">${configStore.totalPrice.toFixed(2)}</strong>\n              </div>\n\n              {#if configStore.discounts.length > 0}\n                <div class=\"summary-item discount\">\n                  <span>Discounts Applied</span>\n                  <strong>{configStore.discounts.length}</strong>\n                </div>\n              {/if}\n\n              <div class=\"summary-item status\">\n                <span>Status</span>\n                <strong class:valid={configStore.isValid} class:invalid={!configStore.isValid}>\n                  {configStore.isValid ? '✅ Valid' : '⚠️ Issues'}\n                </strong>\n              </div>\n            </div>\n\n            {#if configStore.selectedCount > 0}\n              <div class=\"sidebar-section\">\n                <h3>Selected Items</h3>\n                <div class=\"selected-items\">\n                  {#each Object.entries(configStore.selections) as [optionId, quantity]}\n                    {@const option = configStore.safeOptions.find(o => o.id === optionId)}\n                    {#if option && quantity > 0}\n                      <div class=\"selected-item\">\n                        <span class=\"item-name\">{option.name}</span>\n                        <span class=\"item-quantity\">×{quantity}</span>\n                      </div>\n                    {/if}\n                  {/each}\n                </div>\n              </div>\n            {/if}\n          </aside>\n        {/if}\n      </div>\n    {/if}\n  </ErrorBoundary>\n</div>\n\n<style>\n  .configurator-app {\n    width: 100%;\n    min-height: 100vh;\n    background: var(--bg-primary, #ffffff);\n    color: var(--text-primary, #111827);\n    font-family: system-ui, -apple-system, sans-serif;\n  }\n\n  .embed-mode {\n    min-height: auto;\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 8px;\n  }\n\n  .loading-container,\n  .error-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 50vh;\n    padding: 2rem;\n  }\n\n  .error-content {\n    text-align: center;\n    max-width: 400px;\n  }\n\n  .error-icon {\n    font-size: 3rem;\n    margin-bottom: 1rem;\n  }\n\n  .configurator-container {\n    display: flex;\n    min-height: 100vh;\n    position: relative;\n  }\n\n  .embed-mode .configurator-container {\n    min-height: 600px;\n  }\n\n  .configurator-header {\n    position: sticky;\n    top: 0;\n    background: var(--bg-primary, #ffffff);\n    border-bottom: 1px solid var(--border-color, #e5e7eb);\n    padding: 1.5rem 2rem;\n    z-index: 10;\n    display: flex;\n    justify-content: space-between;\n    align-items: flex-start;\n  }\n\n  .header-content h1 {\n    margin: 0 0 0.25rem;\n    font-size: 1.875rem;\n    font-weight: 700;\n  }\n\n  .model-description {\n    margin: 0;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .header-actions {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n  }\n\n  .validation-indicator {\n    padding: 0.5rem 1rem;\n    border-radius: 6px;\n    border: none;\n    background: var(--warning-bg, #fef3c7);\n    color: var(--warning-text, #92400e);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .validation-indicator:hover {\n    background: var(--warning-hover, #fde68a);\n  }\n\n  .save-indicator {\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n  }\n\n  .save-indicator.saved {\n    color: var(--success-text, #059669);\n  }\n\n  .configurator-content {\n    flex: 1;\n    padding: 2rem;\n    max-width: 1200px;\n    margin: 0 auto;\n    width: 100%;\n  }\n\n  .configurator-sidebar {\n    width: 320px;\n    background: var(--bg-secondary, #f9fafb);\n    border-left: 1px solid var(--border-color, #e5e7eb);\n    padding: 2rem;\n    position: sticky;\n    top: 0;\n    height: 100vh;\n    overflow-y: auto;\n  }\n\n  .embed-mode .configurator-sidebar {\n    display: none;\n  }\n\n  .step-header {\n    margin-bottom: 2rem;\n  }\n\n  .step-header h2 {\n    margin: 0 0 0.5rem;\n    font-size: 1.5rem;\n    font-weight: 600;\n  }\n\n  .step-header p {\n    margin: 0;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .groups-container {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin-bottom: 2rem;\n  }\n\n  .step-actions {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-top: 2rem;\n    padding-top: 2rem;\n    border-top: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .selection-summary {\n    display: flex;\n    gap: 1rem;\n    align-items: center;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .progress-text {\n    font-weight: 500;\n    color: var(--primary-color, #3b82f6);\n  }\n\n  .btn {\n    padding: 0.75rem 1.5rem;\n    border-radius: 6px;\n    border: none;\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s;\n    font-size: 1rem;\n  }\n\n  .btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .btn-primary {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .btn-primary:hover:not(:disabled) {\n    background: var(--primary-hover, #2563eb);\n  }\n\n  .btn-secondary {\n    background: var(--bg-secondary, #f3f4f6);\n    color: var(--text-primary, #111827);\n  }\n\n  .btn-secondary:hover:not(:disabled) {\n    background: var(--bg-tertiary, #e5e7eb);\n  }\n\n  .btn-success {\n    background: var(--success-color, #10b981);\n    color: white;\n  }\n\n  .btn-success:hover:not(:disabled) {\n    background: var(--success-hover, #059669);\n  }\n\n  .validation-panel {\n    position: fixed;\n    right: -400px;\n    top: 0;\n    width: 400px;\n    height: 100vh;\n    background: var(--bg-primary, #ffffff);\n    box-shadow: -2px 0 10px rgba(0, 0, 0, 0.1);\n    transition: right 0.3s ease;\n    z-index: 100;\n    overflow-y: auto;\n  }\n\n  .validation-panel.open {\n    right: 0;\n  }\n\n  .panel-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1rem 1.5rem;\n    border-bottom: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .panel-header h3 {\n    margin: 0;\n  }\n\n  .close-btn {\n    background: none;\n    border: none;\n    font-size: 1.5rem;\n    cursor: pointer;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .sidebar-section {\n    margin-bottom: 2rem;\n    padding-bottom: 2rem;\n    border-bottom: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .sidebar-section:last-child {\n    border-bottom: none;\n  }\n\n  .sidebar-section h3 {\n    margin: 0 0 1rem;\n    font-size: 1rem;\n    font-weight: 600;\n  }\n\n  .summary-item {\n    display: flex;\n    justify-content: space-between;\n    margin-bottom: 0.75rem;\n    font-size: 0.875rem;\n  }\n\n  .summary-item strong {\n    font-weight: 600;\n  }\n\n  .summary-item.status .valid {\n    color: var(--success-text, #059669);\n  }\n\n  .summary-item.status .invalid {\n    color: var(--error-text, #dc2626);\n  }\n\n  .price {\n    color: var(--primary-color, #3b82f6);\n    font-size: 1.125rem;\n  }\n\n  .selected-items {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .selected-item {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 0.5rem;\n    background: var(--bg-primary, #ffffff);\n    border-radius: 4px;\n    font-size: 0.875rem;\n  }\n\n  .item-quantity {\n    font-weight: 500;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .empty-state {\n    text-align: center;\n    padding: 3rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .loading-state {\n    display: flex;\n    justify-content: center;\n    padding: 3rem;\n  }\n\n  @media (max-width: 1024px) {\n    .configurator-sidebar {\n      display: none;\n    }\n\n    .configurator-content {\n      max-width: 100%;\n    }\n  }\n\n  @media (max-width: 640px) {\n    .configurator-header {\n      flex-direction: column;\n      gap: 1rem;\n    }\n\n    .header-actions {\n      width: 100%;\n      justify-content: space-between;\n    }\n\n    .configurator-content {\n      padding: 1rem;\n    }\n\n    .validation-panel {\n      width: 100%;\n      right: -100%;\n    }\n  }\n</style>"],"names":["window","_a","__svelte","v","Set","add","ConfiguratorApiClient","constructor","baseUrl","options","this","__API_BASE_URL__","modelId","authToken","localStorage","getItem","timeout","console","log","hasAuth","request","endpoint","url","method","config","headers","Authorization","body","JSON","stringify","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","errorData","json","catch","message","statusText","Error","error","status","result","location","hostname","success","data","includes","name","getModel","model","option_groups","groups","hasGroups","hasOptionGroups","hasOptions","groupsCount","length","optionsCount","getModelGroups","Array","isArray","getModelOptions","getModelRules","getModelPricingRules","getModelStatistics","createConfiguration","selections","model_id","Date","toISOString","formatSelections","getConfiguration","configId","updateConfiguration","updates","deleteConfiguration","addSelections","removeSelection","optionId","validateConfiguration","validateSelections","getAvailableOptions","getConstraints","getConfigurationSummary","cloneConfiguration","calculatePrice","context","simulatePricing","scenarios","validatePricing","expectedPrice","expected_price","getPricingRules","getVolumeTiers","validateModel","detectConflicts","ruleIds","rule_ids","analyzeImpact","changes","getModelQuality","getOptimizationRecommendations","Object","entries","filter","_","quantity","map","option_id","parseInt","batchValidate","configurations","bulkCalculatePricing","checkHealth","getStatus","containsCode","text","some","pattern","sanitizeText","fallback","textStr","String","warn","original","substring","configStore","api","_initialized","_debounceTimers","Map","_modelLoaded","initialize","rules","pricingRules","volumeTiers","availableOptions","validationErrors","$.user_effect","loadModel","keys","_debounce","isValid","calculatePricing","configuration","isDirty","validationResults","is_valid","hasViolations","violations","totalPrice","pricingData","total_price","basePrice","base_price","discounts","selectedCount","values","reduce","sum","qty","safeGroups","safeOptions","safeRules","safePricingRules","safeVolumeTiers","progress","requiredGroups","g","required","selectedGroups","id","hasGroupSelection","Math","round","isLoading","groupsResponse","optionsResponse","rulesResponse","pricingRulesResponse","Promise","all","pricing_rules","group","description","option","extractedOptions","forEach","opt","push","group_id","index","tiersResponse","tiers","e","configurationId","loadConfiguration","selectionsObj","sel","saveConfiguration","isSaving","toLocaleDateString","lastSaved","updateSelection","newSelections","find","o","selection_type","max_selections","toggleOption","currentQty","isValidating","available_options","isPricing","groupId","getGroupSelections","isOptionAvailable","isOptionSelected","getOptionQuantity","toggleGroup","expanded","expandedGroups","has","delete","isGroupExpanded","exportConfiguration","selectedOptions","option_name","unit_price","price","model_name","validation","pricing","breakdown","metadata","created","created_at","updated","updated_at","saved","reset","currentStep","key","fn","delay","get","set","canProceedToStep","step","nextStep","previousStep","goToStep","setModelId","steps","$.prop","$$props","onStepClick","canNavigate","handleStepClick","$.each","div_3","$.derived","getStepStatus","isClickable","div_4","__click","__keydown","$.get","preventDefault","span","textContent","consequent","$$render","alternate","classes","$0","$.set_text","icon","text_1","label","$.template_effect","$.set_style","div_2","size","overlay","color","sizeClasses","small","medium","large","colorClasses","primary","white","gray","$.set_class","consequent_2","consequent_1","on_click","reload","tag","className","safeContent","consequent_5","alternate_5","consequent_4","alternate_4","consequent_3","alternate_3","alternate_2","alternate_1","increment","handleQuantityChange","decrement","on_keydown","handleToggle","stopPropagation","target","value","totalQuantity","getSelectionText","min_selections","selectionText","getOptionState","isSelected","isAvailable","isDisabled","isOptionDisabled","selected","available","disabled","onMount","each","div_6","state","max_quantity","selectionType","maxQuantity","newQuantity","max","min","formattedPrice","toFixed","apply","$$args","sku","ul","features","feature","consequent_6","consequent_7","onChange","onSelectionChange","handleOptionChange","showBreakdown","$.set","on_click_1","__1","showDiscounts","detailed","formatPrice","amount","Intl","NumberFormat","style","currency","format","totalSavings","d","savingsPercent","subtotal","options_total","groupedSelections","getOption","lineTotal","from","$.index","$$anchor","$$item","$$array","template_effect","text_5","set_text","text_4","node_9","discount","text_10","text_9","div_16","tier","isActive","active_tier","text_13","consequent_8","consequent_9","text_12","min_quantity","text_15","discount_percent","consequent_10","div_21","item","text_16","consequent_11","consequent_12","consequent_13","filterSeverity","on_click_2","__2","on_click_3","__3","on_click_4","violation","suggestion","compact","expandedViolations","filteredViolations","severity","violationCounts","counts","critical","warning","info","handleFix","onFix","suggestions","text_2","active","text_3","isExpanded","rule_id","severityColor","getSeverityColor","toggleViolation","text_7","rule_name","text_8","details","affected_options","text_11","text_14","action","consequent_14","rule_expression","consequent_15","consequent_16","classes_5","text_6","getSeverityIcon","consequent_17","print","formatDate","date","toLocaleString","groupName","group_name","div_13","selection","slice","blob","Blob","type","URL","createObjectURL","a","document","createElement","href","download","click","revokeObjectURL","toggleValidationPanel","showValidationPanel","theme","apiUrl","embedMode","onComplete","onConfigurationChange","onError","dispatch","createEventDispatcher","mounted","autoSaveInterval","async","handleComplete","prevStep","documentElement","setAttribute","setInterval","unsubscribe","clearInterval","onDestroy","store","hasError","handleError","event","addEventListener","reason","removeEventListener","toLocaleTimeString","expression","expression_1","onToggle","button_4","expression_2","button_8","alternate_7","alternate_6","div_30","consequent_18","valid","invalid","consequent_19","consequent_20"],"mappings":"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","x_google_ignoreList":[0,1]}