{"version":3,"file":"configurator-CTGp2uIO.js","sources":["../../node_modules/svelte/src/internal/disclose-version.js","../../node_modules/svelte/src/version.js","../../src/lib/api/client.js","../../src/lib/stores/configuration.svelte.js","../../src/lib/components/ErrorBoundary.svelte","../../src/lib/components/OptionCard.svelte","../../src/lib/components/OptionGroup.svelte","../../src/lib/components/PricingDisplay.svelte","../../src/lib/components/ValidationDisplay.svelte","../../src/lib/components/ConfigurationSummary.svelte","../../src/lib/ConfiguratorApp.svelte","../../src/lib/components/LoadingSpinner.svelte","../../src/lib/components/ProgressIndicator.svelte"],"sourcesContent":["import { PUBLIC_VERSION } from '../version.js';\n\nif (typeof window !== 'undefined') {\n\t// @ts-expect-error\n\t((window.__svelte ??= {}).v ??= new Set()).add(PUBLIC_VERSION);\n}\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n * @type {string}\n */\nexport const VERSION = '5.34.3';\nexport const PUBLIC_VERSION = '5';\n","// web/src/lib/api/client.js\nclass ConfiguratorApiClient {\n  constructor(baseUrl, options = {}) {\n    this.baseUrl = baseUrl || window.__API_BASE_URL__ || 'http://localhost:8080/api/v1';\n    this.modelId = options.modelId;\n    this.authToken = options.authToken || localStorage.getItem('auth_token');\n    this.timeout = options.timeout || 10000;\n\n    console.log('API Client initialized:', {\n      baseUrl: this.baseUrl,\n      modelId: this.modelId,\n      hasAuth: !!this.authToken\n    });\n  }\n\n  async request(endpoint, options = {}) {\n    // Ensure endpoint starts with /\n    if (!endpoint.startsWith('/')) {\n      endpoint = '/' + endpoint;\n    }\n\n    const url = `${this.baseUrl}${endpoint}`;\n    console.log('API Request:', options.method || 'GET', url);\n\n    const config = {\n      method: 'GET',\n      mode: 'cors',\n      credentials: 'omit',\n      headers: {\n        'Content-Type': 'application/json',\n        ...(this.authToken && { 'Authorization': `Bearer ${this.authToken}` }),\n        ...options.headers\n      },\n      ...options\n    };\n\n    if (config.body && typeof config.body === 'object') {\n      config.body = JSON.stringify(config.body);\n    }\n\n    try {\n      const controller = new AbortController();\n      const timeoutId = setTimeout(() => controller.abort(), this.timeout);\n\n      const response = await fetch(url, {\n        ...config,\n        signal: controller.signal\n      });\n\n      clearTimeout(timeoutId);\n\n      if (!response.ok) {\n        const errorText = await response.text();\n        let errorMessage = `HTTP ${response.status}: ${response.statusText}`;\n\n        try {\n          const errorJson = JSON.parse(errorText);\n          errorMessage = errorJson.message || errorJson.error || errorMessage;\n        } catch (e) {\n          // If not JSON, use the text if it's not HTML\n          if (!errorText.includes('<html')) {\n            errorMessage = errorText || errorMessage;\n          }\n        }\n\n        console.error(`API Error from ${endpoint}:`, errorMessage);\n\n        if (response.status === 404) {\n          throw new Error(`Endpoint not found: ${url}. Please check if the backend server is running and the API path is correct.`);\n        }\n\n        throw new Error(errorMessage);\n      }\n\n      const result = await response.json();\n      console.log(`API Response from ${endpoint}:`, result);\n\n      // Extract data from response wrapper\n      // Backend returns { success: true, data: {...}, meta: {...} }\n      if (result.success !== undefined) {\n        // This is a wrapped response\n        if (result.success && result.data !== undefined) {\n          return result.data;\n        } else if (!result.success) {\n          throw new Error(result.error || result.message || 'Request failed');\n        }\n      }\n\n      // Some endpoints might return data directly or in different structures\n      // Log what we got to help debug\n      if (endpoint.includes('/groups') || endpoint.includes('/options')) {\n        console.log(`Note: ${endpoint} returned unwrapped response, structure:`,\n            Array.isArray(result) ? 'Array' : typeof result,\n            'Keys:', result ? Object.keys(result).slice(0, 5) : 'none'\n        );\n      }\n\n      // For endpoints that might return unwrapped data\n      return result;\n    } catch (error) {\n      if (error.name === 'AbortError') {\n        throw new Error('Request timeout');\n      }\n      throw error;\n    }\n  }\n\n  setAuthToken(token) {\n    this.authToken = token;\n    if (token) {\n      localStorage.setItem('auth_token', token);\n    } else {\n      localStorage.removeItem('auth_token');\n    }\n  }\n\n  // Authentication\n  async login(username, password) {\n    const response = await this.request('/auth/login', {\n      method: 'POST',\n      body: { username, password }\n    });\n    if (response.token) {\n      this.setAuthToken(response.token);\n    }\n    return response;\n  }\n\n  async validateToken() {\n    return this.request('/auth/validate', { method: 'POST' });\n  }\n\n  // Model Management\n  async getModel() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}`);\n    console.log('getModel response:', response);\n\n    // If the model doesn't have option_groups but has an ID, try to fetch them\n    if (response && response.id && !response.option_groups && !response.groups) {\n      try {\n        const options = await this.getModelOptions();\n        response.options = options;\n      } catch (e) {\n        console.warn('Failed to fetch model options separately:', e);\n      }\n    }\n\n    return response;\n  }\n\n  async getModelOptions() {\n    if (!this.modelId) throw new Error('Model ID required');\n    const response = await this.request(`/models/${this.modelId}/options`);\n    console.log('getModelOptions response:', response);\n    return response;\n  }\n\n  async getModelGroups() {\n    if (!this.modelId) throw new Error('Model ID required');\n    // Try to get groups with options included\n    const response = await this.request(`/models/${this.modelId}/groups?include=options`);\n    console.log('getModelGroups response:', response);\n    return response;\n  }\n\n  async getModelStatistics() {\n    if (!this.modelId) throw new Error('Model ID required');\n    return this.request(`/models/${this.modelId}/statistics`);\n  }\n\n  // Configuration Management\n  async createConfiguration(selections = {}) {\n    return this.request('/configurations', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async getConfiguration(configId) {\n    return this.request(`/configurations/${configId}?model_id=${this.modelId}`);\n  }\n\n  async updateConfiguration(configId, selections) {\n    return this.request(`/configurations/${configId}`, {\n      method: 'PUT',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async validateSelections(selections) {\n    return this.request('/configurations/validate-selection', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections)\n      }\n    });\n  }\n\n  async getAvailableOptions(configId) {\n    return this.request(`/configurations/${configId}/available-options?model_id=${this.modelId}`);\n  }\n\n  // Pricing\n  async calculatePricing(selections, context = {}) {\n    return this.request('/pricing/calculate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        selections: this.formatSelections(selections),\n        context\n      }\n    });\n  }\n\n  async getVolumeTiers() {\n    return this.request(`/pricing/volume-tiers/${this.modelId}`);\n  }\n\n  async simulatePricing(scenarios) {\n    return this.request('/pricing/simulate', {\n      method: 'POST',\n      body: {\n        model_id: this.modelId,\n        scenarios\n      }\n    });\n  }\n\n  // Utility methods\n  formatSelections(selections) {\n    return Object.entries(selections)\n        .filter(([_, quantity]) => quantity > 0)\n        .map(([option_id, quantity]) => ({\n          option_id,\n          quantity\n        }));\n  }\n}\n\nexport default ConfiguratorApiClient;","// web/src/lib/stores/configuration.svelte.js\nimport ConfiguratorApiClient from '../api/client.js';\n\nclass ConfigurationStore {\n  constructor() {\n    // Core state\n    this.modelId = $state('');\n    this.model = $state(null);\n    this.selections = $state({});\n    this.validationResults = $state([]);\n    this.pricingData = $state(null);\n    this.availableOptions = $state([]);\n\n    // Loading states\n    this.isLoading = $state(false);\n    this.isValidating = $state(false);\n    this.isPricing = $state(false);\n\n    // Error handling\n    this.error = $state(null);\n    this.retryCount = $state(0);\n\n    // Configuration management\n    this.configurationId = $state(null);\n    this.lastSaved = $state(null);\n    this.isDirty = $state(false);\n\n    // UI state\n    this.currentStep = $state(0);\n\n    // API client\n    this.api = null;\n\n    // Internal state\n    this._initialized = false;\n    this._debounceTimers = new Map();\n    this._loadingPromise = null;\n  }\n\n  // Initialize store and effects\n  initialize() {\n    if (this._initialized) return;\n    this._initialized = true;\n\n    console.log('🔧 ConfigurationStore initialized');\n\n    // Test API connection\n    this._testConnection();\n\n    // Initialize API client when modelId changes\n    $effect(() => {\n      if (this.modelId && !this._loadingPromise) {\n        this.api = new ConfiguratorApiClient(window.__API_BASE_URL__, {\n          modelId: this.modelId\n        });\n        this.loadModel();\n      }\n    });\n\n    // Auto-validate selections\n    $effect(() => {\n      if (this.api && Object.keys(this.selections).length > 0 && this.model) {\n        this._debounce('validate', () => this.validateSelections(), 300);\n      }\n    });\n\n    // Auto-calculate pricing\n    $effect(() => {\n      if (this.api && this.isValid && Object.keys(this.selections).length > 0 && this.model) {\n        this._debounce('pricing', () => this.calculatePricing(), 500);\n      }\n    });\n\n    // Auto-save\n    $effect(() => {\n      if (this.isDirty && this.configurationId) {\n        this._debounce('save', () => this.saveConfiguration(), 30000);\n      }\n    });\n  }\n\n  // Derived state\n  get isValid() {\n    return this.validationResults.length === 0;\n  }\n\n  get totalPrice() {\n    return this.pricingData?.total_price || 0;\n  }\n\n  get basePrice() {\n    return this.pricingData?.base_price || 0;\n  }\n\n  get adjustments() {\n    return this.pricingData?.adjustments || [];\n  }\n\n  get selectedOptions() {\n    if (!this.model?.option_groups || !Array.isArray(this.model.option_groups)) return [];\n\n    const selected = [];\n    for (const group of this.model.option_groups) {\n      if (!group.options || !Array.isArray(group.options)) continue;\n\n      for (const option of group.options) {\n        if (this.selections[option.id] > 0) {\n          selected.push({\n            ...option,\n            quantity: this.selections[option.id],\n            group_name: group.name,\n            group_id: group.id\n          });\n        }\n      }\n    }\n    return selected;\n  }\n\n  get completionPercentage() {\n    if (!this.model?.option_groups || !Array.isArray(this.model.option_groups)) return 0;\n\n    const requiredGroups = this.model.option_groups.filter(g => g.required);\n    if (requiredGroups.length === 0) return 100;\n\n    const completedGroups = requiredGroups.filter(group =>\n        group.options && Array.isArray(group.options) &&\n        group.options.some(option => this.selections[option.id] > 0)\n    );\n\n    return Math.round((completedGroups.length / requiredGroups.length) * 100);\n  }\n\n  get canProceedToNextStep() {\n    return this.completionPercentage >= 100 && this.isValid;\n  }\n\n  // Core methods\n  setModelId(modelId) {\n    console.log('setModelId called with:', modelId);\n    if (this.modelId !== modelId) {\n      this.modelId = modelId;\n      this.reset();\n    }\n  }\n\n  async loadModel() {\n    if (!this.api || this._loadingPromise) return;\n\n    // This method tries multiple approaches to load model data since\n    // different backends may structure their responses differently.\n    // It will try to find groups and options in various locations\n    // and log detailed information to help debug API integration issues.\n\n    this._loadingPromise = this._executeWithRetry(async () => {\n      this.isLoading = true;\n      this.error = null;\n\n      try {\n        // First, try to get the model\n        let model;\n        try {\n          model = await this.api.getModel();\n          console.log('Raw model response:', model);\n        } catch (error) {\n          // If model not found, provide helpful error message\n          if (error.message.includes('404')) {\n            throw new Error(\n                `Model \"${this.modelId}\" not found. ` +\n                `Use the debug test page to list available models, ` +\n                `or check /api/v1/models endpoint.`\n            );\n          }\n          throw error;\n        }\n\n        if (!model || typeof model !== 'object') {\n          throw new Error('Invalid model data received');\n        }\n\n        // Initialize the model structure\n        this.model = {\n          id: model.id || model.ID || model.model_id,\n          name: model.name || model.Name || 'Configuration',\n          description: model.description || model.Description,\n          option_groups: []\n        };\n\n        // Check different possible structures for groups/options\n        if (model.option_groups && Array.isArray(model.option_groups)) {\n          // Model already has option_groups with options\n          this.model.option_groups = model.option_groups;\n          console.log('Using option_groups from model');\n        } else if (model.groups && Array.isArray(model.groups)) {\n          // Model has groups (different property name)\n          this.model.option_groups = model.groups;\n          console.log('Using groups from model');\n        } else if (model.data?.groups && Array.isArray(model.data.groups)) {\n          // Groups might be nested in data\n          this.model.option_groups = model.data.groups;\n          console.log('Using groups from model.data');\n        } else {\n          // Need to fetch groups separately\n          console.log('Fetching groups separately...');\n          try {\n            const groupsData = await this.api.getModelGroups();\n            console.log('Groups API response:', groupsData);\n\n            if (Array.isArray(groupsData)) {\n              this.model.option_groups = groupsData;\n            } else if (groupsData.groups) {\n              this.model.option_groups = groupsData.groups;\n            } else if (groupsData.option_groups) {\n              this.model.option_groups = groupsData.option_groups;\n            } else if (groupsData.data && Array.isArray(groupsData.data)) {\n              this.model.option_groups = groupsData.data;\n            } else if (groupsData.data?.groups) {\n              this.model.option_groups = groupsData.data.groups;\n            }\n          } catch (e) {\n            console.error('Failed to load groups:', e);\n          }\n        }\n\n        // If still no groups, check if model has flat options array\n        if ((!this.model.option_groups || this.model.option_groups.length === 0) &&\n            (model.options || model.Options)) {\n          console.log('No groups found, but model has flat options array');\n          const flatOptions = model.options || model.Options;\n\n          // Group options by their group_id\n          const groupMap = new Map();\n          flatOptions.forEach(opt => {\n            const groupId = opt.group_id || opt.groupId || opt.group || 'default';\n            if (!groupMap.has(groupId)) {\n              groupMap.set(groupId, {\n                id: groupId,\n                name: opt.group_name || opt.groupName || groupId,\n                options: []\n              });\n            }\n            groupMap.get(groupId).options.push(opt);\n          });\n\n          this.model.option_groups = Array.from(groupMap.values());\n          console.log('Created groups from flat options:', this.model.option_groups);\n        }\n\n        // Log what we have so far\n        console.log('Groups loaded:', this.model.option_groups?.length || 0, 'groups');\n        if (this.model.option_groups?.length > 0) {\n          console.log('First group structure:', this.model.option_groups[0]);\n          console.log('Group properties:', Object.keys(this.model.option_groups[0]));\n        }\n\n        // Check if any group has options\n        const hasAnyOptions = this.model.option_groups.some(g =>\n            (g.options && Array.isArray(g.options) && g.options.length > 0) ||\n            (g.Options && Array.isArray(g.Options) && g.Options.length > 0) ||\n            (g.items && Array.isArray(g.items) && g.items.length > 0) ||\n            (g.choices && Array.isArray(g.choices) && g.choices.length > 0)\n        );\n\n        if (!hasAnyOptions && this.model.option_groups.length > 0) {\n          console.log('No options found in groups, fetching options separately...');\n\n          // Try to get options separately\n          try {\n            const optionsData = await this.api.getModelOptions();\n            console.log('Options API response:', optionsData);\n\n            let allOptions = [];\n            if (Array.isArray(optionsData)) {\n              allOptions = optionsData;\n            } else if (optionsData.options) {\n              allOptions = optionsData.options;\n            } else if (optionsData.data && Array.isArray(optionsData.data)) {\n              allOptions = optionsData.data;\n            } else if (optionsData.data?.options) {\n              allOptions = optionsData.data.options;\n            }\n\n            console.log('Total options found:', allOptions.length);\n\n            // Log structure of first option to help debug\n            if (allOptions.length > 0) {\n              console.log('First option structure:', allOptions[0]);\n              console.log('Option properties:', Object.keys(allOptions[0]));\n            }\n\n            // Assign options to their groups\n            if (allOptions.length > 0) {\n              this.model.option_groups = this.model.option_groups.map(group => {\n                const groupOptions = allOptions.filter(opt => {\n                  // Try different ways to match options to groups\n                  return opt.group_id === group.id ||\n                      opt.groupId === group.id ||\n                      opt.group === group.id ||\n                      opt.group_name === group.name ||\n                      opt.groupName === group.name ||\n                      opt.group_id === group.name ||\n                      // Also check if group has a different ID property\n                      (group.group_id && (opt.group_id === group.group_id ||\n                          opt.group === group.group_id));\n                });\n\n                console.log(`Group \"${group.name}\" matched ${groupOptions.length} options`);\n\n                // If no options matched and this is the only group, show all options\n                if (groupOptions.length === 0 && this.model.option_groups.length === 1) {\n                  console.warn('No options matched group criteria, showing all options in single group');\n                  return {\n                    ...group,\n                    options: allOptions\n                  };\n                }\n\n                return {\n                  ...group,\n                  options: groupOptions\n                };\n              });\n            }\n          } catch (e) {\n            console.error('Failed to load options:', e);\n          }\n        }\n\n        // Ensure all groups have options array and normalize structure\n        this.model.option_groups = this.model.option_groups.map(group => {\n          let options = [];\n\n          // Check various possible locations for options\n          if (Array.isArray(group.options)) {\n            options = group.options;\n          } else if (Array.isArray(group.Options)) {\n            options = group.Options;\n          } else if (Array.isArray(group.items)) {\n            options = group.items;\n          } else if (Array.isArray(group.choices)) {\n            options = group.choices;\n          } else if (group.data?.options && Array.isArray(group.data.options)) {\n            options = group.data.options;\n          }\n\n          return {\n            ...group,\n            options: options\n          };\n        });\n\n        // If no options were found at all, create demo options for testing\n        const totalOptions = this.model.option_groups.reduce((sum, g) =>\n            sum + (g.options?.length || 0), 0\n        );\n\n        if (totalOptions === 0 && this.model.option_groups.length > 0) {\n          console.warn('No options found in any group. Creating demo options for testing...');\n          this.usingDemoData = true;\n\n          // Create demo options for each group\n          this.model.option_groups = this.model.option_groups.map((group, groupIndex) => ({\n            ...group,\n            options: this._createDemoOptions(group, groupIndex)\n          }));\n        } else {\n          this.usingDemoData = false;\n        }\n\n        // Final logging\n        console.log('=== Final Model Structure ===');\n        console.log('Model:', this.model);\n        console.log('Groups summary:', this.model.option_groups.map(g => ({\n          id: g.id,\n          name: g.name,\n          optionsCount: g.options?.length || 0,\n          options: g.options?.slice(0, 2) // Show first 2 options\n        })));\n\n        // Initialize selections for preselected options\n        this._initializeSelections();\n\n      } finally {\n        this.isLoading = false;\n        this._loadingPromise = null;\n      }\n    });\n\n    return this._loadingPromise;\n  }\n\n  updateSelection(optionId, quantity) {\n    quantity = Math.max(0, quantity);\n\n    // Check group constraints\n    const group = this._getGroupForOption(optionId);\n    if (group) {\n      if (group.selection_type === 'single' && quantity > 0 && group.options && Array.isArray(group.options)) {\n        // Clear other selections in single-select groups\n        for (const option of group.options) {\n          if (option.id !== optionId) {\n            this.selections[option.id] = 0;\n          }\n        }\n      }\n\n      // Enforce max selections\n      if (group.max_selections && quantity > group.max_selections) {\n        quantity = group.max_selections;\n      }\n    }\n\n    // Update selection\n    if (quantity === 0) {\n      delete this.selections[optionId];\n    } else {\n      this.selections[optionId] = quantity;\n    }\n\n    this.isDirty = true;\n  }\n\n  async validateSelections() {\n    if (!this.api || this.isValidating) return;\n\n    // Skip validation if no selections\n    if (Object.keys(this.selections).length === 0) {\n      this.validationResults = [];\n      return;\n    }\n\n    await this._executeWithRetry(async () => {\n      this.isValidating = true;\n      try {\n        const response = await this.api.validateSelections(this.selections);\n        this.validationResults = response.validation_errors || [];\n        this.availableOptions = response.available_options || [];\n      } finally {\n        this.isValidating = false;\n      }\n    });\n  }\n\n  async calculatePricing(context = {}) {\n    if (!this.api || this.isPricing || !this.isValid) return;\n\n    await this._executeWithRetry(async () => {\n      this.isPricing = true;\n      try {\n        const response = await this.api.calculatePricing(this.selections, context);\n        this.pricingData = response;\n      } finally {\n        this.isPricing = false;\n      }\n    });\n  }\n\n  async createConfiguration() {\n    if (!this.api) return;\n\n    const response = await this.api.createConfiguration(this.selections);\n    this.configurationId = response.id;\n    this.isDirty = false;\n    this.lastSaved = new Date();\n    return response;\n  }\n\n  async saveConfiguration() {\n    if (!this.api || !this.configurationId || !this.isDirty) return;\n\n    try {\n      await this.api.updateConfiguration(this.configurationId, this.selections);\n      this.isDirty = false;\n      this.lastSaved = new Date();\n    } catch (error) {\n      console.error('Failed to save configuration:', error);\n    }\n  }\n\n  async loadConfiguration(configId) {\n    if (!this.api) return;\n\n    await this._executeWithRetry(async () => {\n      this.isLoading = true;\n      try {\n        const config = await this.api.getConfiguration(configId);\n        this.configurationId = config.id;\n        this.selections = this._parseSelections(config.selections);\n        this.isDirty = false;\n\n        await Promise.all([\n          this.validateSelections(),\n          this.calculatePricing()\n        ]);\n      } finally {\n        this.isLoading = false;\n      }\n    });\n  }\n\n  async loadAvailableOptions() {\n    if (!this.api || !this.configurationId) return;\n\n    try {\n      const response = await this.api.getAvailableOptions(this.configurationId);\n      this.availableOptions = response.available_options || [];\n    } catch (error) {\n      console.error('Failed to load available options:', error);\n    }\n  }\n\n  exportConfiguration() {\n    return {\n      model_id: this.modelId,\n      selections: this.selections,\n      timestamp: new Date().toISOString(),\n      total_price: this.totalPrice,\n      is_valid: this.isValid\n    };\n  }\n\n  importConfiguration(config) {\n    if (config.model_id !== this.modelId) {\n      throw new Error('Configuration is for a different model');\n    }\n    this.selections = config.selections || {};\n    this.isDirty = true;\n  }\n\n  reset() {\n    this.selections = {};\n    this.validationResults = [];\n    this.pricingData = null;\n    this.availableOptions = [];\n    this.error = null;\n    this.configurationId = null;\n    this.isDirty = false;\n    this.currentStep = 0;\n    this._clearAllTimers();\n  }\n\n  // Test API connection\n  async _testConnection() {\n    if (!window.__API_BASE_URL__) return;\n\n    try {\n      const response = await fetch(`${window.__API_BASE_URL__}/health`);\n      if (response.ok) {\n        console.log('✅ API connection successful');\n      } else {\n        console.warn('⚠️ API health check returned:', response.status);\n      }\n    } catch (error) {\n      console.error('❌ API connection failed:', error.message);\n    }\n  }\n\n  // Utility methods\n  _debounce(key, fn, delay) {\n    this._clearTimer(key);\n    const timer = setTimeout(fn, delay);\n    this._debounceTimers.set(key, timer);\n  }\n\n  _clearTimer(key) {\n    const timer = this._debounceTimers.get(key);\n    if (timer) {\n      clearTimeout(timer);\n      this._debounceTimers.delete(key);\n    }\n  }\n\n  _clearAllTimers() {\n    for (const timer of this._debounceTimers.values()) {\n      clearTimeout(timer);\n    }\n    this._debounceTimers.clear();\n  }\n\n  _getGroupForOption(optionId) {\n    if (!this.model?.option_groups || !Array.isArray(this.model.option_groups)) return null;\n\n    for (const group of this.model.option_groups) {\n      if (group.options && Array.isArray(group.options) &&\n          group.options.some(opt => opt.id === optionId)) {\n        return group;\n      }\n    }\n    return null;\n  }\n\n  _initializeSelections() {\n    if (!this.model?.option_groups || !Array.isArray(this.model.option_groups)) return;\n\n    for (const group of this.model.option_groups) {\n      if (!group.options || !Array.isArray(group.options)) continue;\n\n      for (const option of group.options) {\n        if (option.preselected && !this.selections[option.id]) {\n          this.selections[option.id] = 1;\n        }\n      }\n    }\n  }\n\n  _parseSelections(selections) {\n    const parsed = {};\n    for (const sel of selections) {\n      if (sel.quantity > 0) {\n        parsed[sel.option_id] = sel.quantity;\n      }\n    }\n    return parsed;\n  }\n\n  async _executeWithRetry(fn, maxRetries = 3) {\n    for (let i = 0; i <= maxRetries; i++) {\n      try {\n        return await fn();\n      } catch (error) {\n        this.error = error.message;\n        this.retryCount = i;\n\n        if (i === maxRetries || error.message.includes('401') || error.message.includes('404')) {\n          console.error('API call failed after retries:', error.message);\n          throw error;\n        }\n\n        // Exponential backoff\n        await new Promise(r => setTimeout(r, Math.pow(2, i) * 1000));\n      }\n    }\n  }\n}\n\n// Export singleton instance\nexport const configStore = new ConfigurationStore();","<!-- web/src/lib/components/ErrorBoundary.svelte -->\n<script>\n  import { onMount } from 'svelte';\n\n  let error = $state(null);\n  let errorInfo = $state(null);\n\n  onMount(() => {\n    const handleError = (event) => {\n      error = event.error || new Error('Unknown error');\n      errorInfo = {\n        componentStack: event.filename || 'Unknown',\n        lineNumber: event.lineno,\n        columnNumber: event.colno\n      };\n      console.error('Error caught by boundary:', error);\n      event.preventDefault();\n    };\n\n    window.addEventListener('error', handleError);\n    window.addEventListener('unhandledrejection', (event) => {\n      error = new Error(event.reason);\n      errorInfo = { componentStack: 'Promise rejection' };\n      event.preventDefault();\n    });\n\n    return () => {\n      window.removeEventListener('error', handleError);\n    };\n  });\n\n  function reset() {\n    error = null;\n    errorInfo = null;\n  }\n\n  function reload() {\n    location.reload();\n  }\n</script>\n\n{#if error}\n  <div class=\"error-boundary\">\n    <div class=\"error-content\">\n      <h2>Something went wrong</h2>\n      <p class=\"error-message\">{error.message}</p>\n\n      {#if import.meta.env.DEV && errorInfo}\n        <details class=\"error-details\">\n          <summary>Error details</summary>\n          <pre>{JSON.stringify(errorInfo, null, 2)}</pre>\n          <pre>{error.stack}</pre>\n        </details>\n      {/if}\n\n      <div class=\"error-actions\">\n        <button onclick={reset} class=\"btn btn-secondary\">\n          Try Again\n        </button>\n        <button onclick={reload} class=\"btn btn-primary\">\n          Reload Page\n        </button>\n      </div>\n    </div>\n  </div>\n{:else}\n  <slot />\n{/if}\n\n<style>\n  .error-boundary {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 400px;\n    padding: 2rem;\n  }\n\n  .error-content {\n    text-align: center;\n    max-width: 500px;\n  }\n\n  .error-content h2 {\n    color: var(--error-color, #dc2626);\n    margin-bottom: 1rem;\n  }\n\n  .error-message {\n    color: var(--text-secondary, #6b7280);\n    margin-bottom: 2rem;\n  }\n\n  .error-details {\n    text-align: left;\n    background: var(--bg-secondary, #f9fafb);\n    padding: 1rem;\n    border-radius: 6px;\n    margin-bottom: 2rem;\n  }\n\n  .error-details summary {\n    cursor: pointer;\n    font-weight: 600;\n    margin-bottom: 0.5rem;\n  }\n\n  .error-details pre {\n    margin: 0;\n    white-space: pre-wrap;\n    word-break: break-word;\n    font-size: 0.75rem;\n  }\n\n  .error-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: center;\n  }\n\n  .btn {\n    padding: 0.625rem 1.25rem;\n    border-radius: 6px;\n    font-weight: 500;\n    font-size: 0.875rem;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .btn-primary {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .btn-primary:hover {\n    background: var(--primary-hover, #2563eb);\n  }\n\n  .btn-secondary {\n    background: var(--secondary-color, #e5e7eb);\n    color: var(--text-primary, #1a1a1a);\n  }\n\n  .btn-secondary:hover {\n    background: var(--secondary-hover, #d1d5db);\n  }\n</style>","<!-- web/src/lib/components/OptionCard.svelte -->\n<script>\n  import { configStore } from '../stores/configuration.svelte.js';\n\n  let { option, group } = $props();\n\n  let quantity = $derived(configStore.selections[option.id] || 0);\n  let isSelected = $derived(quantity > 0);\n  let isAvailable = $derived(\n          !configStore.availableOptions.length ||\n          configStore.availableOptions.some(opt => opt.option_id === option.id)\n  );\n\n  let totalPrice = $derived(quantity * (option.base_price || 0));\n\n  function getMaxQuantity() {\n    if (group.selection_type === 'single') return 1;\n    return group.max_selections || 10;\n  }\n\n  function updateQuantity(newQty) {\n    if (!isAvailable && newQty > 0) return;\n    configStore.updateSelection(option.id, newQty);\n  }\n\n  function increment() {\n    if (quantity < getMaxQuantity()) {\n      updateQuantity(quantity + 1);\n    }\n  }\n\n  function decrement() {\n    if (quantity > 0) {\n      updateQuantity(quantity - 1);\n    }\n  }\n\n  function toggle() {\n    updateQuantity(isSelected ? 0 : 1);\n  }\n</script>\n\n<div\n        class=\"option-card\"\n        class:selected={isSelected}\n        class:unavailable={!isAvailable}\n>\n  <div class=\"option-header\">\n    <h4>{option.name}</h4>\n    {#if option.sku}\n      <span class=\"sku\">SKU: {option.sku}</span>\n    {/if}\n  </div>\n\n  {#if option.description}\n    <p class=\"description\">{option.description}</p>\n  {/if}\n\n  <div class=\"price-section\">\n    <span class=\"base-price\">\n      ${(option.base_price || 0).toFixed(2)}\n      {#if quantity > 1}\n        <span class=\"price-each\">each</span>\n      {/if}\n    </span>\n    {#if quantity > 1}\n      <span class=\"total-price\">\n        Total: ${totalPrice.toFixed(2)}\n      </span>\n    {/if}\n  </div>\n\n  <div class=\"actions\">\n    {#if group.selection_type === 'single'}\n      <button\n              class=\"select-button\"\n              class:selected={isSelected}\n              onclick={toggle}\n              disabled={!isAvailable}\n      >\n        {isSelected ? '✓ Selected' : 'Select'}\n      </button>\n    {:else}\n      <div class=\"quantity-controls\">\n        <button\n                class=\"qty-button\"\n                onclick={decrement}\n                disabled={quantity === 0}\n                aria-label=\"Decrease quantity\"\n        >\n          −\n        </button>\n        <input\n                type=\"number\"\n                value={quantity}\n                min=\"0\"\n                max={getMaxQuantity()}\n                onchange={(e) => updateQuantity(parseInt(e.target.value) || 0)}\n                disabled={!isAvailable}\n                aria-label=\"Quantity\"\n        />\n        <button\n                class=\"qty-button\"\n                onclick={increment}\n                disabled={quantity >= getMaxQuantity() || !isAvailable}\n                aria-label=\"Increase quantity\"\n        >\n          +\n        </button>\n      </div>\n    {/if}\n  </div>\n\n  {#if !isAvailable && !isSelected}\n    <div class=\"unavailable-overlay\">\n      <span>Not available with current selection</span>\n    </div>\n  {/if}\n</div>\n\n<style>\n  .option-card {\n    position: relative;\n    background: white;\n    border: 2px solid var(--border-color, #e5e7eb);\n    border-radius: 8px;\n    padding: 1.25rem;\n    transition: all 0.2s;\n  }\n\n  .option-card:hover:not(.unavailable) {\n    border-color: var(--primary-light, #93bbfc);\n    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);\n  }\n\n  .option-card.selected {\n    border-color: var(--primary-color, #3b82f6);\n    background: var(--primary-bg, #eff6ff);\n  }\n\n  .option-card.unavailable {\n    opacity: 0.6;\n  }\n\n  .option-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: start;\n    margin-bottom: 0.5rem;\n  }\n\n  .option-header h4 {\n    font-size: 1rem;\n    font-weight: 600;\n    color: var(--text-primary, #1a1a1a);\n    margin: 0;\n  }\n\n  .sku {\n    font-size: 0.75rem;\n    color: var(--text-tertiary, #9ca3af);\n  }\n\n  .description {\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n    margin: 0 0 1rem;\n    line-height: 1.5;\n  }\n\n  .price-section {\n    display: flex;\n    justify-content: space-between;\n    align-items: baseline;\n    margin-bottom: 1rem;\n  }\n\n  .base-price {\n    font-size: 1.25rem;\n    font-weight: 600;\n    color: var(--primary-color, #3b82f6);\n  }\n\n  .price-each {\n    font-size: 0.75rem;\n    font-weight: 400;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .total-price {\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .actions {\n    margin-top: auto;\n  }\n\n  .select-button {\n    width: 100%;\n    padding: 0.625rem 1rem;\n    border: 2px solid var(--primary-color, #3b82f6);\n    border-radius: 6px;\n    background: white;\n    color: var(--primary-color, #3b82f6);\n    font-weight: 500;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .select-button:hover:not(:disabled) {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .select-button.selected {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .select-button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .quantity-controls {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n  }\n\n  .qty-button {\n    width: 2rem;\n    height: 2rem;\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 4px;\n    background: white;\n    font-size: 1.125rem;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .qty-button:hover:not(:disabled) {\n    background: var(--bg-hover, #f9fafb);\n    border-color: var(--primary-color, #3b82f6);\n  }\n\n  .qty-button:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .quantity-controls input {\n    width: 3rem;\n    text-align: center;\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 4px;\n    padding: 0.375rem;\n    font-size: 0.875rem;\n  }\n\n  .quantity-controls input:focus {\n    outline: none;\n    border-color: var(--primary-color, #3b82f6);\n  }\n\n  .unavailable-overlay {\n    position: absolute;\n    inset: 0;\n    background: rgba(255, 255, 255, 0.8);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    border-radius: 8px;\n  }\n\n  .unavailable-overlay span {\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n    text-align: center;\n    padding: 1rem;\n  }\n</style>","<!-- web/src/lib/components/OptionGroup.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n    import OptionCard from './OptionCard.svelte';\n\n    let { group } = $props();\n\n    let isExpanded = $state(true);\n    let hasSelection = $derived(\n        group.options && Array.isArray(group.options) &&\n        group.options.some(opt => configStore.selections[opt.id] > 0)\n    );\n\n    // Debug logging\n    $effect(() => {\n        if (group.options?.length === 0) {\n            console.warn(`⚠️ Group \"${group.name}\" has no options!`, {\n                groupId: group.id,\n                groupData: group\n            });\n        }\n    });\n</script>\n\n<div class=\"option-group\" class:has-selection={hasSelection}>\n    <div class=\"group-header\" onclick={() => isExpanded = !isExpanded}>\n        <div class=\"group-info\">\n            <h3>\n                {group.name}\n                {#if group.required}\n                    <span class=\"required\">*</span>\n                {/if}\n            </h3>\n            {#if group.description}\n                <p class=\"group-description\">{group.description}</p>\n            {/if}\n        </div>\n\n        <button class=\"expand-toggle\" aria-label=\"Toggle group\">\n            <svg\n                    class=\"icon\"\n                    class:rotated={!isExpanded}\n                    width=\"20\"\n                    height=\"20\"\n                    viewBox=\"0 0 20 20\"\n            >\n                <path\n                        fill=\"currentColor\"\n                        d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\"\n                />\n            </svg>\n        </button>\n    </div>\n\n    {#if isExpanded}\n        <div class=\"group-content\">\n            <div class=\"selection-info\">\n        <span class=\"selection-type\">\n          {group.selection_type === 'single' ? 'Choose one' : 'Choose multiple'}\n        </span>\n                {#if group.min_selections}\n          <span class=\"selection-constraint\">\n            Min: {group.min_selections}\n          </span>\n                {/if}\n                {#if group.max_selections}\n          <span class=\"selection-constraint\">\n            Max: {group.max_selections}\n          </span>\n                {/if}\n            </div>\n\n            <div class=\"options-grid\">\n                {#if group.options && Array.isArray(group.options)}\n                    {#each group.options as option}\n                        <OptionCard {option} {group} />\n                    {/each}\n                {:else}\n                    <div class=\"no-options\">\n                        <p>No options available</p>\n                        <p class=\"help-text\">Check API response</p>\n                    </div>\n                {/if}\n            </div>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .option-group {\n        background: white;\n        border: 1px solid var(--border-color, #e5e7eb);\n        border-radius: 8px;\n        overflow: hidden;\n        transition: all 0.2s;\n    }\n\n    .option-group.has-selection {\n        border-color: var(--primary-color, #3b82f6);\n        box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);\n    }\n\n    .group-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        padding: 1.25rem;\n        cursor: pointer;\n        user-select: none;\n    }\n\n    .group-header:hover {\n        background: var(--bg-hover, #f9fafb);\n    }\n\n    .group-info h3 {\n        font-size: 1.125rem;\n        font-weight: 600;\n        color: var(--text-primary, #1a1a1a);\n        margin: 0;\n    }\n\n    .required {\n        color: var(--error-color, #dc2626);\n        margin-left: 0.25rem;\n    }\n\n    .group-description {\n        margin: 0.25rem 0 0;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .expand-toggle {\n        background: none;\n        border: none;\n        padding: 0.5rem;\n        cursor: pointer;\n        color: var(--text-secondary, #6b7280);\n        transition: transform 0.2s;\n    }\n\n    .icon {\n        transition: transform 0.2s;\n    }\n\n    .icon.rotated {\n        transform: rotate(-90deg);\n    }\n\n    .group-content {\n        padding: 0 1.25rem 1.25rem;\n    }\n\n    .selection-info {\n        display: flex;\n        gap: 1rem;\n        margin-bottom: 1rem;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .selection-type {\n        font-weight: 500;\n    }\n\n    .selection-constraint {\n        color: var(--text-tertiary, #9ca3af);\n    }\n\n    .options-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));\n        gap: 1rem;\n    }\n\n    .no-options {\n        padding: 2rem;\n        text-align: center;\n        color: var(--text-secondary, #6b7280);\n        background: var(--bg-secondary, #f9fafb);\n        border-radius: 6px;\n    }\n\n    .no-options p {\n        margin: 0 0 0.5rem;\n    }\n\n    .no-options .help-text {\n        font-size: 0.75rem;\n        color: var(--text-tertiary, #9ca3af);\n    }\n\n    @media (max-width: 640px) {\n        .options-grid {\n            grid-template-columns: 1fr;\n        }\n    }\n</style>","<!-- web/src/lib/components/PricingDisplay.svelte -->\n<script>\n  import { configStore } from '../stores/configuration.svelte.js';\n\n  let { detailed = false, showBreakdown = true } = $props();\n\n  let savings = $derived(\n          configStore.adjustments\n                  .filter(adj => adj.amount < 0)\n                  .reduce((total, adj) => total + Math.abs(adj.amount), 0)\n  );\n\n  let additionalCharges = $derived(\n          configStore.adjustments\n                  .filter(adj => adj.amount > 0)\n                  .reduce((total, adj) => total + adj.amount, 0)\n  );\n\n  let formattedPrice = (price) => {\n    return new Intl.NumberFormat('en-US', {\n      style: 'currency',\n      currency: 'USD'\n    }).format(price);\n  };\n</script>\n\n<div class=\"pricing-display\" class:detailed>\n  {#if configStore.isPricing}\n    <div class=\"loading\">\n      <span class=\"spinner\"></span>\n      Calculating price...\n    </div>\n  {:else}\n    <div class=\"price-summary\">\n      <div class=\"price-line total\">\n        <span class=\"label\">Total Price</span>\n        <span class=\"amount\">{formattedPrice(configStore.totalPrice)}</span>\n      </div>\n\n      {#if showBreakdown && (configStore.basePrice !== configStore.totalPrice || detailed)}\n        <div class=\"price-breakdown\">\n          <div class=\"price-line\">\n            <span class=\"label\">Base Price</span>\n            <span class=\"amount\">{formattedPrice(configStore.basePrice)}</span>\n          </div>\n\n          {#if detailed && configStore.adjustments.length > 0}\n            <div class=\"adjustments\">\n              {#each configStore.adjustments as adjustment}\n                <div class=\"price-line adjustment\">\n                  <span class=\"label\">\n                    {adjustment.type === 'discount' ? '−' : '+'}\n                    {adjustment.description}\n                  </span>\n                  <span class=\"amount\" class:discount={adjustment.amount < 0}>\n                    {formattedPrice(Math.abs(adjustment.amount))}\n                  </span>\n                </div>\n              {/each}\n            </div>\n          {:else}\n            {#if savings > 0}\n              <div class=\"price-line\">\n                <span class=\"label\">Savings</span>\n                <span class=\"amount discount\">−{formattedPrice(savings)}</span>\n              </div>\n            {/if}\n\n            {#if additionalCharges > 0}\n              <div class=\"price-line\">\n                <span class=\"label\">Additional Charges</span>\n                <span class=\"amount\">+{formattedPrice(additionalCharges)}</span>\n              </div>\n            {/if}\n          {/if}\n        </div>\n      {/if}\n\n      {#if savings > 0}\n        <div class=\"savings-badge\">\n          You save {formattedPrice(savings)}!\n        </div>\n      {/if}\n    </div>\n  {/if}\n</div>\n\n<style>\n  .pricing-display {\n    background: white;\n    border-radius: 8px;\n    padding: 1rem;\n  }\n\n  .pricing-display.detailed {\n    padding: 1.5rem;\n    border: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .loading {\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n    color: var(--text-secondary, #6b7280);\n    font-size: 0.875rem;\n  }\n\n  .spinner {\n    display: inline-block;\n    width: 1rem;\n    height: 1rem;\n    border: 2px solid var(--border-color, #e5e7eb);\n    border-top-color: var(--primary-color, #3b82f6);\n    border-radius: 50%;\n    animation: spin 0.8s linear infinite;\n  }\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n\n  .price-summary {\n    display: flex;\n    flex-direction: column;\n    gap: 0.75rem;\n  }\n\n  .price-line {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n  }\n\n  .price-line.total {\n    font-size: 1.125rem;\n    font-weight: 600;\n    padding-bottom: 0.75rem;\n    border-bottom: 2px solid var(--border-color, #e5e7eb);\n  }\n\n  .price-line.adjustment {\n    font-size: 0.875rem;\n    padding-left: 1rem;\n  }\n\n  .label {\n    color: var(--text-secondary, #6b7280);\n  }\n\n  .price-line.total .label {\n    color: var(--text-primary, #1a1a1a);\n  }\n\n  .amount {\n    font-weight: 500;\n    color: var(--text-primary, #1a1a1a);\n  }\n\n  .price-line.total .amount {\n    font-size: 1.25rem;\n    color: var(--primary-color, #3b82f6);\n  }\n\n  .amount.discount {\n    color: var(--success-color, #10b981);\n  }\n\n  .price-breakdown {\n    padding-top: 0.75rem;\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .adjustments {\n    display: flex;\n    flex-direction: column;\n    gap: 0.375rem;\n    margin: 0.5rem 0;\n  }\n\n  .savings-badge {\n    background: var(--success-bg, #d1fae5);\n    color: var(--success-color, #10b981);\n    padding: 0.5rem 0.75rem;\n    border-radius: 6px;\n    font-size: 0.875rem;\n    font-weight: 500;\n    text-align: center;\n    margin-top: 0.5rem;\n  }\n</style>","<!-- web/src/lib/components/ValidationDisplay.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n\n    let { compact = false } = $props();\n\n    let groupedErrors = $derived(() => {\n        const groups = {\n            error: [],\n            warning: [],\n            info: []\n        };\n\n        for (const result of configStore.validationResults) {\n            const severity = result.severity || 'error';\n            groups[severity].push(result);\n        }\n\n        return groups;\n    });\n\n    const icons = {\n        error: '❌',\n        warning: '⚠️',\n        info: 'ℹ️'\n    };\n\n    const colors = {\n        error: '#dc2626',\n        warning: '#f59e0b',\n        info: '#3b82f6'\n    };\n</script>\n\n<div class=\"validation-display\" class:compact>\n    {#if configStore.isValidating}\n        <div class=\"validating\">\n            <span class=\"spinner\"></span>\n            Validating configuration...\n        </div>\n    {:else if configStore.validationResults.length === 0}\n        <div class=\"valid-state\">\n            <span class=\"icon\">✅</span>\n            <div class=\"message\">\n                <h4>Configuration Valid</h4>\n                {#if !compact}\n                    <p>Your current selection meets all requirements.</p>\n                {/if}\n            </div>\n        </div>\n    {:else}\n        <div class=\"validation-results\">\n            {#each Object.entries(groupedErrors()) as [severity, errors]}\n                {#if errors.length > 0}\n                    <div class=\"severity-group\">\n                        {#if !compact}\n                            <h4 class=\"severity-header\" style=\"color: {colors[severity]}\">\n                                {icons[severity]} {severity.charAt(0).toUpperCase() + severity.slice(1)}s\n                            </h4>\n                        {/if}\n\n                        <ul class=\"error-list\">\n                            {#each errors as error}\n                                <li class=\"error-item {severity}\">\n                                    {#if compact}\n                                        <span class=\"compact-icon\">{icons[severity]}</span>\n                                    {/if}\n                                    <span class=\"error-message\">{error.message}</span>\n                                    {#if error.field && !compact}\n                                        <span class=\"error-field\">({error.field})</span>\n                                    {/if}\n                                </li>\n                            {/each}\n                        </ul>\n                    </div>\n                {/if}\n            {/each}\n\n            {#if !compact && configStore.validationResults.some(r => r.suggestion)}\n                <div class=\"suggestions\">\n                    <h4>Suggestions</h4>\n                    <ul>\n                        {#each configStore.validationResults.filter(r => r.suggestion) as result}\n                            <li>{result.suggestion}</li>\n                        {/each}\n                    </ul>\n                </div>\n            {/if}\n        </div>\n    {/if}\n</div>\n\n<style>\n    .validation-display {\n        background: white;\n        border-radius: 8px;\n        padding: 1.5rem;\n    }\n\n    .validation-display.compact {\n        padding: 0.75rem;\n    }\n\n    .validating {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        color: var(--text-secondary, #6b7280);\n        font-size: 0.875rem;\n    }\n\n    .spinner {\n        display: inline-block;\n        width: 1rem;\n        height: 1rem;\n        border: 2px solid var(--border-color, #e5e7eb);\n        border-top-color: var(--primary-color, #3b82f6);\n        border-radius: 50%;\n        animation: spin 0.8s linear infinite;\n    }\n\n    @keyframes spin {\n        to { transform: rotate(360deg); }\n    }\n\n    .valid-state {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        padding: 1rem;\n        background: var(--success-bg, #d1fae5);\n        border-radius: 6px;\n    }\n\n    .valid-state .icon {\n        font-size: 2rem;\n    }\n\n    .valid-state h4 {\n        margin: 0;\n        font-size: 1rem;\n        font-weight: 600;\n        color: var(--success-dark, #047857);\n    }\n\n    .valid-state p {\n        margin: 0.25rem 0 0;\n        font-size: 0.875rem;\n        color: var(--success-dark, #047857);\n    }\n\n    .validation-results {\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n    }\n\n    .severity-group {\n        display: flex;\n        flex-direction: column;\n        gap: 0.75rem;\n    }\n\n    .severity-header {\n        margin: 0;\n        font-size: 1rem;\n        font-weight: 600;\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n    }\n\n    .error-list {\n        margin: 0;\n        padding: 0;\n        list-style: none;\n        display: flex;\n        flex-direction: column;\n        gap: 0.5rem;\n    }\n\n    .error-item {\n        display: flex;\n        align-items: start;\n        gap: 0.5rem;\n        padding: 0.75rem;\n        border-radius: 6px;\n        font-size: 0.875rem;\n    }\n\n    .error-item.error {\n        background: var(--error-bg, #fee2e2);\n        color: var(--error-dark, #991b1b);\n    }\n\n    .error-item.warning {\n        background: var(--warning-bg, #fef3c7);\n        color: var(--warning-dark, #92400e);\n    }\n\n    .error-item.info {\n        background: var(--info-bg, #dbeafe);\n        color: var(--info-dark, #1e40af);\n    }\n\n    .compact-icon {\n        flex-shrink: 0;\n    }\n\n    .error-message {\n        flex: 1;\n    }\n\n    .error-field {\n        font-size: 0.75rem;\n        opacity: 0.7;\n    }\n\n    .suggestions {\n        padding: 1rem;\n        background: var(--bg-secondary, #f9fafb);\n        border-radius: 6px;\n    }\n\n    .suggestions h4 {\n        margin: 0 0 0.5rem;\n        font-size: 0.875rem;\n        font-weight: 600;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .suggestions ul {\n        margin: 0;\n        padding-left: 1.25rem;\n    }\n\n    .suggestions li {\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n        margin-bottom: 0.25rem;\n    }\n\n    .compact .error-list {\n        gap: 0.25rem;\n    }\n\n    .compact .error-item {\n        padding: 0.5rem;\n        font-size: 0.75rem;\n    }\n</style>","<!-- web/src/lib/components/ConfigurationSummary.svelte -->\n<script>\n    import { configStore } from '../stores/configuration.svelte.js';\n    import PricingDisplay from './PricingDisplay.svelte';\n    import ValidationDisplay from './ValidationDisplay.svelte';\n\n    let showExportDialog = $state(false);\n    let copySuccess = $state(false);\n    let exportFormat = $state('json');\n\n    async function copyToClipboard() {\n        try {\n            const config = configStore.exportConfiguration();\n            await navigator.clipboard.writeText(JSON.stringify(config, null, 2));\n            copySuccess = true;\n            setTimeout(() => copySuccess = false, 2000);\n        } catch (err) {\n            console.error('Failed to copy:', err);\n        }\n    }\n\n    function exportConfiguration() {\n        const config = configStore.exportConfiguration();\n        let content, mimeType, extension;\n\n        if (exportFormat === 'json') {\n            content = JSON.stringify(config, null, 2);\n            mimeType = 'application/json';\n            extension = 'json';\n        } else {\n            // CSV format\n            const headers = ['Option', 'Quantity', 'Unit Price', 'Total Price'];\n            const rows = configStore.selectedOptions.map(opt => [\n                opt.name,\n                opt.quantity,\n                opt.base_price.toFixed(2),\n                (opt.quantity * opt.base_price).toFixed(2)\n            ]);\n\n            content = [\n                headers.join(','),\n                ...rows.map(row => row.join(','))\n            ].join('\\n');\n\n            mimeType = 'text/csv';\n            extension = 'csv';\n        }\n\n        const blob = new Blob([content], { type: mimeType });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n        a.href = url;\n        a.download = `configuration-${Date.now()}.${extension}`;\n        a.click();\n        URL.revokeObjectURL(url);\n        showExportDialog = false;\n    }\n\n    async function saveConfiguration() {\n        if (!configStore.configurationId) {\n            await configStore.createConfiguration();\n        } else {\n            await configStore.saveConfiguration();\n        }\n    }\n</script>\n\n<div class=\"configuration-summary\">\n    <!-- Summary header -->\n    <div class=\"summary-header\">\n        <h2>Configuration Summary</h2>\n        <div class=\"actions\">\n            <button onclick={() => showExportDialog = true} class=\"btn btn-secondary\">\n                Export\n            </button>\n            <button onclick={saveConfiguration} class=\"btn btn-primary\">\n                Save Configuration\n            </button>\n        </div>\n    </div>\n\n    <!-- Key metrics -->\n    <div class=\"metrics-grid\">\n        <div class=\"metric\">\n            <div class=\"metric-value\">{configStore.selectedOptions.length}</div>\n            <div class=\"metric-label\">Options Selected</div>\n        </div>\n        <div class=\"metric\">\n            <div class=\"metric-value\">{configStore.completionPercentage}%</div>\n            <div class=\"metric-label\">Complete</div>\n        </div>\n        <div class=\"metric\">\n            <div class=\"metric-value status\" class:valid={configStore.isValid}>\n                {configStore.isValid ? '✓ Valid' : '✗ Invalid'}\n            </div>\n            <div class=\"metric-label\">Status</div>\n        </div>\n    </div>\n\n    <!-- Selected options -->\n    <section class=\"section\">\n        <h3>Selected Options</h3>\n        <div class=\"options-table\">\n            <table>\n                <thead>\n                <tr>\n                    <th>Option</th>\n                    <th>Group</th>\n                    <th>Quantity</th>\n                    <th>Unit Price</th>\n                    <th>Total</th>\n                </tr>\n                </thead>\n                <tbody>\n                {#if configStore.selectedOptions.length > 0}\n                    {#each configStore.selectedOptions as option}\n                        <tr>\n                            <td>{option.name}</td>\n                            <td class=\"muted\">{option.group_name}</td>\n                            <td class=\"center\">{option.quantity}</td>\n                            <td class=\"right\">${(option.base_price || 0).toFixed(2)}</td>\n                            <td class=\"right bold\">${((option.quantity || 0) * (option.base_price || 0)).toFixed(2)}</td>\n                        </tr>\n                    {/each}\n                {:else}\n                    <tr>\n                        <td colspan=\"5\" class=\"no-data\">No options selected</td>\n                    </tr>\n                {/if}\n                </tbody>\n            </table>\n        </div>\n    </section>\n\n    <!-- Pricing breakdown -->\n    <section class=\"section\">\n        <h3>Pricing Details</h3>\n        <PricingDisplay detailed={true} />\n    </section>\n\n    <!-- Validation status -->\n    {#if configStore.validationResults.length > 0}\n        <section class=\"section\">\n            <h3>Validation Results</h3>\n            <ValidationDisplay />\n        </section>\n    {/if}\n\n    <!-- Action buttons -->\n    <div class=\"summary-actions\">\n        <button onclick={copyToClipboard} class=\"btn btn-secondary\">\n            {copySuccess ? '✓ Copied!' : 'Copy Configuration'}\n        </button>\n\n        {#if configStore.lastSaved}\n      <span class=\"save-status\">\n        Last saved: {configStore.lastSaved.toLocaleTimeString()}\n      </span>\n        {/if}\n    </div>\n\n    <!-- Export dialog -->\n    {#if showExportDialog}\n        <div class=\"dialog-overlay\" onclick={() => showExportDialog = false}>\n            <div class=\"dialog\" onclick={(e) => e.stopPropagation()}>\n                <h3>Export Configuration</h3>\n\n                <div class=\"export-options\">\n                    <label>\n                        <input\n                                type=\"radio\"\n                                value=\"json\"\n                                bind:group={exportFormat}\n                        />\n                        JSON (Complete configuration data)\n                    </label>\n                    <label>\n                        <input\n                                type=\"radio\"\n                                value=\"csv\"\n                                bind:group={exportFormat}\n                        />\n                        CSV (Selected options only)\n                    </label>\n                </div>\n\n                <div class=\"dialog-actions\">\n                    <button onclick={() => showExportDialog = false} class=\"btn btn-secondary\">\n                        Cancel\n                    </button>\n                    <button onclick={exportConfiguration} class=\"btn btn-primary\">\n                        Export\n                    </button>\n                </div>\n            </div>\n        </div>\n    {/if}\n</div>\n\n<style>\n    .configuration-summary {\n        display: flex;\n        flex-direction: column;\n        gap: 1.5rem;\n    }\n\n    .summary-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        flex-wrap: wrap;\n        gap: 1rem;\n    }\n\n    .summary-header h2 {\n        margin: 0;\n        font-size: 1.5rem;\n        font-weight: 600;\n    }\n\n    .actions {\n        display: flex;\n        gap: 0.75rem;\n    }\n\n    .metrics-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));\n        gap: 1rem;\n    }\n\n    .metric {\n        background: var(--bg-secondary, #f9fafb);\n        padding: 1.5rem;\n        border-radius: 8px;\n        text-align: center;\n    }\n\n    .metric-value {\n        font-size: 2rem;\n        font-weight: 700;\n        color: var(--primary-color, #3b82f6);\n        margin-bottom: 0.5rem;\n    }\n\n    .metric-value.status.valid {\n        color: var(--success-color, #10b981);\n    }\n\n    .metric-value.status:not(.valid) {\n        color: var(--error-color, #dc2626);\n    }\n\n    .metric-label {\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    .section {\n        background: white;\n        border: 1px solid var(--border-color, #e5e7eb);\n        border-radius: 8px;\n        padding: 1.5rem;\n    }\n\n    .section h3 {\n        margin: 0 0 1rem;\n        font-size: 1.125rem;\n        font-weight: 600;\n    }\n\n    .options-table {\n        overflow-x: auto;\n    }\n\n    table {\n        width: 100%;\n        border-collapse: collapse;\n    }\n\n    th {\n        text-align: left;\n        padding: 0.75rem;\n        border-bottom: 2px solid var(--border-color, #e5e7eb);\n        font-weight: 600;\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    td {\n        padding: 0.75rem;\n        border-bottom: 1px solid var(--border-light, #f3f4f6);\n    }\n\n    td.muted {\n        color: var(--text-secondary, #6b7280);\n        font-size: 0.875rem;\n    }\n\n    td.center {\n        text-align: center;\n    }\n\n    td.right {\n        text-align: right;\n    }\n\n    td.bold {\n        font-weight: 600;\n    }\n\n    td.no-data {\n        text-align: center;\n        color: var(--text-secondary, #6b7280);\n        padding: 2rem;\n    }\n\n    .summary-actions {\n        display: flex;\n        align-items: center;\n        gap: 1rem;\n        padding-top: 1rem;\n        border-top: 1px solid var(--border-color, #e5e7eb);\n    }\n\n    .save-status {\n        font-size: 0.875rem;\n        color: var(--text-secondary, #6b7280);\n    }\n\n    /* Dialog styles */\n    .dialog-overlay {\n        position: fixed;\n        inset: 0;\n        background: rgba(0, 0, 0, 0.5);\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        z-index: 1000;\n    }\n\n    .dialog {\n        background: white;\n        border-radius: 8px;\n        padding: 1.5rem;\n        max-width: 400px;\n        width: 90%;\n        box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);\n    }\n\n    .dialog h3 {\n        margin: 0 0 1rem;\n    }\n\n    .export-options {\n        display: flex;\n        flex-direction: column;\n        gap: 0.75rem;\n        margin-bottom: 1.5rem;\n    }\n\n    .export-options label {\n        display: flex;\n        align-items: center;\n        gap: 0.5rem;\n        cursor: pointer;\n    }\n\n    .dialog-actions {\n        display: flex;\n        gap: 0.75rem;\n        justify-content: flex-end;\n    }\n\n    /* Button styles */\n    .btn {\n        padding: 0.625rem 1.25rem;\n        border-radius: 6px;\n        font-weight: 500;\n        font-size: 0.875rem;\n        border: none;\n        cursor: pointer;\n        transition: all 0.2s;\n    }\n\n    .btn:disabled {\n        opacity: 0.5;\n        cursor: not-allowed;\n    }\n\n    .btn-primary {\n        background: var(--primary-color, #3b82f6);\n        color: white;\n    }\n\n    .btn-primary:hover:not(:disabled) {\n        background: var(--primary-hover, #2563eb);\n    }\n\n    .btn-secondary {\n        background: var(--secondary-color, #e5e7eb);\n        color: var(--text-primary, #1a1a1a);\n    }\n\n    .btn-secondary:hover:not(:disabled) {\n        background: var(--secondary-hover, #d1d5db);\n    }\n</style>","<!-- web/src/lib/ConfiguratorApp.svelte -->\n<script>\n  import { onMount, createEventDispatcher } from 'svelte';\n  import { configStore } from './stores/configuration.svelte.js';\n  import ProgressIndicator from './components/ProgressIndicator.svelte';\n  import LoadingSpinner from './components/LoadingSpinner.svelte';\n  import ErrorBoundary from './components/ErrorBoundary.svelte';\n  import OptionGroup from './components/OptionGroup.svelte';\n  import PricingDisplay from './components/PricingDisplay.svelte';\n  import ValidationDisplay from './components/ValidationDisplay.svelte';\n  import ConfigurationSummary from './components/ConfigurationSummary.svelte';\n\n  let {\n    modelId,\n    theme = 'light',\n    apiUrl = '/api/v1',\n    embedMode = false,\n    onComplete = null,\n    onConfigurationChange = null,\n    onError = null\n  } = $props();\n\n  const dispatch = createEventDispatcher();\n\n  let mounted = $state(false);\n  let steps = $derived([\n    { id: 'configure', label: 'Configure', icon: '⚙️' },\n    { id: 'validate', label: 'Validate', icon: '✓' },\n    { id: 'price', label: 'Price', icon: '💰' },\n    { id: 'summary', label: 'Summary', icon: '📋' }\n  ]);\n\n  // Set API URL globally\n  if (typeof window !== 'undefined') {\n    window.__API_BASE_URL__ = apiUrl;\n    console.log('Configurator initialized with API URL:', apiUrl);\n  }\n\n  onMount(() => {\n    configStore.initialize();\n    configStore.setModelId(modelId);\n    mounted = true;\n\n    // Set theme\n    document.documentElement.setAttribute('data-theme', theme);\n\n    // Watch for changes\n    const unsubscribe = $effect.root(() => {\n      $effect(() => {\n        if (onConfigurationChange && Object.keys(configStore.selections).length > 0) {\n          onConfigurationChange(configStore.exportConfiguration());\n        }\n      });\n\n      $effect(() => {\n        if (onError && configStore.error) {\n          onError(configStore.error);\n        }\n      });\n    });\n\n    return () => {\n      unsubscribe();\n      configStore.reset();\n    };\n  });\n\n  function handleComplete() {\n    const config = configStore.exportConfiguration();\n    dispatch('complete', config);\n    onComplete?.(config);\n  }\n\n  function nextStep() {\n    if (configStore.currentStep < steps.length - 1) {\n      configStore.currentStep++;\n    }\n  }\n\n  function prevStep() {\n    if (configStore.currentStep > 0) {\n      configStore.currentStep--;\n    }\n  }\n</script>\n\n<div class=\"configurator-app {embedMode ? 'embed-mode' : ''}\" data-theme={theme}>\n  <ErrorBoundary>\n    {#if !mounted || configStore.isLoading}\n      <LoadingSpinner message=\"Loading configuration...\" />\n    {:else if configStore.error && configStore.retryCount >= 3}\n      <div class=\"error-container\">\n        <div class=\"error-message\">\n          <h3>Configuration Error</h3>\n          <p>{configStore.error}</p>\n          <button onclick={() => location.reload()} class=\"btn btn-primary\">\n            Reload Page\n          </button>\n        </div>\n      </div>\n    {:else}\n      <div class=\"configurator-container\">\n        <!-- Progress indicator -->\n        <ProgressIndicator\n                steps={steps}\n                currentStep={configStore.currentStep}\n                completionPercentage={configStore.completionPercentage}\n        />\n\n        <!-- Main content -->\n        <div class=\"configurator-content\">\n          {#if configStore.currentStep === 0}\n            <!-- Configuration step -->\n            <div class=\"configuration-step\">\n              <h2>Configure Your {configStore.model?.name || 'Product'}</h2>\n\n              {#if configStore.model?.option_groups && Array.isArray(configStore.model.option_groups)}\n                {@const hasAnyOptions = configStore.model.option_groups.some(g => g.options?.length > 0)}\n\n                {#if hasAnyOptions}\n                  <div class=\"option-groups\">\n                    {#each configStore.model.option_groups as group}\n                      <OptionGroup {group} />\n                    {/each}\n                  </div>\n                {:else}\n                  <div class=\"no-options\">\n                    <h3>⚠️ No Options Found</h3>\n                    <p>Groups exist but contain no options.</p>\n                    <p class=\"help\">Check console for API details or use the debug test page.</p>\n                  </div>\n                {/if}\n              {:else}\n                <div class=\"no-options\">\n                  <h3>⚠️ No Configuration Options Available</h3>\n                  <p>The model has no option groups configured.</p>\n                  <p class=\"help\">Check the browser console for API response details.</p>\n                </div>\n              {/if}\n\n              <div class=\"step-actions\">\n                <button\n                        onclick={nextStep}\n                        disabled={!configStore.canProceedToNextStep}\n                        class=\"btn btn-primary\"\n                >\n                  Continue to Validation\n                </button>\n              </div>\n            </div>\n\n          {:else if configStore.currentStep === 1}\n            <!-- Validation step -->\n            <div class=\"validation-step\">\n              <h2>Configuration Validation</h2>\n\n              <ValidationDisplay />\n\n              <div class=\"step-actions\">\n                <button onclick={prevStep} class=\"btn btn-secondary\">\n                  Back\n                </button>\n                <button\n                        onclick={nextStep}\n                        disabled={!configStore.isValid}\n                        class=\"btn btn-primary\"\n                >\n                  Continue to Pricing\n                </button>\n              </div>\n            </div>\n\n          {:else if configStore.currentStep === 2}\n            <!-- Pricing step -->\n            <div class=\"pricing-step\">\n              <h2>Pricing Details</h2>\n\n              <PricingDisplay detailed={true} />\n\n              <div class=\"step-actions\">\n                <button onclick={prevStep} class=\"btn btn-secondary\">\n                  Back\n                </button>\n                <button onclick={nextStep} class=\"btn btn-primary\">\n                  Continue to Summary\n                </button>\n              </div>\n            </div>\n\n          {:else if configStore.currentStep === 3}\n            <!-- Summary step -->\n            <div class=\"summary-step\">\n              <h2>Configuration Summary</h2>\n\n              <ConfigurationSummary />\n\n              <div class=\"step-actions\">\n                <button onclick={prevStep} class=\"btn btn-secondary\">\n                  Back\n                </button>\n                <button onclick={handleComplete} class=\"btn btn-success\">\n                  Complete Configuration\n                </button>\n              </div>\n            </div>\n          {/if}\n        </div>\n\n        <!-- Sidebar (desktop only) -->\n        {#if !embedMode}\n          <aside class=\"configurator-sidebar\">\n            <div class=\"sidebar-section\">\n              <h3>Current Selection</h3>\n              <div class=\"selected-items\">\n                {#each configStore.selectedOptions as option}\n                  <div class=\"selected-item\">\n                    <span>{option.name}</span>\n                    <span class=\"quantity\">×{option.quantity}</span>\n                  </div>\n                {/each}\n              </div>\n            </div>\n\n            <div class=\"sidebar-section\">\n              <h3>Pricing Summary</h3>\n              <PricingDisplay />\n            </div>\n\n            {#if configStore.validationResults.length > 0}\n              <div class=\"sidebar-section\">\n                <h3>Issues</h3>\n                <ValidationDisplay compact={true} />\n              </div>\n            {/if}\n          </aside>\n        {/if}\n      </div>\n    {/if}\n  </ErrorBoundary>\n</div>\n\n<style>\n  .configurator-app {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;\n    color: var(--text-primary, #1a1a1a);\n    background: var(--bg-primary, #ffffff);\n    min-height: 100vh;\n  }\n\n  .configurator-app.embed-mode {\n    min-height: auto;\n    border: 1px solid var(--border-color, #e5e7eb);\n    border-radius: 8px;\n  }\n\n  .error-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    min-height: 400px;\n    padding: 2rem;\n  }\n\n  .error-message {\n    text-align: center;\n    max-width: 400px;\n  }\n\n  .error-message h3 {\n    color: var(--error-color, #dc2626);\n    margin-bottom: 1rem;\n  }\n\n  .configurator-container {\n    display: grid;\n    grid-template-columns: 1fr;\n    gap: 2rem;\n    max-width: 1400px;\n    margin: 0 auto;\n    padding: 2rem;\n  }\n\n  @media (min-width: 1024px) {\n    .configurator-container {\n      grid-template-columns: 1fr 320px;\n    }\n  }\n\n  .configurator-content {\n    background: var(--bg-secondary, #f9fafb);\n    border-radius: 8px;\n    padding: 2rem;\n  }\n\n  .option-groups {\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    margin: 2rem 0;\n  }\n\n  .no-options {\n    padding: 3rem 2rem;\n    text-align: center;\n    background: var(--bg-secondary, #f9fafb);\n    border-radius: 8px;\n    margin: 2rem 0;\n  }\n\n  .no-options h3 {\n    color: var(--error-color, #dc2626);\n    margin-bottom: 1rem;\n  }\n\n  .no-options p {\n    color: var(--text-secondary, #6b7280);\n    margin-bottom: 0.5rem;\n  }\n\n  .no-options .help {\n    font-size: 0.875rem;\n    color: var(--text-tertiary, #9ca3af);\n  }\n\n  .step-actions {\n    display: flex;\n    gap: 1rem;\n    justify-content: flex-end;\n    margin-top: 2rem;\n    padding-top: 2rem;\n    border-top: 1px solid var(--border-color, #e5e7eb);\n  }\n\n  .configurator-sidebar {\n    display: none;\n  }\n\n  @media (min-width: 1024px) {\n    .configurator-sidebar {\n      display: flex;\n      flex-direction: column;\n      gap: 1.5rem;\n    }\n  }\n\n  .sidebar-section {\n    background: var(--bg-secondary, #f9fafb);\n    border-radius: 8px;\n    padding: 1.5rem;\n  }\n\n  .sidebar-section h3 {\n    font-size: 0.875rem;\n    font-weight: 600;\n    text-transform: uppercase;\n    letter-spacing: 0.05em;\n    color: var(--text-secondary, #6b7280);\n    margin-bottom: 1rem;\n  }\n\n  .selected-items {\n    display: flex;\n    flex-direction: column;\n    gap: 0.5rem;\n  }\n\n  .selected-item {\n    display: flex;\n    justify-content: space-between;\n    font-size: 0.875rem;\n  }\n\n  .quantity {\n    color: var(--text-secondary, #6b7280);\n  }\n\n  /* Button styles */\n  .btn {\n    padding: 0.625rem 1.25rem;\n    border-radius: 6px;\n    font-weight: 500;\n    font-size: 0.875rem;\n    border: none;\n    cursor: pointer;\n    transition: all 0.2s;\n  }\n\n  .btn:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  .btn-primary {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n  }\n\n  .btn-primary:hover:not(:disabled) {\n    background: var(--primary-hover, #2563eb);\n  }\n\n  .btn-secondary {\n    background: var(--secondary-color, #e5e7eb);\n    color: var(--text-primary, #1a1a1a);\n  }\n\n  .btn-secondary:hover:not(:disabled) {\n    background: var(--secondary-hover, #d1d5db);\n  }\n\n  .btn-success {\n    background: var(--success-color, #10b981);\n    color: white;\n  }\n\n  .btn-success:hover:not(:disabled) {\n    background: var(--success-hover, #059669);\n  }\n</style>","<!-- web/src/lib/components/LoadingSpinner.svelte -->\n<script>\n  let { message = 'Loading...', size = 'medium' } = $props();\n</script>\n\n<div class=\"loading-spinner {size}\">\n  <div class=\"spinner\"></div>\n  <p class=\"message\">{message}</p>\n</div>\n\n<style>\n  .loading-spinner {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    gap: 1rem;\n    padding: 2rem;\n    min-height: 200px;\n  }\n\n  .loading-spinner.small {\n    min-height: 100px;\n    padding: 1rem;\n  }\n\n  .loading-spinner.large {\n    min-height: 400px;\n  }\n\n  .spinner {\n    width: 3rem;\n    height: 3rem;\n    border: 3px solid var(--border-color, #e5e7eb);\n    border-top-color: var(--primary-color, #3b82f6);\n    border-radius: 50%;\n    animation: spin 1s linear infinite;\n  }\n\n  .small .spinner {\n    width: 2rem;\n    height: 2rem;\n    border-width: 2px;\n  }\n\n  .large .spinner {\n    width: 4rem;\n    height: 4rem;\n    border-width: 4px;\n  }\n\n  @keyframes spin {\n    to { transform: rotate(360deg); }\n  }\n\n  .message {\n    margin: 0;\n    color: var(--text-secondary, #6b7280);\n    font-size: 0.875rem;\n  }\n\n  .large .message {\n    font-size: 1rem;\n  }\n</style>","<!-- web/src/lib/components/ProgressIndicator.svelte -->\n<script>\n  let { steps = [], currentStep = 0, completionPercentage = 0 } = $props();\n</script>\n\n<div class=\"progress-indicator\">\n  <div class=\"steps\">\n    {#each steps as step, index}\n      <div\n              class=\"step\"\n              class:active={index === currentStep}\n              class:completed={index < currentStep}\n      >\n        <div class=\"step-icon\">\n          {#if index < currentStep}\n            ✓\n          {:else}\n            {step.icon || index + 1}\n          {/if}\n        </div>\n        <div class=\"step-label\">{step.label}</div>\n      </div>\n      {#if index < steps.length - 1}\n        <div\n                class=\"step-connector\"\n                class:completed={index < currentStep}\n        ></div>\n      {/if}\n    {/each}\n  </div>\n\n  <div class=\"progress-bar\">\n    <div class=\"progress-fill\" style=\"width: {completionPercentage}%\"></div>\n  </div>\n</div>\n\n<style>\n  .progress-indicator {\n    display: flex;\n    flex-direction: column;\n    gap: 1rem;\n    margin-bottom: 2rem;\n  }\n\n  .steps {\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n  }\n\n  .step {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 0.5rem;\n    flex: 1;\n  }\n\n  .step-icon {\n    width: 2.5rem;\n    height: 2.5rem;\n    border-radius: 50%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: var(--bg-secondary, #f3f4f6);\n    color: var(--text-secondary, #6b7280);\n    font-weight: 600;\n    transition: all 0.3s;\n  }\n\n  .step.active .step-icon {\n    background: var(--primary-color, #3b82f6);\n    color: white;\n    transform: scale(1.1);\n  }\n\n  .step.completed .step-icon {\n    background: var(--success-color, #10b981);\n    color: white;\n  }\n\n  .step-label {\n    font-size: 0.875rem;\n    color: var(--text-secondary, #6b7280);\n    text-align: center;\n  }\n\n  .step.active .step-label {\n    color: var(--primary-color, #3b82f6);\n    font-weight: 600;\n  }\n\n  .step-connector {\n    flex: 1;\n    height: 2px;\n    background: var(--border-color, #e5e7eb);\n    margin: 0 0.5rem 1.5rem;\n  }\n\n  .step-connector.completed {\n    background: var(--success-color, #10b981);\n  }\n\n  .progress-bar {\n    height: 0.5rem;\n    background: var(--bg-secondary, #f3f4f6);\n    border-radius: 0.25rem;\n    overflow: hidden;\n  }\n\n  .progress-fill {\n    height: 100%;\n    background: var(--primary-color, #3b82f6);\n    transition: width 0.3s ease;\n  }\n</style>"],"names":["window","_a","__svelte","v","Set","add","ConfiguratorApiClient","constructor","baseUrl","options","this","__API_BASE_URL__","modelId","authToken","localStorage","getItem","timeout","console","log","hasAuth","request","endpoint","startsWith","url","method","config","mode","credentials","headers","Authorization","body","JSON","stringify","controller","AbortController","timeoutId","setTimeout","abort","response","fetch","signal","clearTimeout","ok","errorText","text","errorMessage","status","statusText","errorJson","parse","message","error","e","includes","Error","result","json","success","data","Array","isArray","Object","keys","slice","name","setAuthToken","token","setItem","removeItem","login","username","password","validateToken","getModel","id","option_groups","groups","getModelOptions","warn","getModelGroups","getModelStatistics","createConfiguration","selections","model_id","formatSelections","getConfiguration","configId","updateConfiguration","validateSelections","getAvailableOptions","calculatePricing","context","getVolumeTiers","simulatePricing","scenarios","entries","filter","_","quantity","map","option_id","configStore","api","_initialized","_debounceTimers","Map","_loadingPromise","initialize","_testConnection","$.user_effect","loadModel","length","model","_debounce","isValid","isDirty","configurationId","saveConfiguration","validationResults","totalPrice","pricingData","total_price","basePrice","base_price","adjustments","selectedOptions","selected","group","option","push","group_name","group_id","completionPercentage","requiredGroups","g","required","completedGroups","some","Math","round","canProceedToNextStep","setModelId","reset","_executeWithRetry","isLoading","ID","Name","description","Description","groupsData","Options","flatOptions","groupMap","forEach","opt","groupId","has","set","groupName","get","from","values","items","choices","optionsData","allOptions","groupOptions","reduce","sum","usingDemoData","groupIndex","_createDemoOptions","optionsCount","_initializeSelections","updateSelection","optionId","max","_getGroupForOption","selection_type","max_selections","isValidating","validation_errors","availableOptions","available_options","isPricing","lastSaved","Date","loadConfiguration","_parseSelections","Promise","all","loadAvailableOptions","exportConfiguration","timestamp","toISOString","is_valid","importConfiguration","currentStep","_clearAllTimers","key","fn","delay","_clearTimer","timer","delete","clear","preselected","parsed","sel","maxRetries","i","retryCount","r","pow","$.set","errorInfo","reload","location","increment","getMaxQuantity","$.get","decrement","toggle","updateQuantity","isSelected","parseInt","target","value","on_click","isExpanded","hasSelection","$.derived","$$props","groupData","$$render","consequent","consequent_1","min_selections","consequent_2","consequent_3","each","node_6","isAvailable","newQty","sku","toFixed","button_1","disabled","consequent_4","alternate","consequent_5","template_effect","$.set_text","text_2","detailed","showBreakdown","savings","adj","amount","total","abs","additionalCharges","formattedPrice","price","Intl","NumberFormat","style","currency","format","$.index","$$anchor","adjustment","set_text","type","$.template_effect","$0","text_4","alternate_1","text_6","compact","groupedErrors","warning","info","severity","icons","colors","$$item","$$array","errors","$.set_style","h4","charAt","toUpperCase","$.each","ul","text_1","text_3","field","consequent_6","suggestion","consequent_7","async","copyToClipboard","navigator","clipboard","writeText","copySuccess","err","__1","showExportDialog","on_click_1","__2","stopPropagation","on_click_3","__3","theme","apiUrl","embedMode","onComplete","onConfigurationChange","onError","dispatch","createEventDispatcher","mounted","steps","label","icon","handleComplete","nextStep","prevStep","onMount","document","documentElement","setAttribute","unsubscribe","handleError","event","componentStack","filename","lineNumber","lineno","columnNumber","colno","preventDefault","addEventListener","reason","removeEventListener","size","$.prop","div_1","step","index","completed","active","hasAnyOptions","div_6","alternate_2","alternate_3","button_3","exportFormat","content","mimeType","extension","rows","join","row","blob","Blob","URL","createObjectURL","a","createElement","href","download","now","click","revokeObjectURL","text_5","toLocaleTimeString","$.bind_group","binding_group","input","$$value","input_1","valid","alternate_6","alternate_5","alternate_4","consequent_8","consequent_9"],"mappings":"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","x_google_ignoreList":[0,1]}